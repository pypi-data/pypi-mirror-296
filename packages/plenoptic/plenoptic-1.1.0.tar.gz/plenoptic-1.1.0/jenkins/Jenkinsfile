pipeline {
  agent none
  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '8', daysToKeepStr: '20'))
    timeout(time: 2, unit: 'HOURS')
  }
  triggers {
    cron '@weekly'
  }
  stages {
    stage('weekly') {
      when {
	triggeredBy 'TimerTrigger'
	branch 'main'
      }
      agent {
        dockerfile {
	  dir 'jenkins'
	  args '--gpus 1'
        }
      }
      environment {
        HOME = pwd(tmp:true)
	OMP_NUM_THREADS = 4
      }
      steps {
	sh 'python3.11 -m venv --system-site-packages $HOME'
	sh '''#!/bin/bash -ex
	  source $HOME/bin/activate
      pip install -U pip
	  pip install -U .[dev] --verbose
      python3.11 -c "import torch; print(torch.cuda.current_device())"
	  python3.11 -m pytest -n 8
	'''
      }
    }
    stage('commit') {
      when {
	not {
	  triggeredBy 'TimerTrigger'
	}
      }
      agent {
        dockerfile {
	  dir 'jenkins'
	  args '--gpus 1'
        }
      }
      environment {
        HOME = pwd(tmp:true)
	OMP_NUM_THREADS = 4
      }
      steps {
	sh 'python3.11 -m venv --system-site-packages $HOME'
	sh '''#!/bin/bash -ex
	  source $HOME/bin/activate
      pip install -U pip
	  pip install .[dev]
      python3.11 -c "import torch; print(torch.cuda.current_device())"
	  python3.11 -m pytest -n 8
	'''
      }
    }
  }
  post {
    failure {
      emailext subject: '$PROJECT_NAME - Build #$BUILD_NUMBER - $BUILD_STATUS',
	       body: '''$PROJECT_NAME - Build #$BUILD_NUMBER - $BUILD_STATUS

Check console output at $BUILD_URL to view full results.

Building $BRANCH_NAME for $CAUSE
$JOB_DESCRIPTION

Chages:
$CHANGES

End of build log:
${BUILD_LOG,maxLines=200}
''',
	       recipientProviders: [
		 [$class: 'DevelopersRecipientProvider'],
	       ],
	       replyTo: '$DEFAULT_REPLYTO'
    }
  }
}
