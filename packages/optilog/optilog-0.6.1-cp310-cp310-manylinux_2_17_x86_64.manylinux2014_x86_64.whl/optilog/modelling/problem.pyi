from .expressions import *
from .translators import CNFPlusToCNFTranslator as CNFPlusToCNFTranslator, CNFPlusTranslator as CNFPlusTranslator, ImplicationTranslator as ImplicationTranslator
from _typeshed import Incomplete
from optilog.formulas import CNF as CNF

class Problem:
    """
    A general class to represent problems that can be solved or manipulated.
    It assumes the conjunction of expressions.
    """
    mapping: Incomplete
    constraints: Incomplete
    name: Incomplete
    def __init__(self, expr: Incomplete | None = None, name: Incomplete | None = None) -> None: ...
    def add_var(self, var) -> None: ...
    def has_variable(self, variable): ...
    def evaluate(self, interpretation): ...
    def add_constr(self, constraint): ...
    def to_cnf_dimacs(self): ...
    def represent(self): ...
