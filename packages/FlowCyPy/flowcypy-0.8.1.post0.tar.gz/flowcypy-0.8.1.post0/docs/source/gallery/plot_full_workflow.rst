
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_full_workflow.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_full_workflow.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_full_workflow.py:


Simulating and Analyzing Flow Cytometer Signals
===============================================

This script demonstrates how to simulate flow cytometer signals using the `FlowCytometer` class
and analyze the results using the `PulseAnalyzer` class from the `FlowCyPy` library.

Flow cytometers measure forward scatter (FSC) and side scatter (SSC) signals when particles pass through a laser beam,
providing information about particle size, complexity, and other characteristics.

Steps in this Workflow:
-----------------------
1. Define a particle size distribution using `ScattererDistribution`.
2. Simulate flow cytometer signals using `FlowCytometer`.
3. Analyze the forward scatter signal with `PulseAnalyzer` to extract features like peak height, width, and area.
4. Visualize the generated signals and display the extracted pulse features.

.. GENERATED FROM PYTHON SOURCE LINES 20-21

Step 1: Import necessary modules from FlowCyPy

.. GENERATED FROM PYTHON SOURCE LINES 21-24

.. code-block:: python3

    from FlowCyPy import FlowCytometer, ScattererDistribution, Analyzer, Detector, Source, FlowCell
    from FlowCyPy.distribution import NormalDistribution








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Example usage of the Flow class

.. GENERATED FROM PYTHON SOURCE LINES 26-33

.. code-block:: python3

    flow = FlowCell(
        flow_speed=80e-6,       # 80 micrometers per second
        flow_area=1e-6,         # 1 square micrometer
        total_time=1.0,         # 1 second of flow
        scatterer_density=1e12  # 1e12 particles per cubic meter
    )








.. GENERATED FROM PYTHON SOURCE LINES 34-38

Step 2: Define the particle size distribution
---------------------------------------------
Using a normal size distribution with a mean of 10 µm and a standard deviation of 0.8 µm.
This defines the scatterers (particles) that will interact with the laser source.

.. GENERATED FROM PYTHON SOURCE LINES 38-116

.. code-block:: python3

    size_distribution = NormalDistribution(
        mean=10e-6,         # Mean particle size: 10 µm
        std_dev=0.8e-8,     # Standard deviation of particle size: 0.8 µm
    )

    refractive_index_distribution_0 = NormalDistribution(
        scale_factor=1,
        mean=1.5,
        std_dev=0.01
    )

    refractive_index_distribution_1 = NormalDistribution(
        scale_factor=1,
        mean=1.7,
        std_dev=0.01
    )


    scatterer_distribution = ScattererDistribution(
        flow=flow,
        refractive_index=[refractive_index_distribution_0, refractive_index_distribution_1],        # Refractive index of the particles
        size=[size_distribution] # Normal distribution
    )

    scatterer_distribution.plot()

    # Step 3: Define the light source
    # -------------------------------
    # Define a laser source that illuminates the particles. The wavelength and power of the laser are crucial
    # for determining how the particles scatter light (e.g., Rayleigh scattering is wavelength-dependent).
    source = Source(
        NA=0.3,                      # Numerical aperture of the focusing optics
        wavelength=1550e-9,          # Wavelength of the laser source: 1550 nm
        optical_power=200e-3,        # Optical power of the laser source: 200 milliwatt
    )

    # Step 4: Define the detector
    # ---------------------------
    # A detector is used to measure the scattered light. The detector's numerical aperture and responsitivity
    # affect how much light it collects and converts to an electrical signal.
    detector = Detector(
        phi_angle=90,              # Angle of the detector relative to the incident light beam
        NA=0.4,                      # Numerical aperture of the detector optics
        name='first detector',       # Name or identifier for this detector
        responsitivity=1,            # Responsitivity of the detector (efficiency of detecting scattered light)
        acquisition_frequency=1e4,   # Sampling frequency: 10,000 Hz
        noise_level=0e-2,            # Signal noise level: 1 millivolt
        baseline_shift=0.01,         # Baseline shift of the detector output
        saturation_level=1e30,       # Saturation level of the detector signal
        n_bins=1024                  # Discretization bins for digitizing the signal
    )

    # Step 5: Simulate Flow Cytometer Signals
    # ---------------------------------------
    # Create a FlowCytometer instance to simulate forward and side scatter (FSC/SSC) signals.
    # The source, particle size distribution, and detector are passed in as parameters.
    cytometer = FlowCytometer(
        coupling_mechanism='empirical',    # Use Rayleigh scattering for small particles
        source=source,                    # Laser source defined above
        scatterer_distribution=scatterer_distribution,  # Particle size distribution defined above
        detectors=[detector]              # List of detectors used in the simulation (only one here)
    )

    # Simulate the pulse signals generated as particles pass through the laser beam.
    cytometer.simulate_pulse()

    # Display the properties of the simulated cytometer, including laser power, flow speed, etc.
    cytometer.print_properties()

    # Visualize the simulated signals for FSC/SSC channels.
    cytometer.plot()

    """
    Summary:
    --------
    This script simulates flow cytometer signals, processes them to detect peaks in the forward scatter channel,
    and extracts important features. The process is visualized through signal plots, and key properties are displayed.
    """



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gallery/images/sphx_glr_plot_full_workflow_001.png
         :alt: 2D Density Plot of scatterer properties
         :srcset: /gallery/images/sphx_glr_plot_full_workflow_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gallery/images/sphx_glr_plot_full_workflow_002.png
         :alt: Detector: first detector
         :srcset: /gallery/images/sphx_glr_plot_full_workflow_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Flow Properties

    Flow Properties
    +-----------------------+-----------------------+
    | Property              | Value                 |
    +=======================+=======================+
    | Flow Speed            | 80.00 µm/s            |
    +-----------------------+-----------------------+
    | Flow Area             | 1.00 mm²              |
    +-----------------------+-----------------------+
    | Total Simulation Time | 1.00 s                |
    +-----------------------+-----------------------+
    | Scatterer Density     | 1.00×10⁰ Tparticle/m³ |
    +-----------------------+-----------------------+
    | Number of events      | 8.00×10¹ particle     |
    +-----------------------+-----------------------+

    Scatterer Properties
    +-----------------------+----------------------------+
    | Property              | Value                      |
    +=======================+============================+
    | Mean Refractive Index | 1.60 refractive_index_unit |
    +-----------------------+----------------------------+
    | Mean Size             | 1.00×10¹ µm                |
    +-----------------------+----------------------------+
    | Number of Events      | 80                         |
    +-----------------------+----------------------------+
    | Coupling Factor       | mie                        |
    +-----------------------+----------------------------+

    FlowCytometer Properties

    Source Properties
    +---------------+-------------+
    | Property      | Value       |
    +===============+=============+
    | Optical Power | 200.00 mW   |
    +---------------+-------------+
    | Wavelength    | 1.55×10⁰ µm |
    +---------------+-------------+

    Detector [first detector] Properties
    +-------------------------------+-----------+
    | Property                      | Value     |
    +===============================+===========+
    | Acquisition Frequency         | 10.00 kHz |
    +-------------------------------+-----------+
    | Noise Level                   | 0.00 V    |
    +-------------------------------+-----------+
    | Baseline Shift Amplitude      | 10.00 mV  |
    +-------------------------------+-----------+
    | Saturation Level              | 1.00 QV   |
    +-------------------------------+-----------+
    | Number of Discretization Bins | 1024      |
    +-------------------------------+-----------+

    '\nSummary:\n--------\nThis script simulates flow cytometer signals, processes them to detect peaks in the forward scatter channel,\nand extracts important features. The process is visualized through signal plots, and key properties are displayed.\n'




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.856 seconds)


.. _sphx_glr_download_gallery_plot_full_workflow.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_full_workflow.py <plot_full_workflow.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_full_workflow.ipynb <plot_full_workflow.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
