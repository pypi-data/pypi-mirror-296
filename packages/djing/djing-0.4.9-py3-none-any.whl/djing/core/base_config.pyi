import abc
from abc import abstractmethod
from typing import Self

class BaseConfig(metaclass=abc.ABCMeta):
    @property
    @abstractmethod
    def license_key(self): ...
    @property
    @abstractmethod
    def name(self): ...
    @property
    @abstractmethod
    def path(self) -> str: ...
    @property
    @abstractmethod
    def currency(self): ...
    @property
    @abstractmethod
    def brand_logo(self): ...
    @property
    @abstractmethod
    def brand_colors(self): ...
    @property
    def stripped_path(self): ...
    def validate(self) -> Self: ...
    def update(self) -> None: ...
