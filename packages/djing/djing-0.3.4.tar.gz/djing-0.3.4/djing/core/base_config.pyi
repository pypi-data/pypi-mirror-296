import abc
from abc import abstractmethod
from djing.core.application import Application as Application
from typing import Self

class BaseConfig(metaclass=abc.ABCMeta):
    def __init__(self) -> None: ...
    @property
    def application(self): ...
    @property
    def is_valid(self): ...
    @property
    @abstractmethod
    def license(self): ...
    @property
    @abstractmethod
    def name(self): ...
    @property
    @abstractmethod
    def path(self) -> str: ...
    @property
    def stripped_path(self): ...
    @property
    @abstractmethod
    def currency(self): ...
    @property
    @abstractmethod
    def brand_logo(self): ...
    @property
    @abstractmethod
    def brand_color(self): ...
    @property
    def request(self): ...
    @property
    def base_url(self) -> str: ...
    @property
    def user_model(self): ...
    @property
    def auth(self): ...
    def set_application(self, application) -> None: ...
    def set_valid(self, valid: bool = False) -> Self: ...
    def update(self) -> None: ...
    def __dict__(self): ...
