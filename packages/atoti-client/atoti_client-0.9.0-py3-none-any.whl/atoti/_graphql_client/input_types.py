# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/schema.gql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import RelationshipOptionality


class CreateJoinInput(BaseModel):
    mapping_items: List["CreateJoinMappingItemInput"] = Field(
        serialization_alias="mappingItems"
    )
    name: str
    relationship_optionality: RelationshipOptionality = Field(
        serialization_alias="relationshipOptionality"
    )
    source_table_name: str = Field(serialization_alias="sourceTableName")
    target_table_name: str = Field(serialization_alias="targetTableName")


class CreateJoinMappingItemInput(BaseModel):
    source_column_name: str = Field(serialization_alias="sourceColumnName")
    target_column_name: str = Field(serialization_alias="targetColumnName")


class HierarchyIdentifierInput(BaseModel):
    dimension_name: str = Field(serialization_alias="dimensionName")
    hierarchy_name: str = Field(serialization_alias="hierarchyName")


class SetHierarchyAreMembersIndexedByName(BaseModel):
    value: bool


class SetHierarchyIsVisible(BaseModel):
    value: bool


class UpdateHierarchyAction(BaseModel):
    set_are_members_indexed_by_name: Optional["SetHierarchyAreMembersIndexedByName"] = (
        Field(serialization_alias="setAreMembersIndexedByName", default=None)
    )
    set_is_visible: Optional["SetHierarchyIsVisible"] = Field(
        serialization_alias="setIsVisible", default=None
    )


class UpdateHierarchyInput(BaseModel):
    actions: List["UpdateHierarchyAction"]
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    hierarchy_identifier: "HierarchyIdentifierInput" = Field(
        serialization_alias="hierarchyIdentifier"
    )
