# pyproject.toml, for more information about configuration options, see
# https://setuptools.pypa.io/en/stable/userguide/pyproject_config.html

[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "chatgpt-academic"
authors = [
  { name="Wang Hailin", email="wanghailin@tongji.edu.cn" },
]
description = "ChatGPT Academic"
readme = "README.md"
dynamic = ["version"]
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
dependencies = [
    "fastapi",
    "pypdf2==2.12.1",
    "tiktoken>=0.3.3",
    "requests[socks]",
    "pydantic==1.10.11",
    "transformers>=4.27.1",
    "scipdf-parser>=0.52",
    "python-markdown-math",
    "beautifulsoup4",
    "prompt_toolkit",
    "latex2mathml",
    "python-docx",
    "mdtex2html",
    "anthropic",
    "pyautogen",
    "colorama",
    "Markdown",
    "pygments",
    "pymupdf",
    "openai",
    "numpy",
    "arxiv",
    "rich",
    "pypdf2==2.12.1",
    "websocket-client",
    "scipdf-parser>=0.3",
    # required by gradio
    "aiofiles",
    "aiohttp",
    "altair>=4.2.0",
    "fastapi",
    "ffmpy",
    "gradio-client>=0.2.4",
    "httpx",
    "huggingface-hub>=0.13.0",
    "jinja2",
    "markdown-it-py[linkify]>=2.0.0",
    "markupsafe",
    "matplotlib",
    "mdit-py-plugins<=0.3.3",
    "numpy",
    "orjson",
    "pandas",
    "pillow",
    "pydantic",
    "pydub",
    "pygments>=2.12.0",
    "python-multipart",
    "pyyaml",
    "requests",
    "semantic-version",
    "typing-extensions",
    "uvicorn>=0.14.0",
    "websockets>=10.0",
    "rich",
]

[project.optional-dependencies]
all = ["chatgpt-academic[dev,chatglm,chatglm_onnx,jittorllms,moss,newbing,qwen,slackclaude]"]
dev = [
    "pyinstaller>=6.1.0",
]
chatglm = [
    "protobuf",
    "cpm_kernels",
    "torch>=1.10",
    "mdtex2html",
    "sentencepiece",
]
chatglm_onnx = [
    "protobuf",
    "cpm_kernels",
    "torch>=1.10",
    "mdtex2html",
    "sentencepiece",
    "numpy",
    "onnxruntime",
    "sentencepiece",
]
jittorllms = [
    "jittor>=1.3.7.9",
    "jtorch>=0.1.3",
    "torch",
    "torchvision",
    "pandas",
    "jieba",
]
# TODO `triton` dependency resolve error
moss = [
    "torch",
    "sentencepiece",
    "datasets",
    "accelerate",
    "matplotlib",
    "huggingface_hub",
    "triton",
    "streamlit",
]
newbing = [
    "BingImageCreator",
    "certifi",
    "httpx",
    "prompt_toolkit",
    "requests",
    "rich",
    "websockets",
    "httpx[socks]",
]
qwen = [
    "dashscope",
    "modelscope",
    "transformers_stream_generator",
    "auto-gptq",
    "optimum",
    "urllib3<2",
]
slackclaude = [
    "slack-sdk==3.21.3",
]

[project.urls]
"Homepage" = "https://github.com/haiiliin/chatgpt-academic/"

[project.scripts]
chatgpt-academic = "main:main"
gpta = "main:main"

[tool.setuptools]
py-modules = [
    "check_proxy",
    "colorful",
    "config",
    "core_functional",
    "crazy_functional",
    "main",
    "multi_language",
    "toolbox",
]

[tool.setuptools.packages.find]
include = [
    "crazy_functions*",
    "docs*",
    "gradio*",
    "request_llm*",
    "themes*",
]

[tool.setuptools.package-data]
docs = ["logo.png"]
gradio = ["version.txt", "templates/**", "test_data/**"]
themes = ["*.js", "*.css"]

[tool.setuptools_scm]
root = "."
