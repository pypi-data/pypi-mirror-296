# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .console_logs import ConsoleLogs
from .called_function_response import CalledFunctionResponse
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class FunctionsPageOutput(UniversalBaseModel):
    return_value: typing.Optional[typing.Optional[typing.Any]] = None
    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    JS Error from the code. If there are no errors, this will be null
    """

    logs: typing.Optional[typing.List[ConsoleLogs]] = pydantic.Field(default=None)
    """
    Console logs from the code execution
    """

    called_functions: typing.Optional[typing.List[CalledFunctionResponse]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
