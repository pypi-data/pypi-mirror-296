# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from .image_url import ImageUrl


class ConversationEntryContentItem_Text(UniversalBaseModel):
    type: typing.Literal["text"] = "text"
    text: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class ConversationEntryContentItem_ImageUrl(UniversalBaseModel):
    type: typing.Literal["image_url"] = "image_url"
    image_url: typing.Optional[ImageUrl] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


ConversationEntryContentItem = typing.Union[ConversationEntryContentItem_Text, ConversationEntryContentItem_ImageUrl]
