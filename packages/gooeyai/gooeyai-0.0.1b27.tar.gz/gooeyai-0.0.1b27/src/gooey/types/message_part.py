# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .recipe_run_state import RecipeRunState
import pydantic
import typing
from .reply_button import ReplyButton
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class MessagePart(UniversalBaseModel):
    status: RecipeRunState = pydantic.Field()
    """
    Status of the run
    """

    detail: str = pydantic.Field()
    """
    Details about the status of the run as a human readable string
    """

    text: typing.Optional[str] = None
    audio: typing.Optional[str] = None
    video: typing.Optional[str] = None
    buttons: typing.Optional[typing.List[ReplyButton]] = None
    documents: typing.Optional[typing.List[str]] = None
    type: typing.Optional[str] = pydantic.Field(default=None)
    """
    The partial outputs from the bot will be streamed in parts. Use this to update the user interface iteratively.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
