Metadata-Version: 2.1
Name: mlinsights
Version: 0.5.1
Summary: Extends the list of supported operators in onnx reference implementation and onnxruntime, or implements faster versions in C++.
Home-page: https://github.com/sdpython/mlinsights
Author: Xavier Dupré
Author-email: Xavier Dupré <xavier.dupre@gmail.com>
License: ﻿Copyright (c) 2017-2024, Xavier Dupré
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
Project-URL: homepage, https://sdpython.github.io/doc/mlinsights/dev/
Project-URL: documentation, https://sdpython.github.io/doc/mlinsights/dev/
Project-URL: repository, https://github.com/sdpython/mlinsights/
Project-URL: changelog, https://sdpython.github.io/doc/mlinsights/dev/CHANGELOGS.html
Keywords: onnx,cython,scikit-learn,machine-learning
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: C
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: numpy
Requires-Dist: onnx>=1.14.0
Requires-Dist: scipy
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: clang-format; extra == "dev"
Requires-Dist: cmakelang; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Requires-Dist: cython>=3.0.10; extra == "dev"
Requires-Dist: cython-lint; extra == "dev"
Requires-Dist: furo; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: joblib; extra == "dev"
Requires-Dist: lightgbm; extra == "dev"
Requires-Dist: matplotlib; extra == "dev"
Requires-Dist: numpy>=2.0; extra == "dev"
Requires-Dist: onnx-array-api; extra == "dev"
Requires-Dist: onnxruntime; extra == "dev"
Requires-Dist: pandas; extra == "dev"
Requires-Dist: psutil; extra == "dev"
Requires-Dist: pybind11>=2.12.0; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: scikit-learn>=1.3.0; extra == "dev"
Requires-Dist: skl2onnx>=1.14.1; extra == "dev"
Requires-Dist: sphinx; extra == "dev"
Requires-Dist: sphinx-gallery; extra == "dev"
Requires-Dist: sphinx-issues; extra == "dev"
Requires-Dist: sphinx-runpython; extra == "dev"
Requires-Dist: tqdm; extra == "dev"
Requires-Dist: wheel; extra == "dev"


.. image:: https://github.com/sdpython/mlinsights/raw/main/_doc/_static/project_ico.png
    :target: https://github.com/sdpython/mlinsights/

mlinsights: extensions to scikit-learn
======================================

.. image:: https://dev.azure.com/xavierdupre3/mlinsights/_apis/build/status%2Fsdpython.mlinsights%20(2)?branchName=main
    :target: https://dev.azure.com/xavierdupre3/mlinsights/_build/latest?definitionId=16&branchName=main

.. image:: https://badge.fury.io/py/mlinsights.svg
    :target: http://badge.fury.io/py/mlinsights

.. image:: https://img.shields.io/badge/license-MIT-blue.svg
    :alt: MIT License
    :target: http://opensource.org/licenses/MIT

.. image:: https://codecov.io/github/sdpython/mlinsights/coverage.svg?branch=main
    :target: https://codecov.io/github/sdpython/mlinsights?branch=main

.. image:: http://img.shields.io/github/issues/sdpython/mlinsights.png
    :alt: GitHub Issues
    :target: https://github.com/sdpython/mlinsights/issues

.. image:: https://pepy.tech/badge/mlinsights/month
    :target: https://pepy.tech/project/mlinsights/month
    :alt: Downloads

.. image:: https://img.shields.io/github/forks/sdpython/mlinsights.svg
    :target: https://github.com/sdpython/mlinsights/
    :alt: Forks

.. image:: https://img.shields.io/github/stars/sdpython/mlinsights.svg
    :target: https://github.com/sdpython/mlinsights/
    :alt: Stars

.. image:: https://img.shields.io/github/repo-size/sdpython/mlinsights
    :target: https://github.com/sdpython/mlinsights/
    :alt: size

*mlinsights* extends *scikit-learn* with a couple of new models,
transformers, metrics, plotting. It provides new trainers such as
**QuantileLinearRegression** which trains a linear regression with *L1* norm
non-linear correlation based on decision trees, or
**QuantileMLPRegressor** a modification of scikit-learn's MLPRegressor
which trains a multi-layer perceptron with *L1* norm.
It also explores **PredictableTSNE** which trains a supervized
model to replicate *t-SNE* results or a **PiecewiseRegression**
which partitions the data before fitting a model on each bucket.
**PiecewiseTreeRegressor** trains a piecewise regressor using
a linear regression on each piece. **IntervalRegressor** produces
confidence interval by using bootstrapping. **ApproximateNMFPredictor**
approximates a NMF to produce prediction without retraining.

`mlinsights documentation <https://sdpython.github.io/doc/mlinsights/dev/>`_
