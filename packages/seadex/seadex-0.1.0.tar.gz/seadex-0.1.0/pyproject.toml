[tool.poetry]
name = "seadex"
version = "0.1.0"
description = "Python wrapper for the SeaDex API"
authors = ["Ravencentric <me@ravencentric.cc>"]
readme = "README.md"
packages = [{ include = "seadex", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10"
pydantic = ">=2.9.0"
typing-extensions = ">=4.12.2"
pocketbase = { version = ">=0.12.1", python = "<4" }
cyclopts = { version = ">=2.9.9", optional = true }
rich = { version = ">=13.6.0", optional = true }

[tool.poetry.extras]
cli = ["cyclopts", "rich"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.4"
mypy = "^1.11.2"
pytest = "^8.3.3"
coverage = "^7.6.1"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.30"
mkdocstrings = { extras = ["python"], version = "^0.25.1" }
mkdocs-autorefs = "^1.0.1"


[tool.poetry.scripts]
seadex = "seadex.__main__:app"

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
extend-select = ["I"]
fixable = ["ALL"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
strict = true
pretty = true

[[tool.mypy.overrides]]
module = ["pocketbase", "pocketbase.*"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
