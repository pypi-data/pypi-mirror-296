# ########################################## #
#              Backend exceptions            #
# ########################################## #

from thonnycontrib.i18n.languages import tr


class BackendException(BaseException):
    """
        This is the superclass of all the exceptions raised in the
        l1test backend. 
    """
    pass

class EmptyValueError(BackendException, ValueError):
    """
    Exception raised when a value is empty. 
    """
    pass

class CompilationError(BackendException): 
    """
    Exception raised when the parsing by the AST parser, `exec()` or by the `compile()` is failed.
    """
    pass

class CannotImportModuleException(BackendException):
    """
    Exception raised when a module cannot be imported by the importlib library.
    """
    pass

class RuntimeException(BackendException):
    """
    Exception raised when a runtime error is raised by the `exec()` method
    """
    pass

class DoctestParserException(BackendException):
    """
    This should be a superclass of all the exceptions raised by the doctest parser
    """
    def __init__(self, filename, lineno, message):
        super().__init__('File %s, line %s\n%s' % (filename, lineno, message))

class SpaceMissingAfterPromptException(DoctestParserException):
    """
    Exception raised when a <space> charatcer is missing after the L1test symbol ($$$) 
    """
    def __init__(self, filename, lineno, invite_sans_blanc):
        super().__init__(filename, lineno, 
                    'A space is missing\n after the prompt : %s' % (invite_sans_blanc)) 

# ########################################## #
#              Frontend exceptions           #
# ########################################## #
class FrontendException(BaseException):
    """
        This is the superclass of all the exceptions not raised in the
        l1test backend. All the exceptions raised in the frontend 
        must inherit from that class.
    """
    pass

class NoEditorFoundException(FrontendException):
    """
    Exception raised when an editor is not present on the thonny's workbench.
    """
    pass
        
class NotSavedFileException(FrontendException):
    """
    Exception raised when the source code is not saved yet on the disk. 
    """
    pass

class EmptyEditorException(FrontendException):
    """
    Exception raised when an editor is still empty. 
    """
    pass

class NoFunctionSelectedToDocumentException(FrontendException):
    """
    Exception raised when the docstring cannot be generated because
    the selected line doesn't referring any function.
    """
    pass

class DocGeneratorParserException(FrontendException):
    """
    Exception raised when no docstring cannot be generated by the generator.
    This exception is raised when a function signature contains a compilation
    error.
    """
    pass

class BackendNotReadyYetException(FrontendException):
    """
    Exception raised when the thonny's backend is not initialized yet.
    """
    pass

class BackendCoudntBeRestartedException(FrontendException):
    """
    Exception raised when the thonny's backend couldn't be initialized.
    """
    def __init__(self):
        super().__init__(tr("The backend couldn't be restarted.\nPlease restart with the 'Stop' button !"))


# ########################################## #
#              CLI exceptions                #
# ########################################## #

class CliException(FrontendException):
    """
    This is the base class of CLI exceptions
    """
    pass

class IllegalCliArgumentException(CliException):
    pass
    