Metadata-Version: 2.1
Name: hspf_reader
Version: 2.0.2
Summary: Command line script and Python library to read HSPF WDM, binary, and plotgen time series.
Author-email: Tim Cera <tim@cerazone.net>
License: BSD-3-Clause
Project-URL: documentation, https://timcera.bitbucket.io/hspf_reader/docs/index.html#hspf_reader-documentation
Project-URL: github, https://github.com/timcera/hspf_reader
Project-URL: bitbucket, https://bitbucket.org/timcera/hspf_reader/src/main/
Keywords: time-series,hspf,simulation,hydrology,hydrologic,python,cli,command line,script,cli-application
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: cltoolbox>=2.0.0
Requires-Dist: dateparser
Requires-Dist: pandas[excel]
Requires-Dist: pint-pandas
Requires-Dist: pydantic
Requires-Dist: scipy
Requires-Dist: tabulate
Requires-Dist: typing-extensions
Requires-Dist: pint!=0.21.*,<0.22; python_version < "3.9"
Requires-Dist: numpy<2.0,>=1.20; python_version <= "3.9"

.. image:: https://github.com/timcera/hspf_reader/actions/workflows/pypi-package.yml/badge.svg
    :alt: Tests
    :target: https://github.com/timcera/hspf_reader/actions/workflows/pypi-package.yml
    :height: 20

.. image:: https://img.shields.io/coveralls/github/timcera/hspf_reader
    :alt: Test Coverage
    :target: https://coveralls.io/r/timcera/hspf_reader?branch=master
    :height: 20

.. image:: https://img.shields.io/pypi/v/hspf_reader.svg
    :alt: Latest release
    :target: https://pypi.python.org/pypi/hspf_reader/
    :height: 20

.. image:: http://img.shields.io/pypi/l/hspf_reader.svg
    :alt: BSD-3 clause license
    :target: https://pypi.python.org/pypi/hspf_reader/
    :height: 20

.. image:: http://img.shields.io/pypi/dd/hspf_reader.svg
    :alt: hspf_reader downloads
    :target: https://pypi.python.org/pypi/hspf_reader/
    :height: 20

.. image:: https://img.shields.io/pypi/pyversions/hspf_reader
    :alt: PyPI - Python Version
    :target: https://pypi.org/project/hspf_reader/
    :height: 20

hspf_reader - Quick Guide
=========================
The hspf_reader is a pure Python module and command line script to read HSPF
time-series from WDM files, HSPF binary files, and HSPF plotgen files.

Use "wdmtoolbox" to create, examine, read, and write to WDM files.

Use "hspfbintoolbox" to catalog and read HSPF binary output files.

Installation
------------
pip
~~~
.. code-block:: bash

    pip install hspf_reader

conda
~~~~~
.. code-block:: bash

    conda install -c conda-forge hspf_reader

Usage - Command Line
--------------------
Just run 'hspf_reader --help' to get a list of subcommands::


    usage: hspf_reader [-h]
                     {wdm, hbn, plotgen, about} ...

    positional arguments:
      {wdm, hbn, plotgen, about}

    wdm
        Read HSPF WDM files.
    hbn
        Read HSPF binary files.
    plotgen
        Read HSPF plotgen files.
    about
        Display version number and system information.

    optional arguments:
      -h, --help            show this help message and exit

The output time-series data is printed to the screen and you can then redirect
to a file.

Usage - API
-----------
You can use all of the command line subcommands as functions.  The function
signature is identical to the command line subcommands.  The return is always
a PANDAS DataFrame.

Simply import hspf_reader::

    from hspf_reader import hspf_reader

    # Then you could call the functions
    ntsd = hspf_reader.wdm('wdm_file.wdm', 202)

    # Once you have a PANDAS DataFrame you can use that as input to other
    # hspf_reader functions.
    ntsd = hspf_reader.hbn('hbn_file.hbn', "yearly", [,,,"TAET"])
