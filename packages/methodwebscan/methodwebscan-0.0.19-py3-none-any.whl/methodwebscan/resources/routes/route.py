# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
from .security_requirement import SecurityRequirement
from .api_type import ApiType
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Route(UniversalBaseModel):
    path: str
    query_params: typing_extensions.Annotated[typing.Optional[typing.List[str]], FieldMetadata(alias="queryParams")] = (
        None
    )
    security: typing.Optional[SecurityRequirement] = None
    method: str
    type: ApiType
    description: str
    response_properties: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, typing.List[str]]], FieldMetadata(alias="responseProperties")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
