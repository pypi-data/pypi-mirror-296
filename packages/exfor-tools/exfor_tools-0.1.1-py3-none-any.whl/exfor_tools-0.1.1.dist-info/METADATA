Metadata-Version: 2.1
Name: exfor_tools
Version: 0.1.1
Summary: A lightweight interface to grab and organize differential cross sections from EXFOR, using the x4i3 library.
Author: Kyle Beyer
License: MIT License
        
        Copyright (c) 2024 Kyle Beyer
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy >=1.21.5
Requires-Dist: x4i3 >=1.2.0
Requires-Dist: periodictable >1.0

[![Python package](https://github.com/beykyle/exfor_tools/actions/workflows/python-package.yml/badge.svg)](https://github.com/beykyle/exfor_tools/actions/workflows/python-package.yml)
[![PyPI publisher](https://github.com/beykyle/exfor_tools/actions/workflows/pypi-publish.yml/badge.svg)](https://github.com/beykyle/exfor_tools/actions/workflows/pypi-publish.yml)

# exfor-tools
Some lightweight tools to grab data from the [EXFOR database](https://www-nds.iaea.org/exfor/) using the [x4i3 library](https://github.com/afedynitch/x4i3/), and organize it for visualization and use in the calibration of optical potentials

## quick start
```
 pip install exfor-tools
```

Package hosted at [pypi.org/project/exfor-tools/](https://pypi.org/project/exfor-tools/).

## testing

TODO


## examples and tutorials

Check out [examples/](https://github.com/beykyle/exfor_tools/tree/main/examples)



```python
all_entries_lead208_pp = get_exfor_differential_data(
    target=(208, 82),
    projectile=(1, 1),
    quantity="dXS/dA",
    product="EL",
    energy_range=[10, 60], # MeV
)
print(f"Found {len(all_entries_lead208_pp.keys())} entries")
print(all_entries_lead208_pp.keys())
```

should print
```
Found 14 entries
dict_keys(['C0893', 'C1019', 'C2700', 'E1846', 'O0142', 'O0157', 'O0166', 'O0187', 'O0191', 'O0208', 'O0225', 'O0287', 'O0391', 'O0598'])
```

Now we can plot them. 

```
measurements_condensed = sort_measurements_by_energy(all_entries_lead208_pp)
fig, ax = plt.subplots(1, 1, figsize=(6, 12))
entry = all_entries_lead208_pp["C0893"]
entry.plot_experiment(
    ax,
    offsets=50,
    measurements=measurements_condensed,
    label_offset_factor=2,
    label_hloc_deg=150,
    label_energy_err=False,
    label_offset=False,
)
```


This should produce the following figure: 

![](https://github.com/beykyle/exfor_tools/blob/main/assets/lead_208_pp_dxds.png)



