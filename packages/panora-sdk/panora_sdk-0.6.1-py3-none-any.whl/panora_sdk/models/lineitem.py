"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from panora_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing import Optional, TypedDict
from typing_extensions import NotRequired


class LineItemTypedDict(TypedDict):
    name: NotRequired[Nullable[str]]
    r"""The name of the report item"""
    value: NotRequired[Nullable[float]]
    r"""The value of the report item"""
    type: NotRequired[Nullable[str]]
    r"""The type of the report item"""
    parent_item: NotRequired[Nullable[str]]
    r"""The UUID of the parent item"""
    remote_id: NotRequired[Nullable[str]]
    r"""The remote ID of the report item"""
    remote_generated_at: NotRequired[Nullable[datetime]]
    r"""The date when the report item was generated in the remote system"""
    company_info_id: NotRequired[Nullable[str]]
    r"""The UUID of the associated company info object"""
    created_at: NotRequired[datetime]
    r"""The created date of the report item"""
    modified_at: NotRequired[datetime]
    r"""The last modified date of the report item"""


class LineItem(BaseModel):
    name: OptionalNullable[str] = UNSET
    r"""The name of the report item"""

    value: OptionalNullable[float] = UNSET
    r"""The value of the report item"""

    type: OptionalNullable[str] = UNSET
    r"""The type of the report item"""

    parent_item: OptionalNullable[str] = UNSET
    r"""The UUID of the parent item"""

    remote_id: OptionalNullable[str] = UNSET
    r"""The remote ID of the report item"""

    remote_generated_at: OptionalNullable[datetime] = UNSET
    r"""The date when the report item was generated in the remote system"""

    company_info_id: OptionalNullable[str] = UNSET
    r"""The UUID of the associated company info object"""

    created_at: Optional[datetime] = None
    r"""The created date of the report item"""

    modified_at: Optional[datetime] = None
    r"""The last modified date of the report item"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "name",
            "value",
            "type",
            "parent_item",
            "remote_id",
            "remote_generated_at",
            "company_info_id",
            "created_at",
            "modified_at",
        ]
        nullable_fields = [
            "name",
            "value",
            "type",
            "parent_item",
            "remote_id",
            "remote_generated_at",
            "company_info_id",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
