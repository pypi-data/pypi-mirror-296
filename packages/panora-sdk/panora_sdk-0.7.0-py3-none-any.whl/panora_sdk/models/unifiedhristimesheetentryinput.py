"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from panora_sdk.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import Optional, TypedDict
from typing_extensions import NotRequired


class UnifiedHrisTimesheetEntryInputFieldMappingsTypedDict(TypedDict):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedHrisTimesheetEntryInputFieldMappings(BaseModel):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedHrisTimesheetEntryInputTypedDict(TypedDict):
    hours_worked: NotRequired[Nullable[float]]
    r"""The number of hours worked"""
    start_time: NotRequired[Nullable[datetime]]
    r"""The start time of the timesheet entry"""
    end_time: NotRequired[Nullable[datetime]]
    r"""The end time of the timesheet entry"""
    employee_id: NotRequired[Nullable[str]]
    r"""The UUID of the associated employee"""
    remote_was_deleted: NotRequired[bool]
    r"""Indicates if the timesheet entry was deleted in the remote system"""
    field_mappings: NotRequired[Nullable[UnifiedHrisTimesheetEntryInputFieldMappingsTypedDict]]
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    

class UnifiedHrisTimesheetEntryInput(BaseModel):
    hours_worked: OptionalNullable[float] = UNSET
    r"""The number of hours worked"""
    start_time: OptionalNullable[datetime] = UNSET
    r"""The start time of the timesheet entry"""
    end_time: OptionalNullable[datetime] = UNSET
    r"""The end time of the timesheet entry"""
    employee_id: OptionalNullable[str] = UNSET
    r"""The UUID of the associated employee"""
    remote_was_deleted: Optional[bool] = None
    r"""Indicates if the timesheet entry was deleted in the remote system"""
    field_mappings: OptionalNullable[UnifiedHrisTimesheetEntryInputFieldMappings] = UNSET
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["hours_worked", "start_time", "end_time", "employee_id", "remote_was_deleted", "field_mappings"]
        nullable_fields = ["hours_worked", "start_time", "end_time", "employee_id", "field_mappings"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields
                or (
                    k in optional_fields
                    and k in nullable_fields
                    and (
                        self.__pydantic_fields_set__.intersection({n})
                        or k in null_default_fields
                    )  # pylint: disable=no-member
                )
            ):
                m[k] = val

        return m
        
