"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from panora_sdk.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import List, TypedDict
from typing_extensions import NotRequired


class UnifiedAccountingCreditnoteOutputFieldMappingsTypedDict(TypedDict):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedAccountingCreditnoteOutputFieldMappings(BaseModel):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedAccountingCreditnoteOutputRemoteDataTypedDict(TypedDict):
    r"""The remote data of the credit note in the context of the 3rd Party"""
    
    

class UnifiedAccountingCreditnoteOutputRemoteData(BaseModel):
    r"""The remote data of the credit note in the context of the 3rd Party"""
    
    

class UnifiedAccountingCreditnoteOutputTypedDict(TypedDict):
    transaction_date: NotRequired[Nullable[datetime]]
    r"""The date of the credit note transaction"""
    status: NotRequired[Nullable[str]]
    r"""The status of the credit note"""
    number: NotRequired[Nullable[str]]
    r"""The number of the credit note"""
    contact_id: NotRequired[Nullable[str]]
    r"""The UUID of the associated contact"""
    company_id: NotRequired[Nullable[str]]
    r"""The UUID of the associated company"""
    exchange_rate: NotRequired[Nullable[str]]
    r"""The exchange rate applied to the credit note"""
    total_amount: NotRequired[Nullable[float]]
    r"""The total amount of the credit note"""
    remaining_credit: NotRequired[Nullable[float]]
    r"""The remaining credit on the credit note"""
    tracking_categories: NotRequired[Nullable[List[str]]]
    r"""The UUIDs of the tracking categories associated with the credit note"""
    currency: NotRequired[Nullable[str]]
    r"""The currency of the credit note"""
    payments: NotRequired[Nullable[List[str]]]
    r"""The payments associated with the credit note"""
    applied_payments: NotRequired[Nullable[List[str]]]
    r"""The applied payments associated with the credit note"""
    accounting_period_id: NotRequired[Nullable[str]]
    r"""The UUID of the associated accounting period"""
    field_mappings: NotRequired[Nullable[UnifiedAccountingCreditnoteOutputFieldMappingsTypedDict]]
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    id: NotRequired[Nullable[str]]
    r"""The UUID of the credit note record"""
    remote_id: NotRequired[Nullable[str]]
    r"""The remote ID of the credit note in the context of the 3rd Party"""
    remote_data: NotRequired[Nullable[UnifiedAccountingCreditnoteOutputRemoteDataTypedDict]]
    r"""The remote data of the credit note in the context of the 3rd Party"""
    remote_created_at: NotRequired[Nullable[datetime]]
    r"""The date when the credit note was created in the remote system"""
    remote_updated_at: NotRequired[Nullable[datetime]]
    r"""The date when the credit note was last updated in the remote system"""
    created_at: NotRequired[Nullable[datetime]]
    r"""The created date of the credit note record"""
    modified_at: NotRequired[Nullable[datetime]]
    r"""The last modified date of the credit note record"""
    

class UnifiedAccountingCreditnoteOutput(BaseModel):
    transaction_date: OptionalNullable[datetime] = UNSET
    r"""The date of the credit note transaction"""
    status: OptionalNullable[str] = UNSET
    r"""The status of the credit note"""
    number: OptionalNullable[str] = UNSET
    r"""The number of the credit note"""
    contact_id: OptionalNullable[str] = UNSET
    r"""The UUID of the associated contact"""
    company_id: OptionalNullable[str] = UNSET
    r"""The UUID of the associated company"""
    exchange_rate: OptionalNullable[str] = UNSET
    r"""The exchange rate applied to the credit note"""
    total_amount: OptionalNullable[float] = UNSET
    r"""The total amount of the credit note"""
    remaining_credit: OptionalNullable[float] = UNSET
    r"""The remaining credit on the credit note"""
    tracking_categories: OptionalNullable[List[str]] = UNSET
    r"""The UUIDs of the tracking categories associated with the credit note"""
    currency: OptionalNullable[str] = UNSET
    r"""The currency of the credit note"""
    payments: OptionalNullable[List[str]] = UNSET
    r"""The payments associated with the credit note"""
    applied_payments: OptionalNullable[List[str]] = UNSET
    r"""The applied payments associated with the credit note"""
    accounting_period_id: OptionalNullable[str] = UNSET
    r"""The UUID of the associated accounting period"""
    field_mappings: OptionalNullable[UnifiedAccountingCreditnoteOutputFieldMappings] = UNSET
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    id: OptionalNullable[str] = UNSET
    r"""The UUID of the credit note record"""
    remote_id: OptionalNullable[str] = UNSET
    r"""The remote ID of the credit note in the context of the 3rd Party"""
    remote_data: OptionalNullable[UnifiedAccountingCreditnoteOutputRemoteData] = UNSET
    r"""The remote data of the credit note in the context of the 3rd Party"""
    remote_created_at: OptionalNullable[datetime] = UNSET
    r"""The date when the credit note was created in the remote system"""
    remote_updated_at: OptionalNullable[datetime] = UNSET
    r"""The date when the credit note was last updated in the remote system"""
    created_at: OptionalNullable[datetime] = UNSET
    r"""The created date of the credit note record"""
    modified_at: OptionalNullable[datetime] = UNSET
    r"""The last modified date of the credit note record"""
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["transaction_date", "status", "number", "contact_id", "company_id", "exchange_rate", "total_amount", "remaining_credit", "tracking_categories", "currency", "payments", "applied_payments", "accounting_period_id", "field_mappings", "id", "remote_id", "remote_data", "remote_created_at", "remote_updated_at", "created_at", "modified_at"]
        nullable_fields = ["transaction_date", "status", "number", "contact_id", "company_id", "exchange_rate", "total_amount", "remaining_credit", "tracking_categories", "currency", "payments", "applied_payments", "accounting_period_id", "field_mappings", "id", "remote_id", "remote_data", "remote_created_at", "remote_updated_at", "created_at", "modified_at"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields
                or (
                    k in optional_fields
                    and k in nullable_fields
                    and (
                        self.__pydantic_fields_set__.intersection({n})
                        or k in null_default_fields
                    )  # pylint: disable=no-member
                )
            ):
                m[k] = val

        return m
        
