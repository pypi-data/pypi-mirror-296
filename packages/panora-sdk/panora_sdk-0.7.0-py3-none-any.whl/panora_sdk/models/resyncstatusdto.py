"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from panora_sdk.types import BaseModel, Nullable, UNSET_SENTINEL
from pydantic import model_serializer
from typing import TypedDict


class Vertical(str, Enum):
    TICKETING = "ticketing"
    ATS = "ats"
    ACCOUNTING = "accounting"
    HRIS = "hris"
    CRM = "crm"
    FILESTORAGE = "filestorage"
    ECOMMERCE = "ecommerce"
    MARKETINGAUTOMATION = "marketingautomation"

class Status(str, Enum):
    SUCCESS = "success"
    FAIL = "fail"

class ResyncStatusDtoTypedDict(TypedDict):
    timestamp: Nullable[datetime]
    vertical: Nullable[Vertical]
    provider: Nullable[str]
    status: Nullable[Status]
    

class ResyncStatusDto(BaseModel):
    timestamp: Nullable[datetime]
    vertical: Nullable[Vertical]
    provider: Nullable[str]
    status: Nullable[Status]
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = []
        nullable_fields = ["timestamp", "vertical", "provider", "status"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields
                or (
                    k in optional_fields
                    and k in nullable_fields
                    and (
                        self.__pydantic_fields_set__.intersection({n})
                        or k in null_default_fields
                    )  # pylint: disable=no-member
                )
            ):
                m[k] = val

        return m
        
