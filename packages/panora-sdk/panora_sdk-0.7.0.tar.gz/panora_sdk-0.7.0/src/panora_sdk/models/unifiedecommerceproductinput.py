"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .variant import Variant, VariantTypedDict
from panora_sdk.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import List, Optional, TypedDict
from typing_extensions import NotRequired


class UnifiedEcommerceProductInputFieldMappingsTypedDict(TypedDict):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedEcommerceProductInputFieldMappings(BaseModel):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedEcommerceProductInputTypedDict(TypedDict):
    product_url: NotRequired[Nullable[str]]
    r"""The URL of the product"""
    product_type: NotRequired[Nullable[str]]
    r"""The type of the product"""
    product_status: NotRequired[Nullable[str]]
    r"""The status of the product. Either ACTIVE, DRAFT OR ARCHIVED."""
    images_urls: NotRequired[Nullable[List[str]]]
    r"""The URLs of the product images"""
    description: NotRequired[Nullable[str]]
    r"""The description of the product"""
    vendor: NotRequired[Nullable[str]]
    r"""The vendor of the product"""
    variants: NotRequired[List[VariantTypedDict]]
    r"""The variants of the product"""
    tags: NotRequired[Nullable[List[str]]]
    r"""The tags associated with the product"""
    field_mappings: NotRequired[Nullable[UnifiedEcommerceProductInputFieldMappingsTypedDict]]
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    

class UnifiedEcommerceProductInput(BaseModel):
    product_url: OptionalNullable[str] = UNSET
    r"""The URL of the product"""
    product_type: OptionalNullable[str] = UNSET
    r"""The type of the product"""
    product_status: OptionalNullable[str] = UNSET
    r"""The status of the product. Either ACTIVE, DRAFT OR ARCHIVED."""
    images_urls: OptionalNullable[List[str]] = UNSET
    r"""The URLs of the product images"""
    description: OptionalNullable[str] = UNSET
    r"""The description of the product"""
    vendor: OptionalNullable[str] = UNSET
    r"""The vendor of the product"""
    variants: Optional[List[Variant]] = None
    r"""The variants of the product"""
    tags: OptionalNullable[List[str]] = UNSET
    r"""The tags associated with the product"""
    field_mappings: OptionalNullable[UnifiedEcommerceProductInputFieldMappings] = UNSET
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["product_url", "product_type", "product_status", "images_urls", "description", "vendor", "variants", "tags", "field_mappings"]
        nullable_fields = ["product_url", "product_type", "product_status", "images_urls", "description", "vendor", "tags", "field_mappings"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields
                or (
                    k in optional_fields
                    and k in nullable_fields
                    and (
                        self.__pydantic_fields_set__.intersection({n})
                        or k in null_default_fields
                    )  # pylint: disable=no-member
                )
            ):
                m[k] = val

        return m
        
