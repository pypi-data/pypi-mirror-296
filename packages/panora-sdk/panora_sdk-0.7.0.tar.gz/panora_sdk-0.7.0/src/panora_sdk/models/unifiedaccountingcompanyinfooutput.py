"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from panora_sdk.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import List, TypedDict
from typing_extensions import NotRequired


class UnifiedAccountingCompanyinfoOutputFieldMappingsTypedDict(TypedDict):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedAccountingCompanyinfoOutputFieldMappings(BaseModel):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    
    

class UnifiedAccountingCompanyinfoOutputRemoteDataTypedDict(TypedDict):
    r"""The remote data of the company info in the context of the 3rd Party"""
    
    

class UnifiedAccountingCompanyinfoOutputRemoteData(BaseModel):
    r"""The remote data of the company info in the context of the 3rd Party"""
    
    

class UnifiedAccountingCompanyinfoOutputTypedDict(TypedDict):
    name: NotRequired[Nullable[str]]
    r"""The name of the company"""
    legal_name: NotRequired[Nullable[str]]
    r"""The legal name of the company"""
    tax_number: NotRequired[Nullable[str]]
    r"""The tax number of the company"""
    fiscal_year_end_month: NotRequired[Nullable[float]]
    r"""The month of the fiscal year end (1-12)"""
    fiscal_year_end_day: NotRequired[Nullable[float]]
    r"""The day of the fiscal year end (1-31)"""
    currency: NotRequired[Nullable[str]]
    r"""The currency used by the company"""
    urls: NotRequired[Nullable[List[str]]]
    r"""The URLs associated with the company"""
    tracking_categories: NotRequired[Nullable[List[str]]]
    r"""The UUIDs of the tracking categories used by the company"""
    field_mappings: NotRequired[Nullable[UnifiedAccountingCompanyinfoOutputFieldMappingsTypedDict]]
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    id: NotRequired[Nullable[str]]
    r"""The UUID of the company info record"""
    remote_id: NotRequired[Nullable[str]]
    r"""The remote ID of the company info in the context of the 3rd Party"""
    remote_data: NotRequired[Nullable[UnifiedAccountingCompanyinfoOutputRemoteDataTypedDict]]
    r"""The remote data of the company info in the context of the 3rd Party"""
    remote_created_at: NotRequired[Nullable[datetime]]
    r"""The date when the company info was created in the remote system"""
    created_at: NotRequired[Nullable[datetime]]
    r"""The created date of the company info record"""
    modified_at: NotRequired[Nullable[datetime]]
    r"""The last modified date of the company info record"""
    

class UnifiedAccountingCompanyinfoOutput(BaseModel):
    name: OptionalNullable[str] = UNSET
    r"""The name of the company"""
    legal_name: OptionalNullable[str] = UNSET
    r"""The legal name of the company"""
    tax_number: OptionalNullable[str] = UNSET
    r"""The tax number of the company"""
    fiscal_year_end_month: OptionalNullable[float] = UNSET
    r"""The month of the fiscal year end (1-12)"""
    fiscal_year_end_day: OptionalNullable[float] = UNSET
    r"""The day of the fiscal year end (1-31)"""
    currency: OptionalNullable[str] = UNSET
    r"""The currency used by the company"""
    urls: OptionalNullable[List[str]] = UNSET
    r"""The URLs associated with the company"""
    tracking_categories: OptionalNullable[List[str]] = UNSET
    r"""The UUIDs of the tracking categories used by the company"""
    field_mappings: OptionalNullable[UnifiedAccountingCompanyinfoOutputFieldMappings] = UNSET
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    id: OptionalNullable[str] = UNSET
    r"""The UUID of the company info record"""
    remote_id: OptionalNullable[str] = UNSET
    r"""The remote ID of the company info in the context of the 3rd Party"""
    remote_data: OptionalNullable[UnifiedAccountingCompanyinfoOutputRemoteData] = UNSET
    r"""The remote data of the company info in the context of the 3rd Party"""
    remote_created_at: OptionalNullable[datetime] = UNSET
    r"""The date when the company info was created in the remote system"""
    created_at: OptionalNullable[datetime] = UNSET
    r"""The created date of the company info record"""
    modified_at: OptionalNullable[datetime] = UNSET
    r"""The last modified date of the company info record"""
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["name", "legal_name", "tax_number", "fiscal_year_end_month", "fiscal_year_end_day", "currency", "urls", "tracking_categories", "field_mappings", "id", "remote_id", "remote_data", "remote_created_at", "created_at", "modified_at"]
        nullable_fields = ["name", "legal_name", "tax_number", "fiscal_year_end_month", "fiscal_year_end_day", "currency", "urls", "tracking_categories", "field_mappings", "id", "remote_id", "remote_data", "remote_created_at", "created_at", "modified_at"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields
                or (
                    k in optional_fields
                    and k in nullable_fields
                    and (
                        self.__pydantic_fields_set__.intersection({n})
                        or k in null_default_fields
                    )  # pylint: disable=no-member
                )
            ):
                m[k] = val

        return m
        
