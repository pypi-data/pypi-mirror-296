"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from panora_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing import TypedDict
from typing_extensions import NotRequired


class UnifiedAccountingAddressOutputFieldMappingsTypedDict(TypedDict):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""


class UnifiedAccountingAddressOutputFieldMappings(BaseModel):
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""


class UnifiedAccountingAddressOutputRemoteDataTypedDict(TypedDict):
    r"""The remote data of the address in the context of the 3rd Party"""


class UnifiedAccountingAddressOutputRemoteData(BaseModel):
    r"""The remote data of the address in the context of the 3rd Party"""


class UnifiedAccountingAddressOutputTypedDict(TypedDict):
    type: NotRequired[Nullable[str]]
    r"""The type of the address"""
    street_1: NotRequired[Nullable[str]]
    r"""The first line of the street address"""
    street_2: NotRequired[Nullable[str]]
    r"""The second line of the street address"""
    city: NotRequired[Nullable[str]]
    r"""The city of the address"""
    state: NotRequired[Nullable[str]]
    r"""The state of the address"""
    country_subdivision: NotRequired[Nullable[str]]
    r"""The country subdivision (e.g., province or state) of the address"""
    country: NotRequired[Nullable[str]]
    r"""The country of the address"""
    zip: NotRequired[Nullable[str]]
    r"""The zip or postal code of the address"""
    contact_id: NotRequired[Nullable[str]]
    r"""The UUID of the associated contact"""
    company_info_id: NotRequired[Nullable[str]]
    r"""The UUID of the associated company info"""
    field_mappings: NotRequired[
        Nullable[UnifiedAccountingAddressOutputFieldMappingsTypedDict]
    ]
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""
    id: NotRequired[Nullable[str]]
    r"""The UUID of the address record"""
    remote_id: NotRequired[Nullable[str]]
    r"""The remote ID of the address in the context of the 3rd Party"""
    remote_data: NotRequired[
        Nullable[UnifiedAccountingAddressOutputRemoteDataTypedDict]
    ]
    r"""The remote data of the address in the context of the 3rd Party"""
    created_at: NotRequired[Nullable[datetime]]
    r"""The created date of the address record"""
    modified_at: NotRequired[Nullable[datetime]]
    r"""The last modified date of the address record"""


class UnifiedAccountingAddressOutput(BaseModel):
    type: OptionalNullable[str] = UNSET
    r"""The type of the address"""

    street_1: OptionalNullable[str] = UNSET
    r"""The first line of the street address"""

    street_2: OptionalNullable[str] = UNSET
    r"""The second line of the street address"""

    city: OptionalNullable[str] = UNSET
    r"""The city of the address"""

    state: OptionalNullable[str] = UNSET
    r"""The state of the address"""

    country_subdivision: OptionalNullable[str] = UNSET
    r"""The country subdivision (e.g., province or state) of the address"""

    country: OptionalNullable[str] = UNSET
    r"""The country of the address"""

    zip: OptionalNullable[str] = UNSET
    r"""The zip or postal code of the address"""

    contact_id: OptionalNullable[str] = UNSET
    r"""The UUID of the associated contact"""

    company_info_id: OptionalNullable[str] = UNSET
    r"""The UUID of the associated company info"""

    field_mappings: OptionalNullable[UnifiedAccountingAddressOutputFieldMappings] = (
        UNSET
    )
    r"""The custom field mappings of the object between the remote 3rd party & Panora"""

    id: OptionalNullable[str] = UNSET
    r"""The UUID of the address record"""

    remote_id: OptionalNullable[str] = UNSET
    r"""The remote ID of the address in the context of the 3rd Party"""

    remote_data: OptionalNullable[UnifiedAccountingAddressOutputRemoteData] = UNSET
    r"""The remote data of the address in the context of the 3rd Party"""

    created_at: OptionalNullable[datetime] = UNSET
    r"""The created date of the address record"""

    modified_at: OptionalNullable[datetime] = UNSET
    r"""The last modified date of the address record"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "type",
            "street_1",
            "street_2",
            "city",
            "state",
            "country_subdivision",
            "country",
            "zip",
            "contact_id",
            "company_info_id",
            "field_mappings",
            "id",
            "remote_id",
            "remote_data",
            "created_at",
            "modified_at",
        ]
        nullable_fields = [
            "type",
            "street_1",
            "street_2",
            "city",
            "state",
            "country_subdivision",
            "country",
            "zip",
            "contact_id",
            "company_info_id",
            "field_mappings",
            "id",
            "remote_id",
            "remote_data",
            "created_at",
            "modified_at",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
