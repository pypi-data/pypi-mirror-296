[tool.poetry]
name = "huma-utils"
version = "0.10.1"
description = "Huma Python utilities library"
authors = ["Flora Huang <flora@huma.finance>", "Jiatu Liu <jiatu@huma.finance>"]
readme = "README.md"
packages = [{include = "huma_utils"}]

[tool.poetry.dependencies]
python = "~3.11"
httpx = "^0.24.1"
orjson = "^3.9.1"
pydantic = "^1.10.9"
web3 = "^6.4.0"
fastapi = "^0.101.1"
cryptography = "^41.0.3"
pyjwt = "^2.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.2"
pytest-describe = "^2.1.0"
pytest-asyncio = "^0.21.0"
black = "^23.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
autoflake = "^2.1.1"
mypy = "^1.3.0"
pylint = "^2.17.4"
pylint-google-style-guide-imports-enforcing = "^1.3.0"
pytest-spec = "^3.2.0"
pylint-pydantic = "^0.1.8"
pre-commit = "^3.3.3"
pytest-cov = "^4.1.0"
types-factory-boy = "^0.4.1"
vcrpy = "^4.3.1"
factory-boy = "^3.2.1"
pycryptodome = "^3.18.0"

[tool.pytest.ini_options]
describe_prefixes = ["describe", "if", "when", "with", "without"]
asyncio_mode = "auto"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.autoflake]
in-place = true
remove-all-unused-imports = true
ignore-init-module-imports = true

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_configs = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = ["vcr"]
ignore_missing_imports = true

[tool.pylint.messages_control]
# C0103, C0114, C0115, C0116: docstring and file name formats.
# R0801: similar lines.
# R0903: too fee public methods.
# W0511: TODOs.
disable = "C0103, C0114, C0115, C0116, R0801, R0903, W0511"
# https://github.com/samuelcolvin/pydantic/issues/1961
extension-pkg-whitelist = "pydantic, orjson"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.master]
load-plugins = "pylint_google_style_guide_imports_enforcing, pylint_pydantic"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
