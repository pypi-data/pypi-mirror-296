{"version":3,"file":"Trinket.DFTRZW5T.js","sources":["../../../../../../src/lib/trinkets/Slang/screenplays/nocturnalize.js","../../../../../../src/lib/trinkets/Slang/Trinket.svelte"],"sourcesContent":["\n\nimport { has_field } from 'procedures/object/has_field'\n\n/*\n\tThis splits both \" \" and \".\"\n*/\nconst split = ({ text }) => {\n\tconst words = text.split (\" \");\n\n\tlet last = words.length - 1;\n\tfor (let E = 0; E <= last; E++) {\n\t\tconst is_last = last === E;\n\t\tconst word_1 = words [E];\n\t\t\n\t\t/* if the word ends with a . */\n\t\tif (word_1.endsWith (\".\")) {\n\t\t\twords [E] = word_1.substring (0, word_1.length - 1)\n\t\t\twords.splice (E + 1, 0, \".\");\n\t\t\tcontinue;\n\t\t}\n\t\telse {\n\t\t\tif (!is_last) {\n\t\t\t\twords.splice (E + 1, 0, \" \");\n\t\t\t\tE = E + 1;\n\t\t\t\tlast = words.length - 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn words;\n}\n\nconst retrieve_search_2 = ({ last, E, words }) => {\n\t/* if iterator is less than 2 before last, there is a search_2 */\n\t\n\tlet search_2 = \"\"\n\tif (E + 1 <= last) {\n\t\tsearch_2 = words [E] + \" \" + words [E + 2]\n\t}\n\t\n\treturn search_2;\n}\n\nexport const nocturnalize = ({\n\tlegend_language,\n\ttext\n}) => {\n\tvar saying = []\n\t\n\tconst words = split ({ text })\n\t// console.log ({ words })\n\t\n\tconst last = words.length - 1;\n\tfor (let E = 0; E <= last; E++) {\n\t\tconst is_last = last === E;\n\t\tconst is_2_before_last = last === E + 1;\n\t\t\n\t\tconst search_1 = words [E];\n\t\tlet search_2 = retrieve_search_2 ({ last, E, words })\n\n\t\t\n\t\t// console.log ({ search_1, search_2 });\n\t\t\n\t\tif (has_field (legend_language, search_1)) {\n\t\t\t// This checks for 1 word legends\n\t\t\t\n\t\t\tsaying.push ({\n\t\t\t\ttext: legend_language [ search_1 ],\n\t\t\t\tcode: \"yes\"\n\t\t\t})\n\t\t}\n\t\telse if (has_field (legend_language, search_2)) {\n\t\t\t// This checks for 2 word legends\n\t\t\t\n\t\t\tsaying.push ({\n\t\t\t\ttext: legend_language [ search_2 ],\n\t\t\t\tcode: \"yes\"\n\t\t\t})\n\t\t\tE = E + 2;\n\t\t}\n\t\telse {\n\t\t\tsaying.push ({\n\t\t\t\ttext: search_1\n\t\t\t})\n\t\t}\n\t}\n\t\n\treturn saying;\n}","\n\n<script>\n\n/*\n\timport Slang from '$lib/trinkets/Slang/Trinket.svelte'\n\t<Slang text=\"transaction\" />\n*/\n\n/*\n\tCurrently supports replacing 1 or 2 word sayings.\n*/\n\n/*\n\t@ Legend\n\t\t@ Vernacular\n\t\t@ Jargon\n*/\n\n/*\n\tDecipher Aristocratic English into Regular English.\n*/\n\n/*\n\t@ blockchain\n\t\t@ map\n\n\t@ transaction\n\t\t@ story\n\t\t@ line\n\t\t\n\t@ account \n\t\t{\n\t\t\t@ private key\n\t\t\t@ public key\n\t\t\t@ address\n\t\t\t@ legacy address\n\t\t}\n\t\t\n\t@ signer\n\t\t@ sender\n*/\n\nimport { has_field } from 'procedures/object/has_field'\nimport { onMount } from 'svelte'\nimport nlp from 'compromise/one'\nimport { nocturnalize } from './screenplays/nocturnalize'\n\nconst language = \"English\"\nconst legend = {\n\t\"Chinese\": {},\n\t\"Francais\": {},\n\t\"Spanish\": {},\n\t\n\t\"English\": {\n\t\t// \"Label\": \"Orbital Covergence Softwhere\",\t\n\t\t// \"Label\": \"Aptos Softwhere\",\t\n\t\t\"Label\": \"Foam\",\t\n\t\t\n\t\t//\n\t\t//\tICANN+IANA Lagrange Neural Lattice\n\t\t//\tICANN+IANA Lagrange Neuron\n\t\t//\n\t\t\"Internet_Location\": \"ICANN+IANA Lagrange Neuron\",\n\t\t\"Internet\": \"ICANN/IANA Lagrange Neural Lattice\",\n\t\t\n\t\t\n\t\t\"Aptos\": \"Aptos\",\n\t\t\n\t\t// Vehicles\n\t\t\"Account\": \"Account\",\n\t\t\"Accounts\": \"Accounts\",\n\t\t\n\t\t// Character\n\t\t\"Address\": \"Address\",\n\t\t\"Addresses\": \"Addresses\",\t\t\n\t\t\n\t\t\"consensus\": \"Group\",\n\t\t\"Consensus\": \"Group\",\n\t\t\n\t\t// Map\n\t\t// Story\n\t\t\"blockchain\": \"Story\",\n\t\t\"Blockchain\": \"Story\",\n\t\t\n\t\t\n\t\t\"Key\": \"Key\",\n\t\t\"Keys\": \"Keys\",\n\t\t\n\t\t\"Sender\": \"Sender\",\n\t\t\n\t\t\"signature\": \"Signature\",\n\t\t\"Signature\": \"Signature\",\n\t\t\"Signatures\": \"Signatures\",\n\t\t\"Sign\": \"Sign\",\n\t\t\"Signer\": \"Signer\",\t\t\n\t\t\"Signing\": \"Signing\",\n\t\t\"Signed\": \"Signed\",\n\n\t\t\"the_pypi_module\": \"foam_rodeo\",\n\n\t\t// Play\n\t\t// Note\n\t\t\"transaction\": \"Note\",\n\t\t\"Transaction\": \"Note\",\n\t\t\"Transactions\": \"Notes\",\n\n\t\t\"Petition\": \"Petition\",\n\t\t\"Petitions\": \"Petitions\",\n\t\t\n\t\t\"private key\": \"private key\",\n\t\t\"Private Key\": \"Private Key\",\n\t\t\"Private Keys\": \"Private Keys\",\n\t\t\n\t\t\"public key\": \"public key\",\n\t\t\"Public Key\": \"Public Key\"\t,\n\t\t\"Public Keys\": \"Public Keys\",\n\t\t\n\t\t\n\t\t// Moon Wallet\n\t\t// Relatives_Habitat\n\t\t// Meteor Wallet\t\t\n\t\t// Relatives Wallet\n\t\t\"Relatives_Habitat\": \"Relatives Habitat\",\n\t\t\n\t\t// Planet Metropolis\n\t\t// Planet_Metropolis\n\t\t// Friends Planet\n\t\t\"Friends_Habitat\": \"Friends Habitat\",\n\t\t\n\t\t// Beacons\n\t\t// Quasars\n\t\t// Organs\n\t\t\"Machine\": \"Meteor\",\n\t\t\"Machines\": \"Meteors\",\n\t\t\n\t\t// Howl\n\t\t// Island + Mainlan\n\t\t// Planet Machine + Meteor Machine\n\t\t// Relatives Meteor\n\t\t\"Online Machine\": \"Friends Meteor\",\n\t\t\"Offline Machine\": \"Relatives Meteor\"\n\t}\n}\n\n// let legendary = legend [ language ] [ text ]\nlet legend_language = legend [ language ]\n\n\n\nexport let text = \"\"\n$: {\n\tlet _text = text;\n\tbuilt = nocturnalize ({ legend_language, text })\n}\n\nvar built = []\n\n\n\n\n\n\nonMount (() => {\n\tbuilt = nocturnalize ({ legend_language, text })\n})\n\n\n</script>\n\n\n\n\n<span>\n\t{#each built as part }\n\t{#if part.code === \"yes\"}\n\t\t<span><code\n\t\t\tclass=\"code\"\n\t\t\tstyle=\"\n\t\t\t\tcolor: inherit;\n\t\t\t\n\t\t\t\tfont-weight: bold;\n\t\t\t\tfont-size: 1em;\n\t\t\t\"\n\t\t>{ part.text }</code></span>\n\t{:else}\n\t\t<span>{ part.text }</span>\n\t{/if}\n\t{/each}\n</span>\n"],"names":["split","text","words","last","E","is_last","word_1","retrieve_search_2","search_2","nocturnalize","legend_language","saying","search_1","has_field","t_value","ctx","insert_hydration","target","span","anchor","dirty","set_data","t","append_hydration","code","create_if_block","i","language","$$props","built","onMount","$$invalidate"],"mappings":"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"}