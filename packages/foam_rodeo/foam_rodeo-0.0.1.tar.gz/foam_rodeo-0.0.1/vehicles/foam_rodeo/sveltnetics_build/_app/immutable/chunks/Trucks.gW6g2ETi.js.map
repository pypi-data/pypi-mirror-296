{"version":3,"file":"Trucks.gW6g2ETi.js","sources":["../../../../../../node_modules/lodash/_isKey.js","../../../../../../node_modules/lodash/toString.js","../../../../../../node_modules/lodash/_castPath.js","../../../../../../node_modules/lodash/_toKey.js","../../../../../../node_modules/lodash/_baseSet.js","../../../../../../node_modules/lodash/set.js","../../../../../../src/lib/trucks/index.js","../../../../../../src/lib/Versies/Screenplays/is_connected.js","../../../../../../src/lib/Versies/Trucks.js"],"sourcesContent":["var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","\n\n/*\n\timport { build_truck } from '$lib/trucks'\n\t\n\tconst trucks = {}\n\ttrucks [1] = await build_truck ({\n\t\tfreight: {\n\t\t\tunsigned_transaction_fields: {\n\t\t\t\tICANN_net_path: \"\",\n\t\t\t\tfrom_address_hexadecimal_string: \"\",\n\t\t\t\tto_address_hexadecimal_string: \"\",\n\t\t\t\tamount_of_Octas: \"\",\n\t\t\t\t//\n\t\t\t\ttransaction_expiration: \"\"\n\t\t\t},\n\t\t\t\n\t\t\tunsigned_transaction: {\n\t\t\t\thexadecimal_string: \"\",\n\t\t\t\tAptos_object: {},\n\t\t\t\tAptos_object_fiberized: \"\"\n\t\t\t},\n\t\t\tsignature: {\n\t\t\t\thexadecimal_string: \"\",\n\t\t\t\tAptos_object: {},\n\t\t\t\tAptos_object_fiberized: \"\"\n\t\t\t}\n\t\t}\n\t})\n\t\n\tlet monitor = trucks [1].monitor (({ freight }) => {\n\t\tconsole.log ({ freight })\n\t})\t\n\t\n\ttrucks [1].freight [\"unsigned_transaction_fields\"] [\"ICANN_net_path\"] = \"another.path\"\n\t\n\tdelete trucks [1]\n*/\n\nimport cloneDeep from 'lodash/cloneDeep'\nimport _set from 'lodash/set'\n\nexport const build_truck = ({ freight }) => {\n\tlet the_freight = {}\n\tlet monitors = []\n\tlet change_count = 0\n\t\n\tconst monitor_deep = (obj, on_change) => {\n\t\tconst handler = {\n\t\t\tget (target, property, receiver) {\n\t\t\t\ttry {\n\t\t\t\t\treturn new Proxy (target[property], handler);\n\t\t\t\t} \n\t\t\t\tcatch (err) {\n\t\t\t\t\treturn Reflect.get (target, property, receiver);\n\t\t\t\t}\n\t\t\t},\n\t\t\tset (target, property, value, receiver) {\n\t\t\t\tconst current = target [property];\n\t\t\t\t\n\t\t\t\t/*console.log ({\n\t\t\t\t\tcurrent,\n\t\t\t\t\t\"set_\": {\n\t\t\t\t\t\ttarget, property, value, receiver\n\t\t\t\t\t}\n\t\t\t\t})*/\n\t\t\t\t\n\t\t\t\tconst success = Reflect.set (target, property, value, receiver);\n\t\t\t\tif (success && current !== value) {\n\t\t\t\t\ton_change ();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn success;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn new Proxy (obj, handler);\n\t};\n\tthe_freight = monitor_deep (freight, () => {\n\t\tchange_count += 1\n\t\tfor (let E = 0; E < monitors.length; E++) {\n\t\t\tmonitors [E] ({ freight: the_freight })\n\t\t}\n\t});\n\t\n\tconst monitor = (action) => {\n\t\tmonitors.push (action)\n\t\t\n\t\treturn {\n\t\t\tstop () {\n\t\t\t\tfor (let E = 0; E < monitors.length; E++) {\n\t\t\t\t\tconst monitor = monitors [E]\n\t\t\t\t\tif (monitor === action) {\n\t\t\t\t\t\tmonitors.splice (E, 1)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.error (\"Stopping monitoring was not possible.\")\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// This makes multiple enhances\n\tconst enhance = (keys, contents) => {\n\t\t_set (the_freight, keys, contents);\n\t}\n\t\n\tconst stop = () => {\n\t\tmonitors = []\n\t\t\n\t\tthe_freight.__proto__ = Object.prototype;\n\t\tthe_freight = {}\n\t\t\n\t\tfreight = {}\n\t}\n\t\n\tconst retrieve_change_count = () => {\n\t\treturn change_count\n\t}\n\t\n\treturn {\n\t\tmonitor,\n\t\tmonitors,\n\t\tenhance,\n\t\tfreight: the_freight,\n\t\tretrieve_change_count,\n\t\tstop\n\t}\n}\n","\n/*\n\timport { the_ledger_ask_loop } from './Screenplays/is_connected'\n \n \n\n*/\n\n\n\nimport { loop } from '$lib/taverns/loop'\nimport { request_ledger_info } from '$lib/PTO/General/Ledger_Info.API'\n\nimport { ask_for_freight } from '$lib/Versies/Trucks'\n\t\n\nlet ledger_ask_count = 0;\n\nexport const the_ledger_ask_loop_creator = () => {\n\treturn loop ({\n\t\twait: 2000,\n\t\twait_for_response: \"yes\",\n\t\taction: async () => {\n\t\t\tconst freight = ask_for_freight ();\n\t\t\t\n\t\t\tconst net_path = freight.net_path;\n\t\t\t\n\t\t\tconst there_is_a_net_path = typeof net_path === \"string\" && net_path.length >= 1;\n\t\t\tif (there_is_a_net_path !== true) {\n\t\t\t\tconsole.info (`There's not a \"net path\" for the ledger loop.`)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tledger_ask_count += 1\n\t\t\tconst current_ledger_ask_count = ledger_ask_count;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst { enhanced } = await request_ledger_info ({ net_path })\n\t\t\t\t//\n\t\t\t\t//\tIf the UI changed, after the ask, this filters\n\t\t\t\t//\tthe info that was returned from the ask.\n\t\t\t\t//\n\t\t\t\tif (ledger_ask_count == current_ledger_ask_count) {\n\t\t\t\t\tfreight.net_connected = \"yes\"\n\t\t\t\t\t\n\t\t\t\t\t// const { chain_id: _chain_id } = enhanced;\n\t\t\t\t\t// chain_id = _chain_id;\n\t\t\t\t\t// block_height = enhanced.block_height;\n\t\t\t\t\t// epoch = enhanced.epoch;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (exception) {\n\t\t\t\tfreight.net_connected = \"no\"\n\t\t\t}\n\t\t\t\n\t\t}\n\t})\n}","\n\n\n/*\t\n//\tThis is the +layout mount\n//\tThis is the app level storage.\n//\nimport { lease_roomies_truck, give_back_roomies_truck } from '$lib/Versies/Trucks'\n\nonMount (async () => {\n\tlease_roomies_truck ()\n})\nonDestroy (async () => {\n\tgive_back_roomies_truck ()\n})\n*/\n\n/*\n\timport { check_roomies_truck } from '$lib/Versies/Trucks'\n\tconst mode = check_roomies_truck ().freight.mode;\n*/\n\n/*\t\nimport { onMount, onDestroy } from 'svelte'\nimport { check_roomies_truck, monitor_roomies_truck } from '$lib/Versies/Trucks'\n\nlet RT_Prepared = \"no\"\nlet RT_Monitor;\nlet RT_Freight;\nonMount (async () => {\n\tconst Truck = check_roomies_truck ()\n\tRT_Freight = Truck.freight; \n\t\n\tRT_Monitor = monitor_roomies_truck ((_freight) => {\n\t\tRT_Freight = _freight;\n\t})\n\t\n\tRT_Prepared = \"yes\"\n});\n\nonDestroy (() => {\n\tRT_Monitor.stop ()\n}); \n\n// RT_Freight.net_path\n// RT_Freight.net_name\n*/\n\n\n/*\t\n\timport { ask_for_freight } from '$lib/Versies/Trucks'\n\tconst freight = ask_for_freight ();\n*/\n\nimport * as AptosSDK from \"@aptos-labs/ts-sdk\";\nimport { build_truck } from '$lib/trucks'\nimport { the_ledger_ask_loop_creator } from './Screenplays/is_connected'\nimport { parse_styles } from '$lib/trinkets/styles/parse'\n\nlet the_ledger_ask_loop;\n\n\nconst trucks = {}\n\nexport const lease_roomies_truck = () => {\n\tlet net_path = \"https://api.mainnet.aptoslabs.com/v1\"\n\tlet net_name = \"mainnet\"\n\tlet mode = \"business\"\n\tlet origin_address = \"http://localhost:22000\"\n\t\n\tif (typeof localStorage.net_name === \"string\") {\n\t\tnet_name = localStorage.net_name\t\n\t}\n\tif (typeof localStorage.net_path === \"string\") {\n\t\tnet_path = localStorage.net_path\t\n\t}\n\tif (typeof localStorage.mode === \"string\") {\n\t\tmode = localStorage.mode\t\n\t}\n\tif (typeof localStorage.origin_address === \"string\") {\n\t\torigin_address = localStorage.origin_address\t\n\t}\n\t\n\ttrucks [1] = build_truck ({\n\t\tfreight: {\n\t\t\t/*\n\t\t\t\tbusiness: \n\t\t\t\t\tThe actual mode of the package that's sent.\n\t\t\t\t\n\t\t\t\tnurture: \n\t\t\t\t\tFor building, this has features that are being raised.\n\t\t\t\t\n\t\t\t\t[ \"nurture\", \"business\" ]\n\t\t\t\t \n\t\t\t\timport { check_roomies_truck } from '$lib/Versies/Trucks'\n\t\t\t\tconst mode = check_roomies_truck ().freight.mode;\n\t\t\t\t{#if mode === \"nurture\" }\n\t\t\t\t{/if}\n\t\t\t*/\n\t\t\t//mode: \"business\",\n\t\t\tmode,\n\t\t\t\n\t\t\torigin_address,\n\t\t\t\n\t\t\tnet_path,\n\t\t\tnet_name,\n\t\t\tnet_connected: \"no\",\n\t\t\t\n\t\t\tlayout: {\n\t\t\t\tleaf_styles: parse_styles ({\n\t\t\t\t\tmargin: '0 auto',\n\t\t\t\t\t'max-width': '64rem',\n\t\t\t\t\twidth: '100%'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\taptos: new AptosSDK.Aptos (\n\t\t\t\tnew AptosSDK.AptosConfig ({\t\t\n\t\t\t\t\tfullnode: net_path,\n\t\t\t\t\tnetwork: AptosSDK.Network.CUSTOM\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t})\n\t\n\tconsole.log (trucks [1].freight)\n\t\n\tthe_ledger_ask_loop = the_ledger_ask_loop_creator ();\n\tthe_ledger_ask_loop.play ();\n}\n\nexport const ask_for_freight = () => {\n\treturn trucks [1].freight;\n}\nexport const give_back_roomies_truck = () => {\n\tthe_ledger_ask_loop.stop ();\n\tdelete trucks [1];\n}\n\nexport const check_roomies_truck = () => {\n\treturn trucks [1];\n}\nexport const monitor_roomies_truck = (action) => {\t\n\treturn trucks [1].monitor (({ freight }) => {\n\t\tconsole.info ('Versies Truck_Monitor', { freight })\n\t\taction (freight);\n\t})\n}\n\n\n\n\n\n\n\n"],"names":["isArray","require$$0","isSymbol","require$$1","reIsDeepProp","reIsPlainProp","isKey","value","object","type","_isKey","baseToString","toString","toString_1","stringToPath","require$$2","require$$3","castPath","_castPath","INFINITY","toKey","result","_toKey","assignValue","isIndex","isObject","require$$4","baseSet","path","customizer","index","length","lastIndex","nested","key","newValue","objValue","_baseSet","set","set_1","build_truck","freight","the_freight","monitors","change_count","obj","on_change","handler","target","property","receiver","current","success","E","action","keys","contents","_set","ledger_ask_count","the_ledger_ask_loop_creator","loop","ask_for_freight","net_path","current_ledger_ask_count","enhanced","request_ledger_info","the_ledger_ask_loop","trucks","lease_roomies_truck","net_name","mode","origin_address","parse_styles","AptosSDK.Aptos","AptosSDK.AptosConfig","AptosSDK.Network","give_back_roomies_truck","check_roomies_truck","monitor_roomies_truck"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}