Metadata-Version: 2.3
Name: django-rq-email-backend
Version: 2.0.0
Summary: Provides Django email integration for RQ (Redis Queue)
Project-URL: Homepage, https://github.com/knyghty/django-rq-email-backend
Project-URL: Repository, https://github.com/knyghty/django-rq-email-backend
Author-email: Tom Carrick <tom@carrick.eu>, Jeff Triplett <jeff.triplett@gmail.com>
License: Original work Copyright (c) 2013, Jeff Triplett
        Further additions Copyright (c) 2024, Tom Carrick
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
         * Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
         * Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
         * Neither the name of django-rq-email-backend nor the names of its contributors may
           be used to endorse or promote products derived from this software without
           specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
License-File: AUTHORS.rst
License-File: LICENSE
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.0
Classifier: Framework :: Django :: 5.1
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Communications :: Email
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: django
Requires-Dist: django-rq
Requires-Dist: rq
Description-Content-Type: text/x-rst

========================
django-rq-email-backend
========================

------------
Requirements
------------

* `Django <https://www.djangoproject.com/>`_
* `RQ <https://pypi.python.org/pypi/rq>`_
* `Django-RQ <http://pypi.python.org/pypi/django-rq>`_

------------
Installation
------------

* Install ``django-rq-email-backend``:

.. code-block:: bash

    pip install django-rq-email-backend

* Add ``django_rq`` to ``INSTALLED_APPS`` in ``settings.py``:

.. code-block:: python

    INSTALLED_APPS = (
        # other apps
        'django_rq_email_backend',
    )

You must then set ``django_rq_email_backend`` as your ``EMAIL_BACKEND``::

    EMAIL_BACKEND = 'django_rq_email_backend.backends.RQEmailBackend'

By default ``django-rq-email-backend`` will use Django's builtin ``SMTP`` email backend
for the actual sending of the mail. If you'd like to use another backend, you
may set it in ``RQ_EMAIL_BACKEND`` just like you would normally have set
``EMAIL_BACKEND`` before you were using RQ. In fact, the normal installation
procedure will most likely be to get your email working using only Django, then
change ``EMAIL_BACKEND`` to ``RQ_EMAIL_BACKEND``, and then add the new
``EMAIL_BACKEND`` setting from above.

-----------
Inspiration
-----------

`django-rq-email-backend` was heavily influenced by:

* `django-celery-email <https://bitbucket.org/pmclanahan/django-celery-email>`_
* `django-rq-mail <https://github.com/thoas/django-rq-mail>`_
