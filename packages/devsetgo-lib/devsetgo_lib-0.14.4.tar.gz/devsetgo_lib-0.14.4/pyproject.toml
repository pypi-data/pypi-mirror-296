# [build-system]
# requires = ["setuptools", "wheel"]
# build-backend = "setuptools.build_meta:__legacy__"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "devsetgo_lib"
version = "0.14.4"
requires-python = ">=3.9"
description = """
DevSetGo Library is a Python library offering reusable functions for efficient coding. It includes file operations, calendar utilities, pattern matching, advanced logging with loguru, FastAPI endpoints, async database handling, and email validation. Designed for ease of use and versatility, it's a valuable tool for Python developers.
"""
keywords = ["python", "library", "reusable functions", "file operations", "calendar utilities", "pattern matching", "logging", "loguru", "FastAPI", "async database", "CRUD operations", "email validation", "development tools"]
readme = "README.md"
authors = [{ name = "Mike Ryan", email = "mikeryan56@gmail.com" }]
maintainers = [
    { name = "Mike Ryan", email = "mikeryan56@gmail.com" }, # Optional
]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]

dependencies = [
    "loguru>=0.7.0",
    "packaging>=20.0",
    "email-validator>=2.1.1"
]
# loguru = ">=0.7.0"
# packaging = ">=20.0"



[project.urls]
    Homepage = "https://github.com/devsetgo/devsetgo_lib"
    Documentation = "https://devsetgo.github.io/devsetgo_lib/"
    Repository = "https://github.com/devsetgo/devsetgo_lib"


[project.optional-dependencies]
postgres = ["asyncpg>=0.21.0", "sqlalchemy>=2.0.10,<2.0.99"]
sqlite = ["aiosqlite>=0.17.0", "sqlalchemy>=2.0.10,<2.0.99"]
oracle = ["oracledb>=2.4.1,<2.5.0", "sqlalchemy>=2.0.10,<2.0.99"]
mssql = ["aioodbc>=0.4.1", "sqlalchemy>=2.0.10,<2.0.99"]
fastapi = ["fastapi>=0.100.0", "pydantic[email]>=2.0"]
all = [
    "asyncpg>=0.21.0",
    "sqlalchemy>=2.0.10,<2.0.99",
    "aiosqlite>=0.17.0",
    "oracledb>=2.4.1,<2.5.0",
    "fastapi>=0.100.0",
    "pydantic[email]>=2.0",
    "aioodbc>=0.4.1",
]

[project.scripts]
# Add your scripts here if any

[tool.hatch.build.targets.sdist]
include = [
  "/dsg_lib",
#   "/tests",
]
exclude = [
  "*.json",
  "pkg/_compat.py",
]

[tool.hatch.build.targets.wheel]
packages = ["dsg_lib"]

[tool.ruff]
# Same as Black.
line-length = 100
indent-width = 4
unsafe-fixes = true
# Assume Python 3.8
target-version = "py312"
src = ["dsg_lib", "test"]
exclude = ["unreleased/*","scripts/*","coverage.xml","coverage-badge.svg"] #,"examples/*"

[tool.ruff.lint]
select = [
    "C",  # mccabe rules
    "F",  # pyflakes rules
    "E",  # pycodestyle error rules
    "W",  # pycodestyle warning rules
    "B",  # flake8-bugbear rules
]
ignore = [
    "C901",  # max-complexity-10
    "E501",  # line-too-long
    "B017",
    "B904",
    "B008",
    "I",  # isort rules
]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"



[tool.flake8]
max-line-length = 100
max-doc-length = 100
ignore = ["E302", "E501","E303"]  # Keeping the ignores the same as before since ruff's specific ignores aren't directly transferable
exclude = [
    ".git",
    "__pycache__",
    "docs",
    "build",
    "tests",
    "_venv",
    "htmlcov",
    "scripts",
    ".pytest_cache",
    ".vscode",
    "dist",
    "*.egg-info",
]

[tool.isort]
src_paths = ["dsg_lib", "test"]
force_single_line = false
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100

[tool.coverage.run]
source = ["dsg_lib"]
omit = ["setup.py", "_venv/*", "tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__",
    "def main",
    "import_sqlalchemy",
]

[tool.pytest.ini_options]
# pythonpath = "dsg_lib"
norecursedirs = ["/tests"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=./",
    "--cov-report=html",
    "--cov-report=xml",
    "-ra",
    "--strict-markers",
    "--tb=short",
    "-p pytester",
]
