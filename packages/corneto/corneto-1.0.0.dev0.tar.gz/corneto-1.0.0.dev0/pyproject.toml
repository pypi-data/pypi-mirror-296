[tool.poetry]
name = "corneto"
version = "1.0.0.dev0"
description = "CORNETO: A Unified Framework for Omics-Driven Network Inference"
authors = ["Pablo Rodriguez-Mier <pablo.rodriguez-mier@uni-heidelberg.de>"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3"
]
license = "GPLv3"
readme = "README.md"
repository = "https://github.com/saezlab/corneto/"
homepage = "https://github.com/saezlab/corneto/"
packages = [
    { include = "corneto" },
]
exclude = ["**/tests", "**/docs"]

[tool.poetry.dependencies]
python = ">=3.9"
numpy = ">=1.15, <2.0.0"
cvxpy-base = {version = "^1.5.0", optional = true}
scipy = {version = "^1.11.0", optional = true}

[tool.poetry.group.dev.dependencies]
scipy = "^1.11.0"
pyscipopt = "^5.1.1"
graphviz = "^0.20.1"
cobra = "^0.29.0"
networkx = "^3.2.1"
ipython = "^8.7.0"
ipykernel = "^6.23.1"
PICOS = "^2.4.1"
matplotlib = "^3.5.2"
cvxpy = "^1.4.0"
sphinx = ">=5.0"
myst-parser = ">=0.18.1"
pydata-sphinx-theme = ">=0.15.2"
sphinx-multiversion = "^0.2.4"
sphinxcontrib-napoleon = "^0.7"
sphinxcontrib-bibtex = "^2.5.0"
sphinx-mermaid = "^0.0.8"
sphinx-design = ">=0.4.1"
sphinxcontrib-mermaid = "^0.9.2"
sphinx-favicon = "^1.0.1"
myst-nb = ">= 0.17.2"
sphinx-autodoc-typehints = "^1.21.8"
sphinx-hoverxref = "^1.3.0"
pytest = "^8.1.1"
flake8 = "^7.0.0"
pre-commit = "^3.7.0"
pydocstyle = "^6.3.0"

[tool.poetry.extras]
highs = ["cvxpy-base"]
os = ["cvxpy-base", "scipy", "pyscipopt"]

[tool.ruff]
fix = true

[tool.ruff.lint]
ignore-init-module-imports = true
select = ["E", "F", "W", "I", "D", "RUF"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
