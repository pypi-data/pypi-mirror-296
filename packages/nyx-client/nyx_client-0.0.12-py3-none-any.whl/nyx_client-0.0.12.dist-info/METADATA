Metadata-Version: 2.1
Name: nyx-client
Version: 0.0.12
Summary: Nyx Client SDK provides a powerful toolkit for building generative AI applications using data brokered on the Nyx platform.
Home-page: https://www.nyx.iotics.com/
Keywords: client,data,sdk,ai,exchange,nyx,rag,gen-ai,iotics
Author: Andy Blair
Author-email: andy.blair@iotics.com
Requires-Python: >=3.10,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Provides-Extra: langchain-cohere
Provides-Extra: langchain-openai
Requires-Dist: click (>=8.1.7,<9.0.0)
Requires-Dist: iotics-grpc-client (>=7.1.0,<8.0.0)
Requires-Dist: iotics-identity (>=2.0.0,<3.0.0)
Requires-Dist: langchain (>=0.2.15,<0.3.0) ; extra == "langchain-openai" or extra == "langchain-cohere"
Requires-Dist: langchain-cohere (>=0.2.3,<0.3.0) ; extra == "langchain-cohere"
Requires-Dist: langchain-community (>=0.2.15,<0.3.0) ; extra == "langchain-openai" or extra == "langchain-cohere"
Requires-Dist: langchain-openai (>=0.1.22,<0.2.0) ; extra == "langchain-openai"
Requires-Dist: langgraph (>=0.2.16,<0.3.0) ; extra == "langchain-openai" or extra == "langchain-cohere"
Requires-Dist: names-generator (>=0.2.0,<0.3.0)
Requires-Dist: numpy (>=1.26.4,<2.0.0)
Requires-Dist: pandas (>=2.2.2,<3.0.0)
Requires-Dist: protobuf (==5.27.3)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: requests-toolbelt (>=1.0.0,<2.0.0)
Requires-Dist: scikit-learn (>=1.5.1,<2.0.0)
Requires-Dist: scipy (>=1.14.0,<2.0.0)
Requires-Dist: sqlalchemy (>=2.0.32,<3.0.0)
Project-URL: Repository, https://github.com/Iotic-Labs/nyx-sdk
Description-Content-Type: text/markdown

<div align="center">

# Nyx SDK

![Version](https://img.shields.io/badge/version-0.0.11-blue)
![License](https://img.shields.io/badge/License-Apache%202.0-yellow.svg)
![Build](https://github.com/Iotic-Labs/nyx-sdk/actions/workflows/pr_check.yaml/badge.svg?branch=main)
![GitHub Repo stars](https://img.shields.io/github/stars/Iotic-Labs/nyx-sdk)


üåü **Nyx Client SDK** provides a powerful toolkit for building generative AI applications using data brokered on the Nyx platform.

The SDK enables decentralized data transfer, offering additional context (via a RAG setup) to language models within the trusted IOTICS network.

![https://iotics.com](https://img.shields.io/badge/Powered%20by-Iotics-blue)
</div>

## ü§î Why Nyx?

- **Decentralized Data Gathering:** Access a vast network of data producers.
- **Efficiency:** Augment smaller language models with relevant information for informed decision-making.
- **Sustainability:** Smaller models are good for the planet, cost-effective whilst still providing grounded answers with the help of RAG.

## üî• Quick Start

### Installation
#### Basic usuage
To get started, we recommend installing the package extra `langchain` this provides close integration with one of the
most popular AI libraries for python. To install run `pip install 'nyx_client[langchain-cohere]'` or `pip install 'nyx_client[langchain-openai]'`
depending on which LLM you wish to use.

#### Nyx client core
This package provides core functionality to interact with Nyx, as well as some support for auto-vectorization, and
conversion of CSV products from Nyx into an SQL-lite DB that can be handled by an AI. It's designed to support advanced usage
where you will integrate results from Nyx yourself.

Just install the core of the client with
`pip install nyx_client`
if you're planning on advanced usage.

### Usage

#### Build a Quick Example

##### First time set up
Once the library is installed you can run `nyx-client init` to generate the .env file

<details>
<summary>Example output</summary>

```shell
#### Generated by utils.generate_config.py - do not edit manually
DID_USER_DID=did:iotics:iotDJ1ftN8LM6WUKZp1Zo8Ha1dkm8yyQvFAx
DID_AGENT_DID=did:iotics:iotZ7kSUpmAcAjdVzKKF4JUmC42tBPG7JRoQ
DID_AGENT_KEY_NAME="#agent-competent_hello"
DID_AGENT_NAME="#agent-competent_hello"
DID_AGENT_SECRET=54d1338492578c1d2c0cffb077f9242bd3824cbe0ce9f55e7b70ee38bcebdc9d
HOST_VERIFY_SSL=true # Set to false for development
####

NYX_URL=<ENTER URL>
NYX_USERNAME=<ENTER USERNAME>
NYX_EMAIL=<ENTER EMAIL>
NYX_PASSWORD=<ENTER PASSWORD>
```
</details>

##### API Keys

The Nyx SDK currently supports a variety Langchain based LLM specific plugins, including Cohere and OpenAI.
To use these, you will need to expose the specific API key to your application through environment variables or instantiate the relevant configuration object
with the key.

```bash
export COHERE_API_KEY=<YOUR_COHERE_API_KEY>
```
or
```python
ConfigProvider.create_config(ConfigType.COHERE, api_key="your_api_key_here")
```

Here's a basic example to get you started:

```python
from nyx_client.configuration import ConfigProvider, ConfigType
from nyx_client.extensions.langchain import NyxLangChain
from langchain_cohere import ChatCohere

config = ConfigProvider.create_config(ConfigType.COHERE)
llm = ChatCohere(model_name="command-r", api_key=config.api_key)
client = NyxLangChain(config=config, llm=llm)
while True:
  prompt = input("Ask me anything about your subscribed data products> ")
  # When query is called, all subscribed products are pulled down from Nyx and supplied to the LLM.
  print(client.query(prompt))
```

#### Custom Data Sets

Optionally, you can provide custom datasets by adjusting the query. By default, Nyx queries all datasets you are subscribed to.

```python
# Get datasets with the climate category only
products = client.get_datasets_for_categories(["climate"])

# Pass these into the query, now the LLM will only be supplied matching products
print(client.query(prompt, products=products))
```

This ensures the Nyx Client only includes datasets that are part of the "climate" category.

#### Custom Language Model

You can use any custom language model this by passing any instance of `BaseChatModel` from LangChain.
Here's an example using GPT-4o-mini from OpenAI:

```python
from langchain_openai import ChatOpenAI
from nyx_client.extensions.langchain import NyxLangChain

# A custom model can be provided, it should support tool calling in order to handle CSV files from NYX
llm = ChatOpenAI(model_name="gpt-4o-mini", temperature=0)
client = NyxLangChain(llm=llm)
```

## üõ†Ô∏è Running examples

## üìî Try it out

To get a feel for the NYX SDK without a local environment setup, you can try our [Jupyter](https://jupyter.org/) Notebooks.

[![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/Iotic-Labs/nyx-sdk)

### Running with local [JupyterLab](https://jupyterlab.readthedocs.io/en/latest/)

Clone the repo:
```shell
git clone https://github.com/Iotic-Labs/nyx-sdk.git
cd nyx-sdk
```

Install JupyterLab in a new virtual environment:
```shell
python3 -mvenv jupyterlab
. jupyterlab/bin/activate
pip install jupyterlab
```

Thereafter, each time to start it:
```shell
. jupyterlab/bin/activate
jupyter lab
```

Navigate to e.g. `examples/high_level` in the left pane, choose `highlevel.ipynb` and then press the `Play` button.


### Prerequisites

- Ensure you have a valid `COHERE_API_KEY` or `OPENAI_API_KEY` environment variable set.
- Run all examples from the project root directory.

```shell
cd examples
pip install -r requirements.txt
```

### Example Types

- **High-Level Examples:** Located in `examples/high_level`, these use additional dependencies for an out-of-the-box experience with minimal integration.
- **Advanced Usage Examples:** Found in `examples/advanced`, these require manual integration with AI or other tools, offering more control over the process.

## üëâ Gotchas

- If a Product has been deleted using Nyx, the SDK will no longer be able to access it. Ensure that the product is still available.

## üêû Troubleshooting

If you encounter any issues, ensure that:

- Your virtual environment is activated.
- All required dependencies are installed.
- Environment variables are set correctly.
- If an issue persists, check the Issues section on github

For further assistance, refer to the [project documentation](https://github.com/Iotic-Labs/nyx-sdk/tree/main/docs).

## ü§ù Contributing

We welcome contributions! Please see our [CONTRIBUTING.md](https://github.com/Iotic-Labs/nyx-sdk/blob/main/CONTRIBUTING.md) for guidelines.

