[tool.poetry]
name = "peewee-enum-field"
version = "0.2.0"
description = "A custom EnumField for Peewee ORM to handle Python Enum types."
authors = ["Sebastian Kucharzyk <kucharzyk.sebastian@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "peewee_enum_field"}]

[tool.poetry.dependencies]
python = "^3.9"
peewee = "^3.15.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']
preview = true

[tool.ruff]
fix = true
line-length = 120
src = ["peewee_enum_field", "tests"]
target-version = "py311"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["peewee_enum_field"]
