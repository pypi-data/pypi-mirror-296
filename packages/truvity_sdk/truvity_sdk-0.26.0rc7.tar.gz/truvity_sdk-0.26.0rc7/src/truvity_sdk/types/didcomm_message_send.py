# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .did import Did
from .resource_id import ResourceId


class DidcommMessageSend(UniversalBaseModel):
    """
    The configuration of DIDCOMM Message to send.
    """

    to: Did
    key_id: ResourceId
    credentials: typing.Optional[typing.List[ResourceId]] = pydantic.Field(default=None)
    """
    The identifier of Credential REST Resource (attachment to DIDCOMM Message).
    """

    disable_transitive_closure: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Disable transitive closure of connected resources.
    """

    files: typing.Optional[typing.List[ResourceId]] = pydantic.Field(default=None)
    """
    The identifier of File REST Resource (attachment to DIDCOMM Message).
    """

    presentations: typing.Optional[typing.List[ResourceId]] = pydantic.Field(default=None)
    """
    The identifier of Presentation REST Resource (attachment to DIDCOMM Message).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
