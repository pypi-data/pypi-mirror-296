# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .key_public_base_58 import KeyPublicBase58
from .key_public_jwk import KeyPublicJwk
from .key_public_multibase import KeyPublicMultibase
from .key_public_pem import KeyPublicPem
from .key_type import KeyType


class KeyPublic(UniversalBaseModel):
    """
    Public Key according to

    - [Verifiable Credential Data Integrity 1.0 - 2.3.1 Verification Methods](https://www.w3.org/TR/vc-data-integrity/#verification-methods).
      .
    """

    type: KeyType
    public_key_multibase: KeyPublicMultibase = pydantic.Field(alias="publicKeyMultibase")
    public_key_jwk: KeyPublicJwk = pydantic.Field(alias="publicKeyJwk")
    public_key_pem: KeyPublicPem = pydantic.Field(alias="publicKeyPem")
    public_key_base_58: typing.Optional[KeyPublicBase58] = pydantic.Field(alias="publicKeyBase58", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
