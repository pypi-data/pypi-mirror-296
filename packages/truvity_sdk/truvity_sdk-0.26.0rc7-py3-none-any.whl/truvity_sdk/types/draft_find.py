# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .credential_type import CredentialType
from .draft_meta import DraftMeta
from .uri import Uri


class DraftFind(UniversalBaseModel):
    """
    The fields that will be used only in the Filter request.
    """

    type: CredentialType
    linked_credentials: typing.Optional[typing.List[Uri]] = pydantic.Field(default=None)
    """
    A list of linked credentials.
    """

    linked_drafts: typing.Optional[typing.List[Uri]] = pydantic.Field(default=None)
    """
    A list of linked drafts.
    """

    meta: typing.Optional[DraftMeta] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
