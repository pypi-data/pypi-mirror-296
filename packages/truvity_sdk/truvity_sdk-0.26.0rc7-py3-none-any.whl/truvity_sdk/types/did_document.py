# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .did import Did
from .didurl import Didurl
from .service import Service
from .verification_method import VerificationMethod


class DidDocument(UniversalBaseModel):
    """
    DID Document according to [Decentralized Identifiers (DIDs) v1.0](https://www.w3.org/TR/did-core/).
    """

    context: typing.List[str] = pydantic.Field(alias="@context")
    id: Did
    verification_method: typing.List[VerificationMethod] = pydantic.Field(alias="verificationMethod")
    authentication: typing.List[Didurl]
    assertion_method: typing.List[Didurl] = pydantic.Field(alias="assertionMethod")
    service: typing.List[Service]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
