# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .annotations import Annotations
from .file_create import FileCreate
from .labels import Labels


class FileCreateInput(UniversalBaseModel):
    """
    Create or update file's resource.
    If `labels` or `annotations` are omitted in an create request, the default empty object (`{}`) will be used.
    If `labels` or `annotations` are omitted in an update request, the current values remain untouched. Providing specific values updates the resoruce accordingly, while an empty object (`{}`) for either field clears its stored data.
    """

    data: FileCreate
    annotations: typing.Optional[Annotations] = None
    labels: typing.Optional[Labels] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
