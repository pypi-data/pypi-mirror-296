# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .draft_show_schema import DraftShowSchema


class DraftShow(UniversalBaseModel):
    """
    The fields that will be used only in the output.
    """

    schema_: typing.Optional[DraftShowSchema] = pydantic.Field(alias="schema", default=None)
    values: typing.Optional[typing.Dict[str, typing.Any]] = pydantic.Field(default=None)
    """
    The values of the draft.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
