# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .api_key_filter_data import ApiKeyFilterData
from .filter_annotations import FilterAnnotations
from .filter_id import FilterId
from .filter_integer import FilterInteger
from .filter_labels import FilterLabels
from .filter_string import FilterString
from .filter_timestamp import FilterTimestamp
from .filter_timestamp_optional import FilterTimestampOptional


class ApiKeyFilter(UniversalBaseModel):
    """
    Schema for the ApiKeyResource filter.
    """

    annotations: typing.Optional[FilterAnnotations] = None
    created_at: typing.Optional[FilterTimestamp] = None
    data: typing.Optional[ApiKeyFilterData] = None
    deleted_at: typing.Optional[FilterTimestampOptional] = None
    etag: typing.Optional[FilterString] = None
    id: typing.Optional[FilterId] = None
    labels: typing.Optional[FilterLabels] = None
    modified_at: typing.Optional[FilterTimestamp] = None
    revision: typing.Optional[FilterInteger] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
