Metadata-Version: 2.1
Name: schedule_kspc
Version: 1.0.3
Summary: Automatic schedule for Kursk State Polytechnic College (KSPC)
Home-page: https://github.com/bonkibon-education/schedule-kspc
Download-URL: https://github.com/bonkibon-education/schedule-kspc/archive/refs/tags/v1.0-beta.zip
Author: bonkibon
Author-email: bonkibon75@gmail.com
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Description-Content-Type: text/markdown
Requires-Dist: aiofiles>=23.2.1
Requires-Dist: aiohttp>=3.9.5
Requires-Dist: openpyxl>=3.1.4

# schedule-kspc
Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ö—É—Ä—Å–∫–æ–≥–æ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ü–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –ö–æ–ª–ª–µ–¥–∂–∞ (–ö–ì–ü–ö).
KSPS - Kursk State Polytechnic College.

- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –º–æ–¥—É–ª—è
```console
pip install schedule-kspc
```

<h2> üìÇ DirManager </h2>

<h3>–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏:</h3>

- –ë–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ
- [–ü—Ä–∏–º–µ—Ä](https://github.com/bonkibon-education/schedule-kspc/tree/main/examples/example-dirmanager)

```python
import os
from schedule_kspc.DirManager import Tree, Node

if __name__ == '__main__':
    # Create root node/tree
    root_node = Node(name='root', path=os.getcwd())
    dir_manger = Tree(root_node=root_node)

    # Add node/child
    dir_manger.add_node(root=root_node, name='child-1')
    dir_manger.root_node.children[0].add_child(name='child-1-1')
    
    # Add node/child
    dir_manger.add_node(root=root_node, name='child-2')
    dir_manger.root_node.children[1].add_child(name='child-2-1')
    
    # Create folders
    dir_manger.make_folders(node=root_node)
    
    print(dir_manger)
```

- <h4>–§–∞–π–ª–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:</h4>

```console
root
‚îú‚îÄ‚îÄ child-1
‚îÇ   ‚îî‚îÄ‚îÄ child-1-1
‚îî‚îÄ‚îÄ child-2
    ‚îî‚îÄ‚îÄ child-2-1

```


<h3>–ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞</h3>

- –í—ã—è–≤–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –¥–∞—Ç—ã –∏ —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏–µ –ø–æ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –±–ª–∏–∑–æ—Å—Ç–∏

```python
import os
from random import randint
from datetime import datetime
from schedule_kspc.Store import DATETIME_PATTERN
from schedule_kspc.DirManager import Tree, Node, get_relevant_files

# Create file (random filename by datetime)
def create_file(path: str) -> None:

    year, month, day = (
        randint(2000, 2024),
        randint(1, 12),
        randint(1, 28)
    )

    hour, minute, second = (
        randint(0, 23),
        randint(0, 59),
        randint(0, 59)
    )

    random_date: datetime = datetime(year, month, day, hour, minute, second)
    filename: str = random_date.strftime(DATETIME_PATTERN)
    file = open(f'{path}\\{filename}_schedule.txt', mode='w')
    file.close()

# Create directory tree
def create_test_directory_tree() -> Tree:
    root_node = Node(name='root', path=os.getcwd())
    dir_manger = Tree(root_node=root_node)
    dir_manger.make_folders(node=root_node)
    return dir_manger


if __name__ == '__main__':
    # Directory tree
    tree = create_test_directory_tree()

    # Test files
    create_file(path=tree.root_node.path)
    create_file(path=tree.root_node.path)
    create_file(path=tree.root_node.path)
    create_file(path=tree.root_node.path)

    # Get all files in directory
    print(tree.get_files(tree.root_node))

    # Get relevant files
    print(get_relevant_files(dir_tree=tree, dir_node=tree.root_node))

```

- <h4>–§–∞–π–ª–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:</h4>

```console
  root:
  ‚îú‚îÄ‚îÄ 03.08.2012_10.07.20_schedule.txt
  ‚îú‚îÄ‚îÄ 13.07.2011_21.30.13_schedule.txt
  ‚îú‚îÄ‚îÄ 16.04.2023_13.20.12_schedule.txt
  ‚îî‚îÄ‚îÄ 17.11.2006_05.21.10_schedule.txt
```

- <h4>–†–µ–∑—É–ª—å—Ç–∞—Ç (Get all files in directory):</h4>

```console
  ['03.08.2012_10.07.20_schedule.txt', '13.07.2011_21.30.13_schedule.txt', '16.04.2023_13.20.12_schedule.txt', '17.11.2006_05.21.10_schedule.txt']
```

- <h4>–†–µ–∑—É–ª—å—Ç–∞—Ç (Get relevant files):</h4>
  
```console
  {'root': ['16.04.2023_13.20.12_schedule.txt', '03.08.2012_10.07.20_schedule.txt', '13.07.2011_21.30.13_schedule.txt', '17.11.2006_05.21.10_schedule.txt']}
```


<h2>üåê WebRequests</h2>

<h3>–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ http –∑–∞–ø—Ä–æ—Å–∞–º–∏</h3>

- –ü–æ–∏—Å–∫ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ html —Å—Ç—Ä–∞–Ω–∏—Ü–µ:
```python
from schedule_kspc import Store
from schedule_kspc import WebRequests


@WebRequests.http_request
async def get_files():
    files: list = await WebRequests.http_find_html_pattern(url=Store.URL["site"], pattern=Store.URL_FILE_PATTERN)
    print(files)

if __name__ == "__main__":
    get_files()

```

- –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞  ([–ü—Ä–∏–º–µ—Ä](https://github.com/bonkibon-education/schedule-kspc/tree/main/examples/example-schedule-download))
```python
from os import getcwd
from schedule_kspc import Store
from schedule_kspc import WebRequests


current_path: str = getcwd()


@WebRequests.http_request
async def download_files():
    files: list = await WebRequests.http_find_html_pattern(url=Store.URL["site"], pattern=Store.URL_FILE_PATTERN)

    for file in files:
        await WebRequests.http_download_file(url=Store.URL['file'] + file[0], folder=current_path, filename=file[1])


if __name__ == "__main__":
    download_files()
```

<h2> üìÖ ExcelParser </h2>

<h3>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —á—Ç–µ–Ω–∏–µ excel —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</h3>

- [–ü—Ä–∏–º–µ—Ä](https://github.com/bonkibon-education/schedule-kspc/tree/main/examples/example-schedule-xlparser)

```python
from schedule_kspc import ExcelParser
from schedule_kspc.Store import WEEKDAYS, LESSONS, Lesson

if __name__ == '__main__':
    # Excel parser
    xl_parser = ExcelParser(filename='example.xlsx')

    # Parse schedule of sheetnames
    schedule: dict = xl_parser.parse_schedule_sheetnames()

    # Parse schedule of teachers
    schedule_teachers: dict = xl_parser.parse_schedule_teachers()

    ...
```

<h2> üìù JsonAdapter </h2>

<h3>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ json —Ñ–∞–π–ª</h3>

- [–ü—Ä–∏–º–µ—Ä](https://github.com/bonkibon-education/schedule-kspc/tree/main/examples/example-json-adapter)

```python
from schedule_kspc import JsonAdapter

if __name__ == '__main__':
    # Json adapter
    json_adapter = JsonAdapter(filename='file.json')

    # Json adapter / create file & write data
    json_adapter.write(
        data={'example': [1, 2, 3, 4, 5], 'example-2': 'string', 'example-3': dict(example='string')},
        indent=4, ensure_ascii=False
    )
```

- <h4>–†–µ–∑—É–ª—å—Ç–∞—Ç:</h4>

```console
  file.json:
  {
      "example": [1, 2, 3, 4, 5],
      "example-2": "string",
      "example-3": {
          "example": "string"
      }
  }
```


<h2> ‚ö° LoadSchedule </h2>

- –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –ø–∞—Ä—Å–∏–Ω–≥ excel –¥–æ–∫—É–º–µ–Ω—Ç–∞, —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤ json —Ñ–∞–π–ª:
  - [–ü—Ä–∏–º–µ—Ä](https://github.com/bonkibon-education/schedule-kspc/tree/main/examples/example-load-schedule)

