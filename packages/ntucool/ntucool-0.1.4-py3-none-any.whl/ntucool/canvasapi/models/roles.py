# generated by datamodel-codegen:
#   filename:  roles.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Optional

from pydantic import Field

from . import CanvasBaseModel



class RolePermissions(CanvasBaseModel):
    enabled: Optional[bool] = Field(None, examples=[True])
    """
    Whether the role has the permission
    """

    locked: Optional[bool] = Field(False, examples=[False])
    """
    Whether the permission is locked by this role
    """

    applies_to_self: Optional[bool] = Field(True, examples=[True])
    """
    Whether the permission applies to the account this role is in. Only present if enabled is true
    """

    applies_to_descendants: Optional[bool] = Field(True, examples=[False])
    """
    Whether the permission cascades down to sub accounts of the account this role is in. Only present if enabled is true
    """

    readonly: Optional[bool] = Field(False, examples=[False])
    """
    Whether the permission can be modified in this role (i.e. whether the permission is locked by an upstream role).
    """

    explicit: Optional[bool] = Field(False, examples=[True])
    """
    Whether the value of enabled is specified explicitly by this role, or inherited from an upstream role.
    """

    prior_default: Optional[bool] = Field(None, examples=[False])
    """
    The value that would have been inherited from upstream if the role had not explicitly set a value. Only present if explicit is true.
    """



class Role(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[1], repr=False)
    """
    The id of the role
    """

    label: Optional[str] = Field(None, examples=['New Role'])
    """
    The label of the role.
    """

    role: Optional[str] = Field(None, examples=['New Role'], repr=False)
    """
    The label of the role. (Deprecated alias for 'label')
    """

    base_role_type: Optional[str] = Field(None, examples=['AccountMembership'])
    """
    The role type that is being used as a base for this role. For account-level roles, this is 'AccountMembership'. For course-level roles, it is an enrollment type.
    """

    is_account_role: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    Whether this role applies to account memberships (i.e., not linked to an enrollment in a course).
    """

    account: Optional[Account] = Field(
        None,
        examples=[
            {
                'id': 1019,
                'name': 'CGNU',
                'parent_account_id': 73,
                'root_account_id': 1,
                'sis_account_id': 'cgnu',
            }
        ],
        repr=False,
    )
    """
    JSON representation of the account the role is defined in.
    """

    workflow_state: Optional[str] = Field(None, examples=['active'], repr=False)
    """
    The state of the role: 'active', 'inactive', or 'built_in'
    """

    created_at: Optional[datetime] = Field(
        None, examples=['2020-12-01T16:20:00-06:00'], repr=False
    )
    """
    The date and time the role was created.
    """

    last_updated_at: Optional[datetime] = Field(
        None, examples=['2023-10-31T23:59:00-06:00'], repr=False
    )
    """
    The date and time the role was last updated.
    """

    permissions: Optional[dict[str, Any]] = Field(
        None,
        examples=[
            {
                'read_course_content': {
                    'enabled': True,
                    'locked': False,
                    'readonly': False,
                    'explicit': True,
                    'prior_default': False,
                },
                'read_course_list': {
                    'enabled': True,
                    'locked': True,
                    'readonly': True,
                    'explicit': False,
                },
                'read_question_banks': {
                    'enabled': False,
                    'locked': True,
                    'readonly': False,
                    'explicit': True,
                    'prior_default': False,
                },
                'read_reports': {
                    'enabled': True,
                    'locked': False,
                    'readonly': False,
                    'explicit': False,
                },
            }
        ],
        repr=False,
    )
    """
    A dictionary of permissions keyed by name (see permissions input parameter in the 'Create a role' API).
    """


from .accounts import Account  # noqa: E402