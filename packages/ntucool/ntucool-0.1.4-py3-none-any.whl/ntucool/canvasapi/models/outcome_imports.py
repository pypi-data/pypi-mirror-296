# generated by datamodel-codegen:
#   filename:  outcome_imports.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Optional

from pydantic import Field

from . import CanvasBaseModel



class OutcomeImportData(CanvasBaseModel):
    import_type: Optional[str] = Field(None, examples=['instructure_csv'])
    """
    The type of outcome import
    """



class OutcomeImport(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[1])
    """
    The unique identifier for the outcome import.
    """

    learning_outcome_group_id: Optional[int] = Field(None, examples=[1], repr=False)
    """
    The unique identifier for the group into which the outcomes will be imported to, or NULL.
    """

    created_at: Optional[datetime] = Field(
        None, examples=['2013-12-01T23:59:00-06:00'], repr=False
    )
    """
    The date the outcome import was created.
    """

    ended_at: Optional[datetime] = Field(
        None, examples=['2013-12-02T00:03:21-06:00'], repr=False
    )
    """
    The date the outcome import finished. Returns null if not finished.
    """

    updated_at: Optional[datetime] = Field(
        None, examples=['2013-12-02T00:03:21-06:00'], repr=False
    )
    """
    The date the outcome import was last updated.
    """

    workflow_state: Optional[str] = Field(None, examples=['imported'])
    """
    The current state of the outcome import.
     - 'created': The outcome import has been created.
     - 'importing': The outcome import is currently processing.
     - 'succeeded': The outcome import has completed successfully.
     - 'failed': The outcome import failed.
    """

    data: Optional[OutcomeImportData] = Field(None, repr=False)
    """
    See the OutcomeImportData specification above.
    """

    progress: Optional[str] = Field(None, examples=['100'], repr=False)
    """
    The progress of the outcome import.
    """

    user: Optional[User] = Field(None, repr=False)
    """
    The user that initiated the outcome_import. See the Users API for details.
    """

    processing_errors: Optional[list[list[dict[str, Any]]]] = Field(
        None, examples=[[[1, 'Missing required fields: title']]], repr=False
    )
    """
    An array of row number / error message pairs. Returns the first 25 errors.
    """




from .users import User  # noqa: E402
OutcomeImport.model_rebuild()