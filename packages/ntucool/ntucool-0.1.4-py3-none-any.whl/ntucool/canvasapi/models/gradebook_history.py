# generated by datamodel-codegen:
#   filename:  gradebook_history.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class Grader(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[27])
    """
    the user_id of the user who graded the contained submissions
    """

    name: Optional[str] = Field(None, examples=['Some User'], repr=False)
    """
    the name of the user who graded the contained submissions
    """

    assignments: Optional[list[int]] = Field(None, examples=[[1, 2, 3]], repr=False)
    """
    the assignment groups for all submissions in this response that were graded by this user.  The details are not nested inside here, but the fact that an assignment is present here means that the grader did grade submissions for this assignment on the contextual date. You can use the id of a grader and of an assignment to make another API call to find all submissions for a grader/assignment combination on a given date.
    """



class Day(CanvasBaseModel):
    date: Optional[datetime] = Field(None, examples=['1986-08-09'])
    """
    the date represented by this entry
    """

    graders: Optional[int] = Field(None, examples=['[]'], repr=False)
    """
    an array of the graders who were responsible for the submissions in this response. the submissions are grouped according to the person who graded them and the assignment they were submitted for.
    """



class SubmissionVersion(CanvasBaseModel):
    assignment_id: Optional[int] = Field(None, examples=[22604])
    """
    the id of the assignment this submissions is for
    """

    assignment_name: Optional[str] = Field(
        None, examples=['some assignment'], repr=False
    )
    """
    the name of the assignment this submission is for
    """

    body: Optional[str] = Field(None, examples=['text from the submission'], repr=False)
    """
    the body text of the submission
    """

    current_grade: Optional[str] = Field(None, examples=['100'], repr=False)
    """
    the most up to date grade for the current version of this submission
    """

    current_graded_at: Optional[datetime] = Field(
        None, examples=['2013-01-31T18:16:31Z'], repr=False
    )
    """
    the latest time stamp for the grading of this submission
    """

    current_grader: Optional[str] = Field(None, examples=['Grader Name'], repr=False)
    """
    the name of the most recent grader for this submission
    """

    grade_matches_current_submission: Optional[bool] = Field(
        None, examples=[True], repr=False
    )
    """
    boolean indicating whether the grade is equal to the current submission grade
    """

    graded_at: Optional[datetime] = Field(
        None, examples=['2013-01-31T18:16:31Z'], repr=False
    )
    """
    time stamp for the grading of this version of the submission
    """

    grader: Optional[str] = Field(None, examples=['Grader Name'], repr=False)
    """
    the name of the user who graded this version of the submission
    """

    grader_id: Optional[int] = Field(None, examples=[67379], repr=False)
    """
    the user id of the user who graded this version of the submission
    """

    id: Optional[int] = Field(None, examples=[11607])
    """
    the id of the submission of which this is a version
    """

    new_grade: Optional[str] = Field(None, examples=['100'], repr=False)
    """
    the updated grade provided in this version of the submission
    """

    new_graded_at: Optional[datetime] = Field(
        None, examples=['2013-01-31T18:16:31Z'], repr=False
    )
    """
    the timestamp for the grading of this version of the submission (alias for graded_at)
    """

    new_grader: Optional[str] = Field(None, examples=['Grader Name'], repr=False)
    """
    alias for 'grader'
    """

    previous_grade: Optional[str] = Field(None, examples=['90'], repr=False)
    """
    the grade for the submission version immediately preceding this one
    """

    previous_graded_at: Optional[datetime] = Field(
        None, examples=['2013-01-29T12:12:12Z'], repr=False
    )
    """
    the timestamp for the grading of the submission version immediately preceding this one
    """

    previous_grader: Optional[str] = Field(
        None, examples=['Graded on submission'], repr=False
    )
    """
    the name of the grader who graded the version of this submission immediately preceding this one
    """

    score: Optional[int] = Field(None, examples=[100], repr=False)
    """
    the score for this version of the submission
    """

    user_name: Optional[str] = Field(None, examples=['student@example.com'], repr=False)
    """
    the name of the student who created this submission
    """

    submission_type: Optional[str] = Field(None, examples=['online'], repr=False)
    """
    the type of submission
    """

    url: Optional[str] = Field(None, repr=False)
    """
    the url of the submission, if there is one
    """

    user_id: Optional[int] = Field(None, examples=[67376], repr=False)
    """
    the user ID of the student who created this submission
    """

    workflow_state: Optional[str] = Field(None, examples=['unsubmitted'], repr=False)
    """
    the state of the submission at this version
    """



class SubmissionHistory(CanvasBaseModel):
    submission_id: Optional[int] = Field(None, examples=[4])
    """
    the id of the submission
    """

    versions: Optional[list[SubmissionVersion]] = Field(None, repr=False)
    """
    an array of all the versions of this submission
    """

