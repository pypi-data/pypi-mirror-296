# generated by datamodel-codegen:
#   filename:  quiz_questions.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class Answer(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[6656])
    """
    The unique identifier for the answer.  Do not supply if this answer is part of a new question
    """

    answer_text: str = Field(..., examples=['Constantinople'])
    """
    The text of the answer.
    """

    answer_weight: int = Field(..., examples=[100])
    """
    An integer to determine correctness of the answer. Incorrect answers should be 0, correct answers should be 100.
    """

    answer_comments: Optional[str] = Field(
        None,
        examples=['Remember to check your spelling prior to submitting this answer.'],
    )
    """
    Specific contextual comments for a particular answer.
    """

    text_after_answers: Optional[str] = Field(
        None, examples=[' is the capital of Utah.']
    )
    """
    Used in missing word questions.  The text to follow the missing word
    """

    answer_match_left: Optional[str] = Field(None, examples=['Salt Lake City'])
    """
    Used in matching questions.  The static value of the answer that will be displayed on the left for students to match for.
    """

    answer_match_right: Optional[str] = Field(None, examples=['Utah'])
    """
    Used in matching questions. The correct match for the value given in answer_match_left.  Will be displayed in a dropdown with the other answer_match_right values..
    """

    matching_answer_incorrect_matches: Optional[str] = Field(
        None, examples=['Nevada\nCalifornia\nWashington']
    )
    """
    Used in matching questions. A list of distractors, delimited by new lines (
    ) that will be seeded with all the answer_match_right values.
    """

    numerical_answer_type: Optional[str] = Field(None, examples=['exact_answer'])
    """
    Used in numerical questions.  Values can be 'exact_answer', 'range_answer', or 'precision_answer'.
    """

    exact: Optional[int] = Field(None, examples=[42])
    """
    Used in numerical questions of type 'exact_answer'.  The value the answer should equal.
    """

    margin: Optional[int] = Field(None, examples=[4])
    """
    Used in numerical questions of type 'exact_answer'. The margin of error allowed for the student's answer.
    """

    approximate: Optional[float] = Field(None, examples=[1234600000.0])
    """
    Used in numerical questions of type 'precision_answer'.  The value the answer should equal.
    """

    precision: Optional[int] = Field(None, examples=[4])
    """
    Used in numerical questions of type 'precision_answer'. The numerical precision that will be used when comparing the student's answer.
    """

    start: Optional[int] = Field(None, examples=[1])
    """
    Used in numerical questions of type 'range_answer'. The start of the allowed range (inclusive).
    """

    end: Optional[int] = Field(None, examples=[10])
    """
    Used in numerical questions of type 'range_answer'. The end of the allowed range (inclusive).
    """

    blank_id: Optional[int] = Field(None, examples=[1170])
    """
    Used in fill in multiple blank and multiple dropdowns questions.
    """



class QuizQuestion(CanvasBaseModel):
    id: int = Field(..., examples=[1])
    """
    The ID of the quiz question.
    """

    quiz_id: int = Field(..., examples=[2], repr=False)
    """
    The ID of the Quiz the question belongs to.
    """

    position: Optional[int] = Field(None, examples=[1], repr=False)
    """
    The order in which the question will be retrieved and displayed.
    """

    question_name: Optional[str] = Field(None, examples=['Prime Number Identification'])
    """
    The name of the question.
    """

    question_type: Optional[str] = Field(
        None, examples=['multiple_choice_question'], repr=False
    )
    """
    The type of the question.
    """

    question_text: Optional[str] = Field(
        None, examples=['Which of the following is NOT a prime number?'], repr=False
    )
    """
    The text of the question.
    """

    points_possible: Optional[int] = Field(None, examples=[5], repr=False)
    """
    The maximum amount of points possible received for getting this question correct.
    """

    correct_comments: Optional[str] = Field(
        None, examples=["That's correct!"], repr=False
    )
    """
    The comments to display if the student answers the question correctly.
    """

    incorrect_comments: Optional[str] = Field(
        None, examples=['Unfortunately, that IS a prime number.'], repr=False
    )
    """
    The comments to display if the student answers incorrectly.
    """

    neutral_comments: Optional[str] = Field(
        None,
        examples=[
            "Goldbach's conjecture proposes that every even integer greater than 2 can be expressed as the sum of two prime numbers."
        ],
        repr=False,
    )
    """
    The comments to display regardless of how the student answered.
    """

    answers: Optional[list[Answer]] = Field(None, repr=False)
    """
    An array of available answers to display to the student.
    """

