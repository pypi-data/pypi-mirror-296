# generated by datamodel-codegen:
#   filename:  group_categories.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class GroupCategory(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[17])
    """
    The ID of the group category.
    """

    name: Optional[str] = Field(None, examples=['Math Groups'])
    """
    The display name of the group category.
    """

    role: Optional[str] = Field(None, examples=['communities'], repr=False)
    """
    Certain types of group categories have special role designations. Currently, these include: 'communities', 'student_organized', and 'imported'. Regular course/account group categories have a role of null.
    """

    self_signup: Optional[str] = Field(None, repr=False)
    """
    If the group category allows users to join a group themselves, thought they may only be a member of one group per group category at a time. Values include 'restricted', 'enabled', and null 'enabled' allows students to assign themselves to a group 'restricted' restricts them to only joining a group in their section null disallows students from joining groups
    """

    auto_leader: Optional[str] = Field(None, repr=False)
    """
    Gives instructors the ability to automatically have group leaders assigned.  Values include 'random', 'first', and null; 'random' picks a student from the group at random as the leader, 'first' sets the first student to be assigned to the group as the leader
    """

    context_type: Optional[str] = Field(None, examples=['Account'], repr=False)
    """
    The course or account that the category group belongs to. The pattern here is that whatever the context_type is, there will be an _id field named after that type. So if instead context_type was 'Course', the course_id field would be replaced by an course_id field.
    """

    account_id: Optional[int] = Field(None, examples=[3], repr=False)
    group_limit: Optional[int] = Field(None, repr=False)
    """
    If self-signup is enabled, group_limit can be set to cap the number of users in each group. If null, there is no limit.
    """

    sis_group_category_id: Optional[str] = Field(None, repr=False)
    """
    The SIS identifier for the group category. This field is only included if the user has permission to manage or view SIS information.
    """

    sis_import_id: Optional[int] = Field(None, repr=False)
    """
    The unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.
    """

    progress: Optional[Progress] = Field(None, repr=False)
    """
    If the group category has not yet finished a randomly student assignment request, a progress object will be attached, which will contain information related to the progress of the assignment request. Refer to the Progress API for more information
    """


from .progress import Progress  # noqa: E402