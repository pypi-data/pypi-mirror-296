# generated by datamodel-codegen:
#   filename:  quiz_extensions.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class QuizExtension(CanvasBaseModel):
    quiz_id: int = Field(..., examples=[2])
    """
    The ID of the Quiz the quiz extension belongs to.
    """

    user_id: int = Field(..., examples=[3])
    """
    The ID of the Student that needs the quiz extension.
    """

    extra_attempts: Optional[int] = Field(None, examples=[1], repr=False)
    """
    Number of times the student is allowed to re-take the quiz over the multiple-attempt limit.
    """

    extra_time: Optional[int] = Field(None, examples=[60], repr=False)
    """
    Amount of extra time allowed for the quiz submission, in minutes.
    """

    manually_unlocked: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    The student can take the quiz even if it's locked for everyone else
    """

    end_at: Optional[datetime] = Field(
        None, examples=['2013-11-07T13:16:18Z'], repr=False
    )
    """
    The time at which the quiz submission will be overdue, and be flagged as a late submission.
    """

