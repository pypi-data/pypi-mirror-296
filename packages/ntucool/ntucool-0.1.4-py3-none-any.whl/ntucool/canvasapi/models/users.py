# generated by datamodel-codegen:
#   filename:  users.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional
from uuid import UUID

from pydantic import Field

from . import CanvasBaseModel



class UserDisplay(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[2], repr=False)
    """
    The ID of the user.
    """

    short_name: Optional[str] = Field(None, examples=['Shelly'], repr=False)
    """
    A short name the user has selected, for use in conversations or other less formal places through the site.
    """

    avatar_image_url: Optional[str] = Field(
        None,
        examples=[
            'https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g'
        ],
        repr=False,
    )
    """
    If avatars are enabled, this field will be included and contain a url to retrieve the user's avatar.
    """

    html_url: Optional[str] = Field(
        None,
        examples=['https://school.instructure.com/courses/:course_id/users/:user_id'],
        repr=False,
    )
    """
    URL to access user, either nested to a context or directly.
    """



class AnonymousUserDisplay(CanvasBaseModel):
    anonymous_id: Optional[str] = Field(None, examples=['xn29Q'])
    """
    A unique short ID identifying this user within the scope of a particular assignment.
    """

    avatar_image_url: Optional[str] = Field(
        None,
        examples=[
            'https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g'
        ],
    )
    """
    A URL to retrieve a generic avatar.
    """

    display_name: Optional[str] = Field(None, examples=['Student 2'])
    """
    The anonymized display name for the student.
    """



class Profile(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[1234])
    """
    The ID of the user.
    """

    name: Optional[str] = Field(None, examples=['Sample User'])
    """
    Sample User
    """

    short_name: Optional[str] = Field(None, examples=['Sample User'])
    """
    Sample User
    """

    sortable_name: Optional[str] = Field(None, examples=['user, sample'])
    """
    user, sample
    """

    title: Optional[str] = None
    bio: Optional[str] = None
    pronunciation: Optional[str] = Field(None, examples=['Sample name pronunciation'])
    """
    Name pronunciation
    """

    primary_email: Optional[str] = Field(None, examples=['sample_user@example.com'])
    """
    sample_user@example.com
    """

    login_id: Optional[str] = Field(None, examples=['sample_user@example.com'])
    """
    sample_user@example.com
    """

    sis_user_id: Optional[str] = Field(None, examples=['sis1'])
    """
    sis1
    """

    lti_user_id: Optional[str] = None
    avatar_url: Optional[str] = Field(None, examples=['..url..'])
    """
    The avatar_url can change over time, so we recommend not caching it for more than a few hours
    """

    calendar: Optional[CalendarLink] = None
    time_zone: Optional[str] = Field(None, examples=['America/Denver'])
    """
    Optional: This field is only returned in certain API calls, and will return the IANA time zone name of the user's preferred timezone.
    """

    locale: Optional[str] = None
    """
    The users locale.
    """

    k5_user: Optional[bool] = Field(None, examples=[True])
    """
    Optional: Whether or not the user is a K5 user. This field is nil if the user settings are not for the user making the request.
    """

    use_classic_font_in_k5: Optional[bool] = Field(None, examples=[False])
    """
    Optional: Whether or not the user should see the classic font on the dashboard. Only applies if k5_user is true. This field is nil if the user settings are not for the user making the request.
    """



class Avatar(CanvasBaseModel):
    type: str = Field(..., examples=['gravatar'], repr=False)
    """
    ['gravatar'|'attachment'|'no_pic'] The type of avatar record, for categorization purposes.
    """

    url: str = Field(
        ..., examples=['https://secure.gravatar.com/avatar/2284...'], repr=False
    )
    """
    The url of the avatar
    """

    token: str = Field(..., examples=['<opaque_token>'], repr=False)
    """
    A unique representation of the avatar record which can be used to set the avatar with the user update endpoint. Note: this is an internal representation and is subject to change without notice. It should be consumed with this api endpoint and used in the user update endpoint, and should not be constructed by the client.
    """

    display_name: str = Field(..., examples=['user, sample'])
    """
    A textual description of the avatar record.
    """

    id: Optional[int] = Field(None, examples=[12], repr=False)
    """
    ['attachment' type only] the internal id of the attachment
    """

    content_type: Optional[str] = Field(
        None, alias='content-type', examples=['image/jpeg'], repr=False
    )
    """
    ['attachment' type only] the content-type of the attachment.
    """

    filename: Optional[str] = Field(None, examples=['profile.jpg'], repr=False)
    """
    ['attachment' type only] the filename of the attachment
    """

    size: Optional[int] = Field(None, examples=[32649], repr=False)
    """
    ['attachment' type only] the size of the attachment
    """



class PageViewLinks(CanvasBaseModel):
    user: Optional[int] = Field(None, examples=['1234'])
    """
    The ID of the user for this page view
    """

    context: Optional[int] = Field(None, examples=['1234'])
    """
    The ID of the context for the request (course id if context_type is Course, etc)
    """

    asset: Optional[int] = Field(None, examples=['1234'])
    """
    The ID of the asset for the request, if any
    """

    real_user: Optional[int] = Field(None, examples=['1234'])
    """
    The ID of the actual user who made this request, if the request was made by a user who was masquerading
    """

    account: Optional[int] = Field(None, examples=['1234'])
    """
    The ID of the account context for this page view
    """



class CourseNickname(CanvasBaseModel):
    course_id: Optional[int] = Field(None, examples=[88])
    """
    the ID of the course
    """

    name: Optional[str] = Field(
        None, examples=['S1048576 DPMS1200 Intro to Newtonian Mechanics'], repr=False
    )
    """
    the actual name of the course
    """

    nickname: Optional[str] = Field(None, examples=['Physics'])
    """
    the calling user's nickname for the course
    """



class PageView(CanvasBaseModel):
    id: UUID = Field(..., examples=['3e246700-e305-0130-51de-02e33aa501ef'])
    """
    A UUID representing the page view.  This is also the unique request id
    """

    app_name: Optional[str] = Field(None, examples=['Canvas for iOS'], repr=False)
    """
    If the request is from an API request, the app that generated the access token
    """

    url: Optional[str] = Field(
        None, examples=['https://canvas.instructure.com/conversations'], repr=False
    )
    """
    The URL requested
    """

    context_type: Optional[str] = Field(None, examples=['Course'])
    """
    The type of context for the request
    """

    asset_type: Optional[str] = Field(None, examples=['Discussion'], repr=False)
    """
    The type of asset in the context for the request, if any
    """

    controller: Optional[str] = Field(None, examples=['discussions'], repr=False)
    """
    The rails controller that handled the request
    """

    action: Optional[str] = Field(None, examples=['index'], repr=False)
    """
    The rails action that handled the request
    """

    contributed: Optional[bool] = Field(None, examples=['false'], repr=False)
    """
    This field is deprecated, and will always be false
    """

    interaction_seconds: Optional[float] = Field(None, examples=['7.21'], repr=False)
    """
    An approximation of how long the user spent on the page, in seconds
    """

    created_at: Optional[datetime] = Field(
        None, examples=['2013-10-01T19:49:47Z'], repr=False
    )
    """
    When the request was made
    """

    user_request: Optional[bool] = Field(None, examples=['true'], repr=False)
    """
    A flag indicating whether the request was user-initiated, or automatic (such as an AJAX call)
    """

    render_time: Optional[float] = Field(None, examples=['0.369'], repr=False)
    """
    How long the response took to render, in seconds
    """

    user_agent: Optional[str] = Field(
        None,
        examples=[
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/536.30.1 (KHTML, like Gecko) Version/6.0.5 Safari/536.30.1'
        ],
        repr=False,
    )
    """
    The user-agent of the browser or program that made the request
    """

    participated: Optional[bool] = Field(None, examples=['false'], repr=False)
    """
    True if the request counted as participating, such as submitting homework
    """

    http_method: Optional[str] = Field(None, examples=['GET'], repr=False)
    """
    The HTTP method such as GET or POST
    """

    remote_ip: Optional[str] = Field(None, examples=['173.194.46.71'], repr=False)
    """
    The origin IP address of the request
    """

    links: Optional[PageViewLinks] = Field(
        None, examples=[{'user': 1234, 'account': 1234}], repr=False
    )
    """
    The page view links to define the relationships
    """



class User(CanvasBaseModel):
    id: int = Field(..., examples=[2])
    """
    The ID of the user.
    """

    name: Optional[str] = Field(None, examples=['Sheldon Cooper'])
    """
    The name of the user.
    """

    sortable_name: Optional[str] = Field(None, examples=['Cooper, Sheldon'], repr=False)
    """
    The name of the user that is should be used for sorting groups of users, such as in the gradebook.
    """

    last_name: Optional[str] = Field(None, examples=['Cooper'], repr=False)
    """
    The last name of the user.
    """

    first_name: Optional[str] = Field(None, examples=['Sheldon'], repr=False)
    """
    The first name of the user.
    """

    short_name: Optional[str] = Field(None, examples=['Shelly'], repr=False)
    """
    A short name the user has selected, for use in conversations or other less formal places through the site.
    """

    sis_user_id: Optional[str] = Field(None, examples=['SHEL93921'], repr=False)
    """
    The SIS ID associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.
    """

    sis_import_id: Optional[int] = Field(None, examples=['18'], repr=False)
    """
    The id of the SIS import.  This field is only included if the user came from a SIS import and has permissions to manage SIS information.
    """

    integration_id: Optional[str] = Field(None, examples=['ABC59802'], repr=False)
    """
    The integration_id associated with the user.  This field is only included if the user came from a SIS import and has permissions to view SIS information.
    """

    login_id: Optional[str] = Field(
        None, examples=['sheldon@caltech.example.com'], repr=False
    )
    """
    The unique login id for the user.  This is what the user uses to log in to Canvas.
    """

    avatar_url: Optional[str] = Field(
        None,
        examples=[
            'https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g'
        ],
        repr=False,
    )
    """
    If avatars are enabled, this field will be included and contain a url to retrieve the user's avatar.
    """

    avatar_state: Optional[str] = Field(None, examples=['approved'], repr=False)
    """
    Optional: If avatars are enabled and caller is admin, this field can be requested and will contain the current state of the user's avatar.
    """

    enrollments: Optional[list[Enrollment]] = Field(None, repr=False)
    """
    Optional: This field can be requested with certain API calls, and will return a list of the users active enrollments. See the List enrollments API for more details about the format of these records.
    """

    email: Optional[str] = Field(
        None, examples=['sheldon@caltech.example.com'], repr=False
    )
    """
    Optional: This field can be requested with certain API calls, and will return the users primary email address.
    """

    locale: Optional[str] = Field(None, examples=['tlh'], repr=False)
    """
    Optional: This field can be requested with certain API calls, and will return the users locale in RFC 5646 format.
    """

    last_login: Optional[datetime] = Field(
        None, examples=['2012-05-30T17:45:25Z'], repr=False
    )
    """
    Optional: This field is only returned in certain API calls, and will return a timestamp representing the last time the user logged in to canvas.
    """

    time_zone: Optional[str] = Field(None, examples=['America/Denver'], repr=False)
    """
    Optional: This field is only returned in certain API calls, and will return the IANA time zone name of the user's preferred timezone.
    """

    bio: Optional[str] = Field(None, examples=['I like the Muppets.'], repr=False)
    """
    Optional: The user's bio.
    """

    pronouns: Optional[str] = Field(None, examples=['he/him'], repr=False)
    """
    Optional: This field is only returned if pronouns are enabled, and will return the pronouns of the user.
    """


from .courses import CalendarLink  # noqa: E402
from .enrollments import Enrollment  # noqa: E402