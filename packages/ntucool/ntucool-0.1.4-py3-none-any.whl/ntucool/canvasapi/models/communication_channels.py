# generated by datamodel-codegen:
#   filename:  communication_channels.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class CommunicationChannel(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[16])
    """
    The ID of the communication channel.
    """

    address: Optional[str] = Field(None, examples=['sheldon@caltech.example.com'])
    """
    The address, or path, of the communication channel.
    """

    type: Optional[str] = Field(None, examples=['email'], repr=False)
    """
    The type of communcation channel being described. Possible values are: 'email', 'push', 'sms', or 'twitter'. This field determines the type of value seen in 'address'.
    """

    position: Optional[int] = Field(None, examples=[1], repr=False)
    """
    The position of this communication channel relative to the user's other channels when they are ordered.
    """

    user_id: Optional[int] = Field(None, examples=[1], repr=False)
    """
    The ID of the user that owns this communication channel.
    """

    bounce_count: Optional[int] = Field(None, examples=[0], repr=False)
    """
    The number of bounces the channel has experienced. This is reset if the channel sends successfully.
    """

    last_bounce_at: Optional[datetime] = Field(
        None, examples=['2012-05-30T17:00:00Z'], repr=False
    )
    """
    The time the last bounce occurred.
    """

    workflow_state: Optional[str] = Field(None, examples=['active'], repr=False)
    """
    The current state of the communication channel. Possible values are: 'unconfirmed' or 'active'.
    """

