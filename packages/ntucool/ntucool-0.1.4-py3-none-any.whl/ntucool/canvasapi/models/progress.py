# generated by datamodel-codegen:
#   filename:  progress.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Optional

from pydantic import Field

from . import CanvasBaseModel



class Progress(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[1])
    """
    the ID of the Progress object
    """

    context_id: Optional[int] = Field(None, examples=[1], repr=False)
    """
    the context owning the job.
    """

    context_type: Optional[str] = Field(None, examples=['Account'], repr=False)
    user_id: Optional[int] = Field(None, examples=[123], repr=False)
    """
    the id of the user who started the job
    """

    tag: Optional[str] = Field(None, examples=['course_batch_update'])
    """
    the type of operation
    """

    completion: Optional[int] = Field(None, examples=[100], repr=False)
    """
    percent completed
    """

    workflow_state: Optional[str] = Field(None, examples=['completed'])
    """
    the state of the job one of 'queued', 'running', 'completed', 'failed'
    """

    created_at: Optional[datetime] = Field(
        None, examples=['2013-01-15T15:00:00Z'], repr=False
    )
    """
    the time the job was created
    """

    updated_at: Optional[datetime] = Field(
        None, examples=['2013-01-15T15:04:00Z'], repr=False
    )
    """
    the time the job was last updated
    """

    message: Optional[str] = Field(None, examples=['17 courses processed'], repr=False)
    """
    optional details about the job
    """

    results: Optional[dict[str, Any]] = Field(
        None, examples=[{'id': '123'}], repr=False
    )
    """
    optional results of the job. omitted when job is still pending
    """

    url: Optional[str] = Field(
        None,
        examples=['https://canvas.example.edu/api/lti/courses/1/progress/1'],
        repr=False,
    )
    """
    url where a progress update can be retrieved with an LTI access token
    """

