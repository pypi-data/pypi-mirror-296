# generated by datamodel-codegen:
#   filename:  grading_standards.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class GradingSchemeEntry(CanvasBaseModel):
    name: Optional[str] = Field(None, examples=['A'])
    """
    The name for an entry value within a GradingStandard that describes the range of the value
    """

    value: Optional[int] = Field(None, examples=[0.9])
    """
    The value for the name of the entry within a GradingStandard.  The entry represents the lower bound of the range for the entry. This range includes the value up to the next entry in the GradingStandard, or 100 if there is no upper bound. The lowest value will have a lower bound range of 0.
    """



class GradingStandard(CanvasBaseModel):
    title: Optional[str] = Field(None, examples=['Account Standard'])
    """
    the title of the grading standard
    """

    id: Optional[int] = Field(None, examples=[1])
    """
    the id of the grading standard
    """

    context_type: Optional[str] = Field(None, examples=['Account'], repr=False)
    """
    the context this standard is associated with, either 'Account' or 'Course'
    """

    context_id: Optional[int] = Field(None, examples=[1], repr=False)
    """
    the id for the context either the Account or Course id
    """

    grading_scheme: Optional[list[GradingSchemeEntry]] = Field(
        None,
        examples=[
            [
                {'name': 'A', 'value': 0.9},
                {'name': 'B', 'value': 0.8},
                {'name': 'C', 'value': 0.7},
                {'name': 'D', 'value': 0.6},
            ]
        ],
        repr=False,
    )
    """
    A list of GradingSchemeEntry that make up the Grading Standard as an array of values with the scheme name and value
    """

