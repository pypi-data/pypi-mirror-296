# generated by datamodel-codegen:
#   filename:  peer_reviews.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class PeerReview(CanvasBaseModel):
    assessor_id: Optional[int] = Field(None, examples=[23], repr=False)
    """
    The assessors user id
    """

    asset_id: Optional[int] = Field(None, examples=[13])
    """
    The id for the asset associated with this Peer Review
    """

    asset_type: Optional[str] = Field(None, examples=['Submission'], repr=False)
    """
    The type of the asset
    """

    id: Optional[int] = Field(None, examples=[1])
    """
    The id of the Peer Review
    """

    user_id: Optional[int] = Field(None, examples=[7])
    """
    The user id for the owner of the asset
    """

    workflow_state: Optional[str] = Field(None, examples=['assigned'], repr=False)
    """
    The state of the Peer Review, either 'assigned' or 'completed'
    """

    user: Optional[str] = Field(None, examples=['User'], repr=False)
    """
    the User object for the owner of the asset if the user include parameter is provided (see user API) (optional)
    """

    assessor: Optional[str] = Field(None, examples=['User'], repr=False)
    """
    The User object for the assessor if the user include parameter is provided (see user API) (optional)
    """

    submission_comments: Optional[str] = Field(
        None, examples=['SubmissionComment'], repr=False
    )
    """
    The submission comments associated with this Peer Review if the submission_comment include parameter is provided (see submissions API) (optional)
    """

