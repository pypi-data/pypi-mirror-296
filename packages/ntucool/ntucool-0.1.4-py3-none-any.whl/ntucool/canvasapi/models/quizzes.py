# generated by datamodel-codegen:
#   filename:  quizzes.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class QuizPermissions(CanvasBaseModel):
    read: Optional[bool] = Field(None, examples=[True])
    """
    whether the user can view the quiz
    """

    submit: Optional[bool] = Field(None, examples=[True])
    """
    whether the user may submit a submission for the quiz
    """

    create: Optional[bool] = Field(None, examples=[True])
    """
    whether the user may create a new quiz
    """

    manage: Optional[bool] = Field(None, examples=[True])
    """
    whether the user may edit, update, or delete the quiz
    """

    read_statistics: Optional[bool] = Field(None, examples=[True])
    """
    whether the user may view quiz statistics for this quiz
    """

    review_grades: Optional[bool] = Field(None, examples=[True])
    """
    whether the user may review grades for all quiz submissions for this quiz
    """

    update: Optional[bool] = Field(None, examples=[True])
    """
    whether the user may update the quiz
    """



class Quiz(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[5])
    """
    the ID of the quiz
    """

    title: Optional[str] = Field(None, examples=['Hamlet Act 3 Quiz'])
    """
    the title of the quiz
    """

    html_url: Optional[str] = Field(
        None, examples=['http://canvas.example.edu/courses/1/quizzes/2'], repr=False
    )
    """
    the HTTP/HTTPS URL to the quiz
    """

    mobile_url: Optional[str] = Field(
        None,
        examples=[
            'http://canvas.example.edu/courses/1/quizzes/2?persist_healdess=1&force_user=1'
        ],
        repr=False,
    )
    """
    a url suitable for loading the quiz in a mobile webview.  it will persiste the headless session and, for quizzes in public courses, will force the user to login
    """

    preview_url: Optional[str] = Field(
        None,
        examples=['http://canvas.example.edu/courses/1/quizzes/2/take?preview=1'],
        repr=False,
    )
    """
    A url that can be visited in the browser with a POST request to preview a quiz as the teacher. Only present when the user may grade
    """

    description: Optional[str] = Field(
        None, examples=['This is a quiz on Act 3 of Hamlet'], repr=False
    )
    """
    the description of the quiz
    """

    quiz_type: Optional[str] = Field(None, examples=['assignment'], repr=False)
    """
    type of quiz possible values: 'practice_quiz', 'assignment', 'graded_survey', 'survey'
    """

    assignment_group_id: Optional[int] = Field(None, examples=[3], repr=False)
    """
    the ID of the quiz's assignment group:
    """

    time_limit: Optional[int] = Field(None, examples=[5], repr=False)
    """
    quiz time limit in minutes
    """

    shuffle_answers: Optional[bool] = Field(None, examples=[False], repr=False)
    """
    shuffle answers for students?
    """

    hide_results: Optional[str] = Field(None, examples=['always'], repr=False)
    """
    let students see their quiz responses? possible values: null, 'always', 'until_after_last_attempt'
    """

    show_correct_answers: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    show which answers were correct when results are shown? only valid if hide_results=null
    """

    show_correct_answers_last_attempt: Optional[bool] = Field(
        None, examples=[True], repr=False
    )
    """
    restrict the show_correct_answers option above to apply only to the last submitted attempt of a quiz that allows multiple attempts. only valid if show_correct_answers=true and allowed_attempts > 1
    """

    show_correct_answers_at: Optional[datetime] = Field(
        None, examples=['2013-01-23T23:59:00-07:00'], repr=False
    )
    """
    when should the correct answers be visible by students? only valid if show_correct_answers=true
    """

    hide_correct_answers_at: Optional[datetime] = Field(
        None, examples=['2013-01-23T23:59:00-07:00'], repr=False
    )
    """
    prevent the students from seeing correct answers after the specified date has passed. only valid if show_correct_answers=true
    """

    one_time_results: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    prevent the students from seeing their results more than once (right after they submit the quiz)
    """

    scoring_policy: Optional[str] = Field(None, examples=['keep_highest'], repr=False)
    """
    which quiz score to keep (only if allowed_attempts != 1) possible values: 'keep_highest', 'keep_latest'
    """

    allowed_attempts: Optional[int] = Field(None, examples=[3], repr=False)
    """
    how many times a student can take the quiz -1 = unlimited attempts
    """

    one_question_at_a_time: Optional[bool] = Field(None, examples=[False], repr=False)
    """
    show one question at a time?
    """

    question_count: Optional[int] = Field(None, examples=[12], repr=False)
    """
    the number of questions in the quiz
    """

    points_possible: Optional[int] = Field(None, examples=[20], repr=False)
    """
    The total point value given to the quiz
    """

    cant_go_back: Optional[bool] = Field(None, examples=[False], repr=False)
    """
    lock questions after answering? only valid if one_question_at_a_time=true
    """

    access_code: Optional[str] = Field(None, examples=['2beornot2be'], repr=False)
    """
    access code to restrict quiz access
    """

    ip_filter: Optional[str] = Field(None, examples=['123.123.123.123'], repr=False)
    """
    IP address or range that quiz access is limited to
    """

    due_at: Optional[datetime] = Field(
        None, examples=['2013-01-23T23:59:00-07:00'], repr=False
    )
    """
    when the quiz is due
    """

    lock_at: Optional[datetime] = Field(None, repr=False)
    """
    when to lock the quiz
    """

    unlock_at: Optional[datetime] = Field(
        None, examples=['2013-01-21T23:59:00-07:00'], repr=False
    )
    """
    when to unlock the quiz
    """

    published: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    whether the quiz has a published or unpublished draft state.
    """

    unpublishable: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    Whether the assignment's 'published' state can be changed to false. Will be false if there are student submissions for the quiz.
    """

    locked_for_user: Optional[bool] = Field(None, examples=[False], repr=False)
    """
    Whether or not this is locked for the user.
    """

    lock_info: Optional[LockInfo] = Field(None, repr=False)
    """
    (Optional) Information for the user about the lock. Present when locked_for_user is true.
    """

    lock_explanation: Optional[str] = Field(
        None, examples=['This quiz is locked until September 1 at 12:00am'], repr=False
    )
    """
    (Optional) An explanation of why this is locked for the user. Present when locked_for_user is true.
    """

    speedgrader_url: Optional[str] = Field(
        None,
        examples=[
            'http://canvas.instructure.com/courses/1/speed_grader?assignment_id=1'
        ],
        repr=False,
    )
    """
    Link to SpeedGrader for this quiz. Will not be present if quiz is unpublished
    """

    quiz_extensions_url: Optional[str] = Field(
        None,
        examples=['http://canvas.instructure.com/courses/1/quizzes/2/quiz_extensions'],
        repr=False,
    )
    """
    Link to endpoint to send extensions for this quiz.
    """

    permissions: Optional[QuizPermissions] = Field(None, repr=False)
    """
    Permissions the user has for the quiz
    """

    all_dates: Optional[list[AssignmentDate]] = Field(None, repr=False)
    """
    list of due dates for the quiz
    """

    version_number: Optional[int] = Field(None, examples=[3], repr=False)
    """
    Current version number of the quiz
    """

    question_types: Optional[list[str]] = Field(
        None, examples=[['multiple_choice', 'essay']], repr=False
    )
    """
    List of question types in the quiz
    """

    anonymous_submissions: Optional[bool] = Field(None, examples=[False], repr=False)
    """
    Whether survey submissions will be kept anonymous (only applicable to 'graded_survey', 'survey' quiz types)
    """


from .assignments import AssignmentDate, LockInfo  # noqa: E402