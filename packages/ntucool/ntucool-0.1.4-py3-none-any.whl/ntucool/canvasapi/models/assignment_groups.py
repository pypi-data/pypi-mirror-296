# generated by datamodel-codegen:
#   filename:  assignment_groups.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Optional

from pydantic import Field

from . import CanvasBaseModel



class GradingRules(CanvasBaseModel):
    drop_lowest: Optional[int] = Field(None, examples=[1])
    """
    Number of lowest scores to be dropped for each user.
    """

    drop_highest: Optional[int] = Field(None, examples=[1])
    """
    Number of highest scores to be dropped for each user.
    """

    never_drop: Optional[list[int]] = Field(None, examples=[[33, 17, 24]])
    """
    Assignment IDs that should never be dropped.
    """



class AssignmentGroup(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[1])
    """
    the id of the Assignment Group
    """

    name: Optional[str] = Field(None, examples=['group2'])
    """
    the name of the Assignment Group
    """

    position: Optional[int] = Field(None, examples=[7], repr=False)
    """
    the position of the Assignment Group
    """

    group_weight: Optional[int] = Field(None, examples=[20], repr=False)
    """
    the weight of the Assignment Group
    """

    sis_source_id: Optional[str] = Field(None, examples=['1234'], repr=False)
    """
    the sis source id of the Assignment Group
    """

    integration_data: Optional[dict[str, Any]] = Field(
        None, examples=[{'5678': '0954'}], repr=False
    )
    """
    the integration data of the Assignment Group
    """

    assignments: Optional[list[int]] = Field(None, examples=[[]], repr=False)
    """
    the assignments in this Assignment Group (see the Assignment API for a detailed list of fields)
    """

    rules: Optional[GradingRules] = Field(None, repr=False)
    """
    the grading rules that this Assignment Group has
    """

