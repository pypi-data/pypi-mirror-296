# generated by datamodel-codegen:
#   filename:  quiz_reports.json
#   timestamp: 2024-09-02T14:02:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import Field

from . import CanvasBaseModel



class QuizReport(CanvasBaseModel):
    id: Optional[int] = Field(None, examples=[5])
    """
    the ID of the quiz report
    """

    quiz_id: Optional[int] = Field(None, examples=[4], repr=False)
    """
    the ID of the quiz
    """

    report_type: Optional[str] = Field(None, examples=['student_analysis'])
    """
    which type of report this is possible values: 'student_analysis', 'item_analysis'
    """

    readable_type: Optional[str] = Field(
        None, examples=['Student Analysis'], repr=False
    )
    """
    a human-readable (and localized) version of the report_type
    """

    includes_all_versions: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    boolean indicating whether the report represents all submissions or only the most recent ones for each student
    """

    anonymous: Optional[bool] = Field(None, examples=[False], repr=False)
    """
    boolean indicating whether the report is for an anonymous survey. if true, no student names will be included in the csv
    """

    generatable: Optional[bool] = Field(None, examples=[True], repr=False)
    """
    boolean indicating whether the report can be generated, which is true unless the quiz is a survey one
    """

    created_at: Optional[datetime] = Field(
        None, examples=['2013-05-01T12:34:56-07:00'], repr=False
    )
    """
    when the report was created
    """

    updated_at: Optional[datetime] = Field(
        None, examples=['2013-05-01T12:34:56-07:00'], repr=False
    )
    """
    when the report was last updated
    """

    url: Optional[str] = Field(
        None,
        examples=['http://canvas.example.com/api/v1/courses/1/quizzes/1/reports/1'],
        repr=False,
    )
    """
    the API endpoint for this report
    """

    file: Optional[File] = Field(None, repr=False)
    """
    if the report has finished generating, a File object that represents it. refer to the Files API for more information about the format
    """

    progress_url: Optional[str] = Field(None, repr=False)
    """
    if the report has not yet finished generating, a URL where information about its progress can be retrieved. refer to the Progress API for more information (Note: not available in JSON-API format)
    """

    progress: Optional[Progress] = Field(None, repr=False)
    """
    if the report is being generated, a Progress object that represents the operation. Refer to the Progress API for more information about the format. (Note: available only in JSON-API format)
    """


from .files import File  # noqa: E402
from .progress import Progress  # noqa: E402