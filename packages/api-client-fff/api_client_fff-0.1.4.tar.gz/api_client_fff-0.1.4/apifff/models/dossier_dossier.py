# coding: utf-8

"""

    # Authentication  <!-- ReDoc-Inject: <security-definitions> -->  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DossierDossier(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ds_no': 'str',
        'sa_no': 'int',
        'in_no': 'str',
        'li_no': 'str',
        'td_cod': 'str',
        'dec_no': 'str',
        'ds_dat': 'datetime',
        'ds_lib_motif': 'str',
        'ds_sujet': 'str',
        'ds_nb_jaune': 'int',
        'ds_rouge': 'str',
        'ds_hors_match': 'str',
        'in_nom': 'str',
        'in_prenom': 'str',
        'in_civ': 'str',
        'cdg': 'CdgDossier',
        'match_entity': 'AnyOfDossierDossierMatchEntity',
        'equipe': 'AnyOfDossierDossierEquipe',
        'decisions': 'list[DossierDecisionDossier]'
    }

    attribute_map = {
        'ds_no': 'ds_no',
        'sa_no': 'sa_no',
        'in_no': 'in_no',
        'li_no': 'li_no',
        'td_cod': 'td_cod',
        'dec_no': 'dec_no',
        'ds_dat': 'ds_dat',
        'ds_lib_motif': 'ds_lib_motif',
        'ds_sujet': 'ds_sujet',
        'ds_nb_jaune': 'ds_nb_jaune',
        'ds_rouge': 'ds_rouge',
        'ds_hors_match': 'ds_hors_match',
        'in_nom': 'in_nom',
        'in_prenom': 'in_prenom',
        'in_civ': 'in_civ',
        'cdg': 'cdg',
        'match_entity': 'match_entity',
        'equipe': 'equipe',
        'decisions': 'decisions'
    }

    def __init__(self, ds_no=None, sa_no=None, in_no=None, li_no=None, td_cod=None, dec_no=None, ds_dat=None, ds_lib_motif=None, ds_sujet=None, ds_nb_jaune=None, ds_rouge=None, ds_hors_match=None, in_nom=None, in_prenom=None, in_civ=None, cdg=None, match_entity=None, equipe=None, decisions=None):  # noqa: E501
        """DossierDossier - a model defined in Swagger"""  # noqa: E501
        self._ds_no = None
        self._sa_no = None
        self._in_no = None
        self._li_no = None
        self._td_cod = None
        self._dec_no = None
        self._ds_dat = None
        self._ds_lib_motif = None
        self._ds_sujet = None
        self._ds_nb_jaune = None
        self._ds_rouge = None
        self._ds_hors_match = None
        self._in_nom = None
        self._in_prenom = None
        self._in_civ = None
        self._cdg = None
        self._match_entity = None
        self._equipe = None
        self._decisions = None
        self.discriminator = None
        if ds_no is not None:
            self.ds_no = ds_no
        if sa_no is not None:
            self.sa_no = sa_no
        if in_no is not None:
            self.in_no = in_no
        if li_no is not None:
            self.li_no = li_no
        if td_cod is not None:
            self.td_cod = td_cod
        if dec_no is not None:
            self.dec_no = dec_no
        if ds_dat is not None:
            self.ds_dat = ds_dat
        if ds_lib_motif is not None:
            self.ds_lib_motif = ds_lib_motif
        if ds_sujet is not None:
            self.ds_sujet = ds_sujet
        if ds_nb_jaune is not None:
            self.ds_nb_jaune = ds_nb_jaune
        if ds_rouge is not None:
            self.ds_rouge = ds_rouge
        if ds_hors_match is not None:
            self.ds_hors_match = ds_hors_match
        if in_nom is not None:
            self.in_nom = in_nom
        if in_prenom is not None:
            self.in_prenom = in_prenom
        if in_civ is not None:
            self.in_civ = in_civ
        if cdg is not None:
            self.cdg = cdg
        if match_entity is not None:
            self.match_entity = match_entity
        if equipe is not None:
            self.equipe = equipe
        if decisions is not None:
            self.decisions = decisions

    @property
    def ds_no(self):
        """Gets the ds_no of this DossierDossier.  # noqa: E501


        :return: The ds_no of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._ds_no

    @ds_no.setter
    def ds_no(self, ds_no):
        """Sets the ds_no of this DossierDossier.


        :param ds_no: The ds_no of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._ds_no = ds_no

    @property
    def sa_no(self):
        """Gets the sa_no of this DossierDossier.  # noqa: E501


        :return: The sa_no of this DossierDossier.  # noqa: E501
        :rtype: int
        """
        return self._sa_no

    @sa_no.setter
    def sa_no(self, sa_no):
        """Sets the sa_no of this DossierDossier.


        :param sa_no: The sa_no of this DossierDossier.  # noqa: E501
        :type: int
        """

        self._sa_no = sa_no

    @property
    def in_no(self):
        """Gets the in_no of this DossierDossier.  # noqa: E501


        :return: The in_no of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._in_no

    @in_no.setter
    def in_no(self, in_no):
        """Sets the in_no of this DossierDossier.


        :param in_no: The in_no of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._in_no = in_no

    @property
    def li_no(self):
        """Gets the li_no of this DossierDossier.  # noqa: E501


        :return: The li_no of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._li_no

    @li_no.setter
    def li_no(self, li_no):
        """Sets the li_no of this DossierDossier.


        :param li_no: The li_no of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._li_no = li_no

    @property
    def td_cod(self):
        """Gets the td_cod of this DossierDossier.  # noqa: E501


        :return: The td_cod of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._td_cod

    @td_cod.setter
    def td_cod(self, td_cod):
        """Sets the td_cod of this DossierDossier.


        :param td_cod: The td_cod of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._td_cod = td_cod

    @property
    def dec_no(self):
        """Gets the dec_no of this DossierDossier.  # noqa: E501


        :return: The dec_no of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._dec_no

    @dec_no.setter
    def dec_no(self, dec_no):
        """Sets the dec_no of this DossierDossier.


        :param dec_no: The dec_no of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._dec_no = dec_no

    @property
    def ds_dat(self):
        """Gets the ds_dat of this DossierDossier.  # noqa: E501


        :return: The ds_dat of this DossierDossier.  # noqa: E501
        :rtype: datetime
        """
        return self._ds_dat

    @ds_dat.setter
    def ds_dat(self, ds_dat):
        """Sets the ds_dat of this DossierDossier.


        :param ds_dat: The ds_dat of this DossierDossier.  # noqa: E501
        :type: datetime
        """

        self._ds_dat = ds_dat

    @property
    def ds_lib_motif(self):
        """Gets the ds_lib_motif of this DossierDossier.  # noqa: E501


        :return: The ds_lib_motif of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._ds_lib_motif

    @ds_lib_motif.setter
    def ds_lib_motif(self, ds_lib_motif):
        """Sets the ds_lib_motif of this DossierDossier.


        :param ds_lib_motif: The ds_lib_motif of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._ds_lib_motif = ds_lib_motif

    @property
    def ds_sujet(self):
        """Gets the ds_sujet of this DossierDossier.  # noqa: E501


        :return: The ds_sujet of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._ds_sujet

    @ds_sujet.setter
    def ds_sujet(self, ds_sujet):
        """Sets the ds_sujet of this DossierDossier.


        :param ds_sujet: The ds_sujet of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._ds_sujet = ds_sujet

    @property
    def ds_nb_jaune(self):
        """Gets the ds_nb_jaune of this DossierDossier.  # noqa: E501


        :return: The ds_nb_jaune of this DossierDossier.  # noqa: E501
        :rtype: int
        """
        return self._ds_nb_jaune

    @ds_nb_jaune.setter
    def ds_nb_jaune(self, ds_nb_jaune):
        """Sets the ds_nb_jaune of this DossierDossier.


        :param ds_nb_jaune: The ds_nb_jaune of this DossierDossier.  # noqa: E501
        :type: int
        """

        self._ds_nb_jaune = ds_nb_jaune

    @property
    def ds_rouge(self):
        """Gets the ds_rouge of this DossierDossier.  # noqa: E501


        :return: The ds_rouge of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._ds_rouge

    @ds_rouge.setter
    def ds_rouge(self, ds_rouge):
        """Sets the ds_rouge of this DossierDossier.


        :param ds_rouge: The ds_rouge of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._ds_rouge = ds_rouge

    @property
    def ds_hors_match(self):
        """Gets the ds_hors_match of this DossierDossier.  # noqa: E501


        :return: The ds_hors_match of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._ds_hors_match

    @ds_hors_match.setter
    def ds_hors_match(self, ds_hors_match):
        """Sets the ds_hors_match of this DossierDossier.


        :param ds_hors_match: The ds_hors_match of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._ds_hors_match = ds_hors_match

    @property
    def in_nom(self):
        """Gets the in_nom of this DossierDossier.  # noqa: E501


        :return: The in_nom of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._in_nom

    @in_nom.setter
    def in_nom(self, in_nom):
        """Sets the in_nom of this DossierDossier.


        :param in_nom: The in_nom of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._in_nom = in_nom

    @property
    def in_prenom(self):
        """Gets the in_prenom of this DossierDossier.  # noqa: E501


        :return: The in_prenom of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._in_prenom

    @in_prenom.setter
    def in_prenom(self, in_prenom):
        """Sets the in_prenom of this DossierDossier.


        :param in_prenom: The in_prenom of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._in_prenom = in_prenom

    @property
    def in_civ(self):
        """Gets the in_civ of this DossierDossier.  # noqa: E501


        :return: The in_civ of this DossierDossier.  # noqa: E501
        :rtype: str
        """
        return self._in_civ

    @in_civ.setter
    def in_civ(self, in_civ):
        """Sets the in_civ of this DossierDossier.


        :param in_civ: The in_civ of this DossierDossier.  # noqa: E501
        :type: str
        """

        self._in_civ = in_civ

    @property
    def cdg(self):
        """Gets the cdg of this DossierDossier.  # noqa: E501


        :return: The cdg of this DossierDossier.  # noqa: E501
        :rtype: CdgDossier
        """
        return self._cdg

    @cdg.setter
    def cdg(self, cdg):
        """Sets the cdg of this DossierDossier.


        :param cdg: The cdg of this DossierDossier.  # noqa: E501
        :type: CdgDossier
        """

        self._cdg = cdg

    @property
    def match_entity(self):
        """Gets the match_entity of this DossierDossier.  # noqa: E501


        :return: The match_entity of this DossierDossier.  # noqa: E501
        :rtype: AnyOfDossierDossierMatchEntity
        """
        return self._match_entity

    @match_entity.setter
    def match_entity(self, match_entity):
        """Sets the match_entity of this DossierDossier.


        :param match_entity: The match_entity of this DossierDossier.  # noqa: E501
        :type: AnyOfDossierDossierMatchEntity
        """

        self._match_entity = match_entity

    @property
    def equipe(self):
        """Gets the equipe of this DossierDossier.  # noqa: E501


        :return: The equipe of this DossierDossier.  # noqa: E501
        :rtype: AnyOfDossierDossierEquipe
        """
        return self._equipe

    @equipe.setter
    def equipe(self, equipe):
        """Sets the equipe of this DossierDossier.


        :param equipe: The equipe of this DossierDossier.  # noqa: E501
        :type: AnyOfDossierDossierEquipe
        """

        self._equipe = equipe

    @property
    def decisions(self):
        """Gets the decisions of this DossierDossier.  # noqa: E501


        :return: The decisions of this DossierDossier.  # noqa: E501
        :rtype: list[DossierDecisionDossier]
        """
        return self._decisions

    @decisions.setter
    def decisions(self, decisions):
        """Sets the decisions of this DossierDossier.


        :param decisions: The decisions of this DossierDossier.  # noqa: E501
        :type: list[DossierDecisionDossier]
        """

        self._decisions = decisions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DossierDossier, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DossierDossier):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
