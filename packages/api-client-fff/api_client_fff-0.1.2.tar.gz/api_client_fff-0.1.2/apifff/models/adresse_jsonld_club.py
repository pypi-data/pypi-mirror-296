# coding: utf-8

"""

    # Authentication  <!-- ReDoc-Inject: <security-definitions> -->  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AdresseJsonldClub(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'context': 'OneOfAdresseJsonldClubContext',
        'id': 'str',
        'type': 'str',
        'ai_no': 'int',
        'py_cod': 'str',
        'py_libelle': 'str',
        'ai_dat_maj': 'datetime',
        'ai_uti_maj': 'str',
        'ai_statut': 'str',
        'ai_dat': 'datetime',
        'ai_typ': 'str',
        'ai_typ_libelle': 'str',
        'ai_adr1': 'str',
        'ai_adr2': 'str',
        'ai_adr3': 'str',
        'ai_cp': 'int',
        'ai_bdis': 'str',
        'ai_insee': 'int',
        'ai_geo': 'int',
        'ai_perso': 'bool',
        'ai_club': 'bool',
        'ai_des': 'bool',
        'ai_prof': 'bool',
        'ai_poi': 'str',
        'poi_latitude': 'str',
        'poi_longitude': 'str'
    }

    attribute_map = {
        'context': '@context',
        'id': '@id',
        'type': '@type',
        'ai_no': 'ai_no',
        'py_cod': 'py_cod',
        'py_libelle': 'py_libelle',
        'ai_dat_maj': 'ai_dat_maj',
        'ai_uti_maj': 'ai_uti_maj',
        'ai_statut': 'ai_statut',
        'ai_dat': 'ai_dat',
        'ai_typ': 'ai_typ',
        'ai_typ_libelle': 'ai_typ_libelle',
        'ai_adr1': 'ai_adr1',
        'ai_adr2': 'ai_adr2',
        'ai_adr3': 'ai_adr3',
        'ai_cp': 'ai_cp',
        'ai_bdis': 'ai_bdis',
        'ai_insee': 'ai_insee',
        'ai_geo': 'ai_geo',
        'ai_perso': 'ai_perso',
        'ai_club': 'ai_club',
        'ai_des': 'ai_des',
        'ai_prof': 'ai_prof',
        'ai_poi': 'ai_poi',
        'poi_latitude': 'poi_latitude',
        'poi_longitude': 'poi_longitude'
    }

    def __init__(self, context=None, id=None, type=None, ai_no=None, py_cod=None, py_libelle=None, ai_dat_maj=None, ai_uti_maj=None, ai_statut=None, ai_dat=None, ai_typ=None, ai_typ_libelle=None, ai_adr1=None, ai_adr2=None, ai_adr3=None, ai_cp=None, ai_bdis=None, ai_insee=None, ai_geo=None, ai_perso=None, ai_club=None, ai_des=None, ai_prof=None, ai_poi=None, poi_latitude=None, poi_longitude=None):  # noqa: E501
        """AdresseJsonldClub - a model defined in Swagger"""  # noqa: E501
        self._context = None
        self._id = None
        self._type = None
        self._ai_no = None
        self._py_cod = None
        self._py_libelle = None
        self._ai_dat_maj = None
        self._ai_uti_maj = None
        self._ai_statut = None
        self._ai_dat = None
        self._ai_typ = None
        self._ai_typ_libelle = None
        self._ai_adr1 = None
        self._ai_adr2 = None
        self._ai_adr3 = None
        self._ai_cp = None
        self._ai_bdis = None
        self._ai_insee = None
        self._ai_geo = None
        self._ai_perso = None
        self._ai_club = None
        self._ai_des = None
        self._ai_prof = None
        self._ai_poi = None
        self._poi_latitude = None
        self._poi_longitude = None
        self.discriminator = None
        if context is not None:
            self.context = context
        if id is not None:
            self.id = id
        if type is not None:
            self.type = type
        if ai_no is not None:
            self.ai_no = ai_no
        if py_cod is not None:
            self.py_cod = py_cod
        if py_libelle is not None:
            self.py_libelle = py_libelle
        if ai_dat_maj is not None:
            self.ai_dat_maj = ai_dat_maj
        if ai_uti_maj is not None:
            self.ai_uti_maj = ai_uti_maj
        if ai_statut is not None:
            self.ai_statut = ai_statut
        if ai_dat is not None:
            self.ai_dat = ai_dat
        if ai_typ is not None:
            self.ai_typ = ai_typ
        if ai_typ_libelle is not None:
            self.ai_typ_libelle = ai_typ_libelle
        if ai_adr1 is not None:
            self.ai_adr1 = ai_adr1
        if ai_adr2 is not None:
            self.ai_adr2 = ai_adr2
        if ai_adr3 is not None:
            self.ai_adr3 = ai_adr3
        if ai_cp is not None:
            self.ai_cp = ai_cp
        if ai_bdis is not None:
            self.ai_bdis = ai_bdis
        if ai_insee is not None:
            self.ai_insee = ai_insee
        if ai_geo is not None:
            self.ai_geo = ai_geo
        if ai_perso is not None:
            self.ai_perso = ai_perso
        if ai_club is not None:
            self.ai_club = ai_club
        if ai_des is not None:
            self.ai_des = ai_des
        if ai_prof is not None:
            self.ai_prof = ai_prof
        if ai_poi is not None:
            self.ai_poi = ai_poi
        if poi_latitude is not None:
            self.poi_latitude = poi_latitude
        if poi_longitude is not None:
            self.poi_longitude = poi_longitude

    @property
    def context(self):
        """Gets the context of this AdresseJsonldClub.  # noqa: E501


        :return: The context of this AdresseJsonldClub.  # noqa: E501
        :rtype: OneOfAdresseJsonldClubContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this AdresseJsonldClub.


        :param context: The context of this AdresseJsonldClub.  # noqa: E501
        :type: OneOfAdresseJsonldClubContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this AdresseJsonldClub.  # noqa: E501


        :return: The id of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AdresseJsonldClub.


        :param id: The id of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this AdresseJsonldClub.  # noqa: E501


        :return: The type of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AdresseJsonldClub.


        :param type: The type of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def ai_no(self):
        """Gets the ai_no of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_no of this AdresseJsonldClub.  # noqa: E501
        :rtype: int
        """
        return self._ai_no

    @ai_no.setter
    def ai_no(self, ai_no):
        """Sets the ai_no of this AdresseJsonldClub.


        :param ai_no: The ai_no of this AdresseJsonldClub.  # noqa: E501
        :type: int
        """

        self._ai_no = ai_no

    @property
    def py_cod(self):
        """Gets the py_cod of this AdresseJsonldClub.  # noqa: E501


        :return: The py_cod of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._py_cod

    @py_cod.setter
    def py_cod(self, py_cod):
        """Sets the py_cod of this AdresseJsonldClub.


        :param py_cod: The py_cod of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._py_cod = py_cod

    @property
    def py_libelle(self):
        """Gets the py_libelle of this AdresseJsonldClub.  # noqa: E501


        :return: The py_libelle of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._py_libelle

    @py_libelle.setter
    def py_libelle(self, py_libelle):
        """Sets the py_libelle of this AdresseJsonldClub.


        :param py_libelle: The py_libelle of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._py_libelle = py_libelle

    @property
    def ai_dat_maj(self):
        """Gets the ai_dat_maj of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_dat_maj of this AdresseJsonldClub.  # noqa: E501
        :rtype: datetime
        """
        return self._ai_dat_maj

    @ai_dat_maj.setter
    def ai_dat_maj(self, ai_dat_maj):
        """Sets the ai_dat_maj of this AdresseJsonldClub.


        :param ai_dat_maj: The ai_dat_maj of this AdresseJsonldClub.  # noqa: E501
        :type: datetime
        """

        self._ai_dat_maj = ai_dat_maj

    @property
    def ai_uti_maj(self):
        """Gets the ai_uti_maj of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_uti_maj of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_uti_maj

    @ai_uti_maj.setter
    def ai_uti_maj(self, ai_uti_maj):
        """Sets the ai_uti_maj of this AdresseJsonldClub.


        :param ai_uti_maj: The ai_uti_maj of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_uti_maj = ai_uti_maj

    @property
    def ai_statut(self):
        """Gets the ai_statut of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_statut of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_statut

    @ai_statut.setter
    def ai_statut(self, ai_statut):
        """Sets the ai_statut of this AdresseJsonldClub.


        :param ai_statut: The ai_statut of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_statut = ai_statut

    @property
    def ai_dat(self):
        """Gets the ai_dat of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_dat of this AdresseJsonldClub.  # noqa: E501
        :rtype: datetime
        """
        return self._ai_dat

    @ai_dat.setter
    def ai_dat(self, ai_dat):
        """Sets the ai_dat of this AdresseJsonldClub.


        :param ai_dat: The ai_dat of this AdresseJsonldClub.  # noqa: E501
        :type: datetime
        """

        self._ai_dat = ai_dat

    @property
    def ai_typ(self):
        """Gets the ai_typ of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_typ of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_typ

    @ai_typ.setter
    def ai_typ(self, ai_typ):
        """Sets the ai_typ of this AdresseJsonldClub.


        :param ai_typ: The ai_typ of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_typ = ai_typ

    @property
    def ai_typ_libelle(self):
        """Gets the ai_typ_libelle of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_typ_libelle of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_typ_libelle

    @ai_typ_libelle.setter
    def ai_typ_libelle(self, ai_typ_libelle):
        """Sets the ai_typ_libelle of this AdresseJsonldClub.


        :param ai_typ_libelle: The ai_typ_libelle of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_typ_libelle = ai_typ_libelle

    @property
    def ai_adr1(self):
        """Gets the ai_adr1 of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_adr1 of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_adr1

    @ai_adr1.setter
    def ai_adr1(self, ai_adr1):
        """Sets the ai_adr1 of this AdresseJsonldClub.


        :param ai_adr1: The ai_adr1 of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_adr1 = ai_adr1

    @property
    def ai_adr2(self):
        """Gets the ai_adr2 of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_adr2 of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_adr2

    @ai_adr2.setter
    def ai_adr2(self, ai_adr2):
        """Sets the ai_adr2 of this AdresseJsonldClub.


        :param ai_adr2: The ai_adr2 of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_adr2 = ai_adr2

    @property
    def ai_adr3(self):
        """Gets the ai_adr3 of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_adr3 of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_adr3

    @ai_adr3.setter
    def ai_adr3(self, ai_adr3):
        """Sets the ai_adr3 of this AdresseJsonldClub.


        :param ai_adr3: The ai_adr3 of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_adr3 = ai_adr3

    @property
    def ai_cp(self):
        """Gets the ai_cp of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_cp of this AdresseJsonldClub.  # noqa: E501
        :rtype: int
        """
        return self._ai_cp

    @ai_cp.setter
    def ai_cp(self, ai_cp):
        """Sets the ai_cp of this AdresseJsonldClub.


        :param ai_cp: The ai_cp of this AdresseJsonldClub.  # noqa: E501
        :type: int
        """

        self._ai_cp = ai_cp

    @property
    def ai_bdis(self):
        """Gets the ai_bdis of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_bdis of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_bdis

    @ai_bdis.setter
    def ai_bdis(self, ai_bdis):
        """Sets the ai_bdis of this AdresseJsonldClub.


        :param ai_bdis: The ai_bdis of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_bdis = ai_bdis

    @property
    def ai_insee(self):
        """Gets the ai_insee of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_insee of this AdresseJsonldClub.  # noqa: E501
        :rtype: int
        """
        return self._ai_insee

    @ai_insee.setter
    def ai_insee(self, ai_insee):
        """Sets the ai_insee of this AdresseJsonldClub.


        :param ai_insee: The ai_insee of this AdresseJsonldClub.  # noqa: E501
        :type: int
        """

        self._ai_insee = ai_insee

    @property
    def ai_geo(self):
        """Gets the ai_geo of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_geo of this AdresseJsonldClub.  # noqa: E501
        :rtype: int
        """
        return self._ai_geo

    @ai_geo.setter
    def ai_geo(self, ai_geo):
        """Sets the ai_geo of this AdresseJsonldClub.


        :param ai_geo: The ai_geo of this AdresseJsonldClub.  # noqa: E501
        :type: int
        """

        self._ai_geo = ai_geo

    @property
    def ai_perso(self):
        """Gets the ai_perso of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_perso of this AdresseJsonldClub.  # noqa: E501
        :rtype: bool
        """
        return self._ai_perso

    @ai_perso.setter
    def ai_perso(self, ai_perso):
        """Sets the ai_perso of this AdresseJsonldClub.


        :param ai_perso: The ai_perso of this AdresseJsonldClub.  # noqa: E501
        :type: bool
        """

        self._ai_perso = ai_perso

    @property
    def ai_club(self):
        """Gets the ai_club of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_club of this AdresseJsonldClub.  # noqa: E501
        :rtype: bool
        """
        return self._ai_club

    @ai_club.setter
    def ai_club(self, ai_club):
        """Sets the ai_club of this AdresseJsonldClub.


        :param ai_club: The ai_club of this AdresseJsonldClub.  # noqa: E501
        :type: bool
        """

        self._ai_club = ai_club

    @property
    def ai_des(self):
        """Gets the ai_des of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_des of this AdresseJsonldClub.  # noqa: E501
        :rtype: bool
        """
        return self._ai_des

    @ai_des.setter
    def ai_des(self, ai_des):
        """Sets the ai_des of this AdresseJsonldClub.


        :param ai_des: The ai_des of this AdresseJsonldClub.  # noqa: E501
        :type: bool
        """

        self._ai_des = ai_des

    @property
    def ai_prof(self):
        """Gets the ai_prof of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_prof of this AdresseJsonldClub.  # noqa: E501
        :rtype: bool
        """
        return self._ai_prof

    @ai_prof.setter
    def ai_prof(self, ai_prof):
        """Sets the ai_prof of this AdresseJsonldClub.


        :param ai_prof: The ai_prof of this AdresseJsonldClub.  # noqa: E501
        :type: bool
        """

        self._ai_prof = ai_prof

    @property
    def ai_poi(self):
        """Gets the ai_poi of this AdresseJsonldClub.  # noqa: E501


        :return: The ai_poi of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._ai_poi

    @ai_poi.setter
    def ai_poi(self, ai_poi):
        """Sets the ai_poi of this AdresseJsonldClub.


        :param ai_poi: The ai_poi of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._ai_poi = ai_poi

    @property
    def poi_latitude(self):
        """Gets the poi_latitude of this AdresseJsonldClub.  # noqa: E501


        :return: The poi_latitude of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._poi_latitude

    @poi_latitude.setter
    def poi_latitude(self, poi_latitude):
        """Sets the poi_latitude of this AdresseJsonldClub.


        :param poi_latitude: The poi_latitude of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._poi_latitude = poi_latitude

    @property
    def poi_longitude(self):
        """Gets the poi_longitude of this AdresseJsonldClub.  # noqa: E501


        :return: The poi_longitude of this AdresseJsonldClub.  # noqa: E501
        :rtype: str
        """
        return self._poi_longitude

    @poi_longitude.setter
    def poi_longitude(self, poi_longitude):
        """Sets the poi_longitude of this AdresseJsonldClub.


        :param poi_longitude: The poi_longitude of this AdresseJsonldClub.  # noqa: E501
        :type: str
        """

        self._poi_longitude = poi_longitude

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AdresseJsonldClub, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdresseJsonldClub):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
