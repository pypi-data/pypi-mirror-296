# coding: utf-8

"""

    # Authentication  <!-- ReDoc-Inject: <security-definitions> -->  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MatchMembreJsonldMatchMembre(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'type': 'str',
        'context': 'OneOfMatchMembreJsonldMatchMembreContext',
        'mm_no': 'int',
        'match_entity': 'AnyOfMatchMembreJsonldMatchMembreMatchEntity',
        'in_no': 'str',
        'po_cod': 'str',
        'mm_nb_km': 'int',
        'cdg': 'CdgJsonldMatchMembre',
        'prenom': 'str',
        'nom': 'str',
        'label_position': 'str',
        'position_ordre': 'int',
        'in_no_obs': 'str',
        'ctr_cod': 'str'
    }

    attribute_map = {
        'id': '@id',
        'type': '@type',
        'context': '@context',
        'mm_no': 'mm_no',
        'match_entity': 'match_entity',
        'in_no': 'in_no',
        'po_cod': 'po_cod',
        'mm_nb_km': 'mm_nb_km',
        'cdg': 'cdg',
        'prenom': 'prenom',
        'nom': 'nom',
        'label_position': 'label_position',
        'position_ordre': 'position_ordre',
        'in_no_obs': 'in_no_obs',
        'ctr_cod': 'ctr_cod'
    }

    def __init__(self, id=None, type=None, context=None, mm_no=None, match_entity=None, in_no=None, po_cod=None, mm_nb_km=None, cdg=None, prenom=None, nom=None, label_position=None, position_ordre=None, in_no_obs=None, ctr_cod=None):  # noqa: E501
        """MatchMembreJsonldMatchMembre - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._type = None
        self._context = None
        self._mm_no = None
        self._match_entity = None
        self._in_no = None
        self._po_cod = None
        self._mm_nb_km = None
        self._cdg = None
        self._prenom = None
        self._nom = None
        self._label_position = None
        self._position_ordre = None
        self._in_no_obs = None
        self._ctr_cod = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if type is not None:
            self.type = type
        if context is not None:
            self.context = context
        if mm_no is not None:
            self.mm_no = mm_no
        if match_entity is not None:
            self.match_entity = match_entity
        if in_no is not None:
            self.in_no = in_no
        if po_cod is not None:
            self.po_cod = po_cod
        if mm_nb_km is not None:
            self.mm_nb_km = mm_nb_km
        if cdg is not None:
            self.cdg = cdg
        if prenom is not None:
            self.prenom = prenom
        if nom is not None:
            self.nom = nom
        if label_position is not None:
            self.label_position = label_position
        if position_ordre is not None:
            self.position_ordre = position_ordre
        if in_no_obs is not None:
            self.in_no_obs = in_no_obs
        if ctr_cod is not None:
            self.ctr_cod = ctr_cod

    @property
    def id(self):
        """Gets the id of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The id of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MatchMembreJsonldMatchMembre.


        :param id: The id of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The type of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MatchMembreJsonldMatchMembre.


        :param type: The type of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def context(self):
        """Gets the context of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The context of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: OneOfMatchMembreJsonldMatchMembreContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this MatchMembreJsonldMatchMembre.


        :param context: The context of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: OneOfMatchMembreJsonldMatchMembreContext
        """

        self._context = context

    @property
    def mm_no(self):
        """Gets the mm_no of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The mm_no of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: int
        """
        return self._mm_no

    @mm_no.setter
    def mm_no(self, mm_no):
        """Sets the mm_no of this MatchMembreJsonldMatchMembre.


        :param mm_no: The mm_no of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: int
        """

        self._mm_no = mm_no

    @property
    def match_entity(self):
        """Gets the match_entity of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The match_entity of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: AnyOfMatchMembreJsonldMatchMembreMatchEntity
        """
        return self._match_entity

    @match_entity.setter
    def match_entity(self, match_entity):
        """Sets the match_entity of this MatchMembreJsonldMatchMembre.


        :param match_entity: The match_entity of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: AnyOfMatchMembreJsonldMatchMembreMatchEntity
        """

        self._match_entity = match_entity

    @property
    def in_no(self):
        """Gets the in_no of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The in_no of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._in_no

    @in_no.setter
    def in_no(self, in_no):
        """Sets the in_no of this MatchMembreJsonldMatchMembre.


        :param in_no: The in_no of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._in_no = in_no

    @property
    def po_cod(self):
        """Gets the po_cod of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The po_cod of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._po_cod

    @po_cod.setter
    def po_cod(self, po_cod):
        """Sets the po_cod of this MatchMembreJsonldMatchMembre.


        :param po_cod: The po_cod of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._po_cod = po_cod

    @property
    def mm_nb_km(self):
        """Gets the mm_nb_km of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The mm_nb_km of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: int
        """
        return self._mm_nb_km

    @mm_nb_km.setter
    def mm_nb_km(self, mm_nb_km):
        """Sets the mm_nb_km of this MatchMembreJsonldMatchMembre.


        :param mm_nb_km: The mm_nb_km of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: int
        """

        self._mm_nb_km = mm_nb_km

    @property
    def cdg(self):
        """Gets the cdg of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The cdg of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: CdgJsonldMatchMembre
        """
        return self._cdg

    @cdg.setter
    def cdg(self, cdg):
        """Sets the cdg of this MatchMembreJsonldMatchMembre.


        :param cdg: The cdg of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: CdgJsonldMatchMembre
        """

        self._cdg = cdg

    @property
    def prenom(self):
        """Gets the prenom of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The prenom of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._prenom

    @prenom.setter
    def prenom(self, prenom):
        """Sets the prenom of this MatchMembreJsonldMatchMembre.


        :param prenom: The prenom of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._prenom = prenom

    @property
    def nom(self):
        """Gets the nom of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The nom of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._nom

    @nom.setter
    def nom(self, nom):
        """Sets the nom of this MatchMembreJsonldMatchMembre.


        :param nom: The nom of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._nom = nom

    @property
    def label_position(self):
        """Gets the label_position of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The label_position of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._label_position

    @label_position.setter
    def label_position(self, label_position):
        """Sets the label_position of this MatchMembreJsonldMatchMembre.


        :param label_position: The label_position of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._label_position = label_position

    @property
    def position_ordre(self):
        """Gets the position_ordre of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The position_ordre of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: int
        """
        return self._position_ordre

    @position_ordre.setter
    def position_ordre(self, position_ordre):
        """Sets the position_ordre of this MatchMembreJsonldMatchMembre.


        :param position_ordre: The position_ordre of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: int
        """

        self._position_ordre = position_ordre

    @property
    def in_no_obs(self):
        """Gets the in_no_obs of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The in_no_obs of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._in_no_obs

    @in_no_obs.setter
    def in_no_obs(self, in_no_obs):
        """Sets the in_no_obs of this MatchMembreJsonldMatchMembre.


        :param in_no_obs: The in_no_obs of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._in_no_obs = in_no_obs

    @property
    def ctr_cod(self):
        """Gets the ctr_cod of this MatchMembreJsonldMatchMembre.  # noqa: E501


        :return: The ctr_cod of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :rtype: str
        """
        return self._ctr_cod

    @ctr_cod.setter
    def ctr_cod(self, ctr_cod):
        """Sets the ctr_cod of this MatchMembreJsonldMatchMembre.


        :param ctr_cod: The ctr_cod of this MatchMembreJsonldMatchMembre.  # noqa: E501
        :type: str
        """

        self._ctr_cod = ctr_cod

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MatchMembreJsonldMatchMembre, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MatchMembreJsonldMatchMembre):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
