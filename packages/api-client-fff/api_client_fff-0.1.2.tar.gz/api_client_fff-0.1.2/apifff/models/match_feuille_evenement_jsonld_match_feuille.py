# coding: utf-8

"""

    # Authentication  <!-- ReDoc-Inject: <security-definitions> -->  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MatchFeuilleEvenementJsonldMatchFeuille(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'context': 'OneOfMatchFeuilleEvenementJsonldMatchFeuilleContext',
        'id': 'str',
        'type': 'str',
        'cfe_no': 'int',
        'l1_li_no': 'AnyOfMatchFeuilleEvenementJsonldMatchFeuilleL1LiNo',
        'l2_li_no': 'AnyOfMatchFeuilleEvenementJsonldMatchFeuilleL2LiNo',
        'l1_cfi_maillot': 'int',
        'l2_cfi_maillot': 'int',
        'cfe_typ': 'str',
        'cfe_min': 'int',
        'cfe_min_sup': 'int',
        'cfe_typ_but': 'str',
        'cfe_action': 'str',
        'cfe_cod_motif': 'str',
        'cfe_cod_bless': 'str',
        'cfe_lib': 'str',
        'cfe_trib': 'str',
        'cfe_denombrement': 'str',
        'cfe_tribune': 'str',
        'cfe_nb_evmt': 'int'
    }

    attribute_map = {
        'context': '@context',
        'id': '@id',
        'type': '@type',
        'cfe_no': 'cfe_no',
        'l1_li_no': 'l1_li_no',
        'l2_li_no': 'l2_li_no',
        'l1_cfi_maillot': 'l1_cfi_maillot',
        'l2_cfi_maillot': 'l2_cfi_maillot',
        'cfe_typ': 'cfe_typ',
        'cfe_min': 'cfe_min',
        'cfe_min_sup': 'cfe_min_sup',
        'cfe_typ_but': 'cfe_typ_but',
        'cfe_action': 'cfe_action',
        'cfe_cod_motif': 'cfe_cod_motif',
        'cfe_cod_bless': 'cfe_cod_bless',
        'cfe_lib': 'cfe_lib',
        'cfe_trib': 'cfe_trib',
        'cfe_denombrement': 'cfe_denombrement',
        'cfe_tribune': 'cfe_tribune',
        'cfe_nb_evmt': 'cfe_nb_evmt'
    }

    def __init__(self, context=None, id=None, type=None, cfe_no=None, l1_li_no=None, l2_li_no=None, l1_cfi_maillot=None, l2_cfi_maillot=None, cfe_typ=None, cfe_min=None, cfe_min_sup=None, cfe_typ_but=None, cfe_action=None, cfe_cod_motif=None, cfe_cod_bless=None, cfe_lib=None, cfe_trib=None, cfe_denombrement=None, cfe_tribune=None, cfe_nb_evmt=None):  # noqa: E501
        """MatchFeuilleEvenementJsonldMatchFeuille - a model defined in Swagger"""  # noqa: E501
        self._context = None
        self._id = None
        self._type = None
        self._cfe_no = None
        self._l1_li_no = None
        self._l2_li_no = None
        self._l1_cfi_maillot = None
        self._l2_cfi_maillot = None
        self._cfe_typ = None
        self._cfe_min = None
        self._cfe_min_sup = None
        self._cfe_typ_but = None
        self._cfe_action = None
        self._cfe_cod_motif = None
        self._cfe_cod_bless = None
        self._cfe_lib = None
        self._cfe_trib = None
        self._cfe_denombrement = None
        self._cfe_tribune = None
        self._cfe_nb_evmt = None
        self.discriminator = None
        if context is not None:
            self.context = context
        if id is not None:
            self.id = id
        if type is not None:
            self.type = type
        if cfe_no is not None:
            self.cfe_no = cfe_no
        if l1_li_no is not None:
            self.l1_li_no = l1_li_no
        if l2_li_no is not None:
            self.l2_li_no = l2_li_no
        if l1_cfi_maillot is not None:
            self.l1_cfi_maillot = l1_cfi_maillot
        if l2_cfi_maillot is not None:
            self.l2_cfi_maillot = l2_cfi_maillot
        if cfe_typ is not None:
            self.cfe_typ = cfe_typ
        if cfe_min is not None:
            self.cfe_min = cfe_min
        if cfe_min_sup is not None:
            self.cfe_min_sup = cfe_min_sup
        if cfe_typ_but is not None:
            self.cfe_typ_but = cfe_typ_but
        if cfe_action is not None:
            self.cfe_action = cfe_action
        if cfe_cod_motif is not None:
            self.cfe_cod_motif = cfe_cod_motif
        if cfe_cod_bless is not None:
            self.cfe_cod_bless = cfe_cod_bless
        if cfe_lib is not None:
            self.cfe_lib = cfe_lib
        if cfe_trib is not None:
            self.cfe_trib = cfe_trib
        if cfe_denombrement is not None:
            self.cfe_denombrement = cfe_denombrement
        if cfe_tribune is not None:
            self.cfe_tribune = cfe_tribune
        if cfe_nb_evmt is not None:
            self.cfe_nb_evmt = cfe_nb_evmt

    @property
    def context(self):
        """Gets the context of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The context of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: OneOfMatchFeuilleEvenementJsonldMatchFeuilleContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param context: The context of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: OneOfMatchFeuilleEvenementJsonldMatchFeuilleContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The id of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param id: The id of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The type of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param type: The type of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def cfe_no(self):
        """Gets the cfe_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._cfe_no

    @cfe_no.setter
    def cfe_no(self, cfe_no):
        """Sets the cfe_no of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_no: The cfe_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: int
        """

        self._cfe_no = cfe_no

    @property
    def l1_li_no(self):
        """Gets the l1_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The l1_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: AnyOfMatchFeuilleEvenementJsonldMatchFeuilleL1LiNo
        """
        return self._l1_li_no

    @l1_li_no.setter
    def l1_li_no(self, l1_li_no):
        """Sets the l1_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param l1_li_no: The l1_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: AnyOfMatchFeuilleEvenementJsonldMatchFeuilleL1LiNo
        """

        self._l1_li_no = l1_li_no

    @property
    def l2_li_no(self):
        """Gets the l2_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The l2_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: AnyOfMatchFeuilleEvenementJsonldMatchFeuilleL2LiNo
        """
        return self._l2_li_no

    @l2_li_no.setter
    def l2_li_no(self, l2_li_no):
        """Sets the l2_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param l2_li_no: The l2_li_no of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: AnyOfMatchFeuilleEvenementJsonldMatchFeuilleL2LiNo
        """

        self._l2_li_no = l2_li_no

    @property
    def l1_cfi_maillot(self):
        """Gets the l1_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The l1_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._l1_cfi_maillot

    @l1_cfi_maillot.setter
    def l1_cfi_maillot(self, l1_cfi_maillot):
        """Sets the l1_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param l1_cfi_maillot: The l1_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: int
        """

        self._l1_cfi_maillot = l1_cfi_maillot

    @property
    def l2_cfi_maillot(self):
        """Gets the l2_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The l2_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._l2_cfi_maillot

    @l2_cfi_maillot.setter
    def l2_cfi_maillot(self, l2_cfi_maillot):
        """Sets the l2_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param l2_cfi_maillot: The l2_cfi_maillot of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: int
        """

        self._l2_cfi_maillot = l2_cfi_maillot

    @property
    def cfe_typ(self):
        """Gets the cfe_typ of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_typ of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_typ

    @cfe_typ.setter
    def cfe_typ(self, cfe_typ):
        """Sets the cfe_typ of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_typ: The cfe_typ of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_typ = cfe_typ

    @property
    def cfe_min(self):
        """Gets the cfe_min of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_min of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._cfe_min

    @cfe_min.setter
    def cfe_min(self, cfe_min):
        """Sets the cfe_min of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_min: The cfe_min of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: int
        """

        self._cfe_min = cfe_min

    @property
    def cfe_min_sup(self):
        """Gets the cfe_min_sup of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_min_sup of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._cfe_min_sup

    @cfe_min_sup.setter
    def cfe_min_sup(self, cfe_min_sup):
        """Sets the cfe_min_sup of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_min_sup: The cfe_min_sup of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: int
        """

        self._cfe_min_sup = cfe_min_sup

    @property
    def cfe_typ_but(self):
        """Gets the cfe_typ_but of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_typ_but of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_typ_but

    @cfe_typ_but.setter
    def cfe_typ_but(self, cfe_typ_but):
        """Sets the cfe_typ_but of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_typ_but: The cfe_typ_but of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_typ_but = cfe_typ_but

    @property
    def cfe_action(self):
        """Gets the cfe_action of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_action of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_action

    @cfe_action.setter
    def cfe_action(self, cfe_action):
        """Sets the cfe_action of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_action: The cfe_action of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_action = cfe_action

    @property
    def cfe_cod_motif(self):
        """Gets the cfe_cod_motif of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_cod_motif of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_cod_motif

    @cfe_cod_motif.setter
    def cfe_cod_motif(self, cfe_cod_motif):
        """Sets the cfe_cod_motif of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_cod_motif: The cfe_cod_motif of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_cod_motif = cfe_cod_motif

    @property
    def cfe_cod_bless(self):
        """Gets the cfe_cod_bless of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_cod_bless of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_cod_bless

    @cfe_cod_bless.setter
    def cfe_cod_bless(self, cfe_cod_bless):
        """Sets the cfe_cod_bless of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_cod_bless: The cfe_cod_bless of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_cod_bless = cfe_cod_bless

    @property
    def cfe_lib(self):
        """Gets the cfe_lib of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_lib of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_lib

    @cfe_lib.setter
    def cfe_lib(self, cfe_lib):
        """Sets the cfe_lib of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_lib: The cfe_lib of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_lib = cfe_lib

    @property
    def cfe_trib(self):
        """Gets the cfe_trib of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_trib of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_trib

    @cfe_trib.setter
    def cfe_trib(self, cfe_trib):
        """Sets the cfe_trib of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_trib: The cfe_trib of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_trib = cfe_trib

    @property
    def cfe_denombrement(self):
        """Gets the cfe_denombrement of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_denombrement of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_denombrement

    @cfe_denombrement.setter
    def cfe_denombrement(self, cfe_denombrement):
        """Sets the cfe_denombrement of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_denombrement: The cfe_denombrement of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_denombrement = cfe_denombrement

    @property
    def cfe_tribune(self):
        """Gets the cfe_tribune of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_tribune of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: str
        """
        return self._cfe_tribune

    @cfe_tribune.setter
    def cfe_tribune(self, cfe_tribune):
        """Sets the cfe_tribune of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_tribune: The cfe_tribune of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: str
        """

        self._cfe_tribune = cfe_tribune

    @property
    def cfe_nb_evmt(self):
        """Gets the cfe_nb_evmt of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501


        :return: The cfe_nb_evmt of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._cfe_nb_evmt

    @cfe_nb_evmt.setter
    def cfe_nb_evmt(self, cfe_nb_evmt):
        """Sets the cfe_nb_evmt of this MatchFeuilleEvenementJsonldMatchFeuille.


        :param cfe_nb_evmt: The cfe_nb_evmt of this MatchFeuilleEvenementJsonldMatchFeuille.  # noqa: E501
        :type: int
        """

        self._cfe_nb_evmt = cfe_nb_evmt

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MatchFeuilleEvenementJsonldMatchFeuille, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MatchFeuilleEvenementJsonldMatchFeuille):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
