# coding: utf-8

"""

    # Authentication  <!-- ReDoc-Inject: <security-definitions> -->  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MatchFeuilleMatchFeuille(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cfm_no': 'int',
        'cfm_statut': 'int',
        'ma_min_period1': 'int',
        'chbx_prolongations': 'bool',
        'chbx_match_arrete': 'bool',
        'chbx_match_non_joue': 'bool',
        'match_feuille_evenements': 'list[MatchFeuilleEvenementMatchFeuille]',
        'match_feuille_compos': 'list[MatchFeuilleCompoMatchFeuille]',
        'match_feuille_membres': 'list[MatchFeuilleMembreMatchFeuille]',
        'match_feuille_reserves': 'list[MatchFeuilleReserveMatchFeuille]'
    }

    attribute_map = {
        'cfm_no': 'cfm_no',
        'cfm_statut': 'cfm_statut',
        'ma_min_period1': 'ma_min_period1',
        'chbx_prolongations': 'chbx_prolongations',
        'chbx_match_arrete': 'chbx_match_arrete',
        'chbx_match_non_joue': 'chbx_match_non_joue',
        'match_feuille_evenements': 'match_feuille_evenements',
        'match_feuille_compos': 'match_feuille_compos',
        'match_feuille_membres': 'match_feuille_membres',
        'match_feuille_reserves': 'match_feuille_reserves'
    }

    def __init__(self, cfm_no=None, cfm_statut=None, ma_min_period1=None, chbx_prolongations=None, chbx_match_arrete=None, chbx_match_non_joue=None, match_feuille_evenements=None, match_feuille_compos=None, match_feuille_membres=None, match_feuille_reserves=None):  # noqa: E501
        """MatchFeuilleMatchFeuille - a model defined in Swagger"""  # noqa: E501
        self._cfm_no = None
        self._cfm_statut = None
        self._ma_min_period1 = None
        self._chbx_prolongations = None
        self._chbx_match_arrete = None
        self._chbx_match_non_joue = None
        self._match_feuille_evenements = None
        self._match_feuille_compos = None
        self._match_feuille_membres = None
        self._match_feuille_reserves = None
        self.discriminator = None
        if cfm_no is not None:
            self.cfm_no = cfm_no
        if cfm_statut is not None:
            self.cfm_statut = cfm_statut
        if ma_min_period1 is not None:
            self.ma_min_period1 = ma_min_period1
        if chbx_prolongations is not None:
            self.chbx_prolongations = chbx_prolongations
        if chbx_match_arrete is not None:
            self.chbx_match_arrete = chbx_match_arrete
        if chbx_match_non_joue is not None:
            self.chbx_match_non_joue = chbx_match_non_joue
        if match_feuille_evenements is not None:
            self.match_feuille_evenements = match_feuille_evenements
        if match_feuille_compos is not None:
            self.match_feuille_compos = match_feuille_compos
        if match_feuille_membres is not None:
            self.match_feuille_membres = match_feuille_membres
        if match_feuille_reserves is not None:
            self.match_feuille_reserves = match_feuille_reserves

    @property
    def cfm_no(self):
        """Gets the cfm_no of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The cfm_no of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._cfm_no

    @cfm_no.setter
    def cfm_no(self, cfm_no):
        """Sets the cfm_no of this MatchFeuilleMatchFeuille.


        :param cfm_no: The cfm_no of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: int
        """

        self._cfm_no = cfm_no

    @property
    def cfm_statut(self):
        """Gets the cfm_statut of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The cfm_statut of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._cfm_statut

    @cfm_statut.setter
    def cfm_statut(self, cfm_statut):
        """Sets the cfm_statut of this MatchFeuilleMatchFeuille.


        :param cfm_statut: The cfm_statut of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: int
        """

        self._cfm_statut = cfm_statut

    @property
    def ma_min_period1(self):
        """Gets the ma_min_period1 of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The ma_min_period1 of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: int
        """
        return self._ma_min_period1

    @ma_min_period1.setter
    def ma_min_period1(self, ma_min_period1):
        """Sets the ma_min_period1 of this MatchFeuilleMatchFeuille.


        :param ma_min_period1: The ma_min_period1 of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: int
        """

        self._ma_min_period1 = ma_min_period1

    @property
    def chbx_prolongations(self):
        """Gets the chbx_prolongations of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The chbx_prolongations of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: bool
        """
        return self._chbx_prolongations

    @chbx_prolongations.setter
    def chbx_prolongations(self, chbx_prolongations):
        """Sets the chbx_prolongations of this MatchFeuilleMatchFeuille.


        :param chbx_prolongations: The chbx_prolongations of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: bool
        """

        self._chbx_prolongations = chbx_prolongations

    @property
    def chbx_match_arrete(self):
        """Gets the chbx_match_arrete of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The chbx_match_arrete of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: bool
        """
        return self._chbx_match_arrete

    @chbx_match_arrete.setter
    def chbx_match_arrete(self, chbx_match_arrete):
        """Sets the chbx_match_arrete of this MatchFeuilleMatchFeuille.


        :param chbx_match_arrete: The chbx_match_arrete of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: bool
        """

        self._chbx_match_arrete = chbx_match_arrete

    @property
    def chbx_match_non_joue(self):
        """Gets the chbx_match_non_joue of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The chbx_match_non_joue of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: bool
        """
        return self._chbx_match_non_joue

    @chbx_match_non_joue.setter
    def chbx_match_non_joue(self, chbx_match_non_joue):
        """Sets the chbx_match_non_joue of this MatchFeuilleMatchFeuille.


        :param chbx_match_non_joue: The chbx_match_non_joue of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: bool
        """

        self._chbx_match_non_joue = chbx_match_non_joue

    @property
    def match_feuille_evenements(self):
        """Gets the match_feuille_evenements of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The match_feuille_evenements of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: list[MatchFeuilleEvenementMatchFeuille]
        """
        return self._match_feuille_evenements

    @match_feuille_evenements.setter
    def match_feuille_evenements(self, match_feuille_evenements):
        """Sets the match_feuille_evenements of this MatchFeuilleMatchFeuille.


        :param match_feuille_evenements: The match_feuille_evenements of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: list[MatchFeuilleEvenementMatchFeuille]
        """

        self._match_feuille_evenements = match_feuille_evenements

    @property
    def match_feuille_compos(self):
        """Gets the match_feuille_compos of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The match_feuille_compos of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: list[MatchFeuilleCompoMatchFeuille]
        """
        return self._match_feuille_compos

    @match_feuille_compos.setter
    def match_feuille_compos(self, match_feuille_compos):
        """Sets the match_feuille_compos of this MatchFeuilleMatchFeuille.


        :param match_feuille_compos: The match_feuille_compos of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: list[MatchFeuilleCompoMatchFeuille]
        """

        self._match_feuille_compos = match_feuille_compos

    @property
    def match_feuille_membres(self):
        """Gets the match_feuille_membres of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The match_feuille_membres of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: list[MatchFeuilleMembreMatchFeuille]
        """
        return self._match_feuille_membres

    @match_feuille_membres.setter
    def match_feuille_membres(self, match_feuille_membres):
        """Sets the match_feuille_membres of this MatchFeuilleMatchFeuille.


        :param match_feuille_membres: The match_feuille_membres of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: list[MatchFeuilleMembreMatchFeuille]
        """

        self._match_feuille_membres = match_feuille_membres

    @property
    def match_feuille_reserves(self):
        """Gets the match_feuille_reserves of this MatchFeuilleMatchFeuille.  # noqa: E501


        :return: The match_feuille_reserves of this MatchFeuilleMatchFeuille.  # noqa: E501
        :rtype: list[MatchFeuilleReserveMatchFeuille]
        """
        return self._match_feuille_reserves

    @match_feuille_reserves.setter
    def match_feuille_reserves(self, match_feuille_reserves):
        """Sets the match_feuille_reserves of this MatchFeuilleMatchFeuille.


        :param match_feuille_reserves: The match_feuille_reserves of this MatchFeuilleMatchFeuille.  # noqa: E501
        :type: list[MatchFeuilleReserveMatchFeuille]
        """

        self._match_feuille_reserves = match_feuille_reserves

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MatchFeuilleMatchFeuille, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MatchFeuilleMatchFeuille):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
