Metadata-Version: 2.1
Name: hspf_utils
Version: 6.0.10
Summary: Command line script and Python library to develop water balance from HSPF models
Author-email: Tim Cera <tim@cerazone.net>
License: BSD-3-Clause
Project-URL: documentation, https://timcera.bitbucket.io/hspf_utils/docs/index.html#hspf_utils-documentation
Project-URL: github, https://github.com/timcera/hspf_utils
Project-URL: bitbucket, https://bitbucket.org/timcera/hspf_utils/src/main/
Keywords: python,cli-app,hspf,watershed,hydrology,hydrologic,simulation
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: toolbox-utils<6.0.0,>=5.0.0
Requires-Dist: cltoolbox>1.1.0
Requires-Dist: hspfbintoolbox<10.0.0,>=9.0.0
Provides-Extra: dev
Requires-Dist: bandit; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: blacken-docs; extra == "dev"
Requires-Dist: black-nbconvert; extra == "dev"
Requires-Dist: cleanpy; extra == "dev"
Requires-Dist: commitizen; extra == "dev"
Requires-Dist: coverage[toml]; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pyflakes; extra == "dev"
Requires-Dist: pylama; extra == "dev"
Requires-Dist: pyle; extra == "dev"
Requires-Dist: pylint; extra == "dev"
Requires-Dist: pyre; extra == "dev"
Requires-Dist: pyroma; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-mpl; extra == "dev"
Requires-Dist: pyupgrade; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: unimport; extra == "dev"
Requires-Dist: velin; extra == "dev"
Requires-Dist: vulture; extra == "dev"

.. image:: https://github.com/timcera/hspf_utils/actions/workflows/pypi-package.yml/badge.svg
    :alt: Tests
    :target: https://github.com/timcera/hspf_utils/actions/workflows/pypi-package.yml
    :height: 20

.. image:: https://img.shields.io/coveralls/github/timcera/hspf_utils
    :alt: Test Coverage
    :target: https://coveralls.io/r/timcera/hspf_utils?branch=master
    :height: 20

.. image:: https://img.shields.io/pypi/v/hspf_utils.svg
    :alt: Latest release
    :target: https://pypi.python.org/pypi/hspf_utils/
    :height: 20

.. image:: https://img.shields.io/pypi/l/hspf_utils.svg
    :alt: BSD-3 clause license
    :target: https://pypi.python.org/pypi/hspf_utils/
    :height: 20

.. image:: https://img.shields.io/pypi/dd/hspf_utils.svg
    :alt: hspf_utils downloads
    :target: https://pypi.python.org/pypi/hspf_utils/
    :height: 20

.. image:: https://img.shields.io/pypi/pyversions/hspf_utils
    :alt: PyPI - Python Version
    :target: https://pypi.org/project/hspf_utils/
    :height: 20

hspf_utils - Quick Guide
========================
The hspf_utils is a command line script and Python library of utilities to work
with the Hydrological Simulation Program - FORTRAN (HSPF).  Uses pandas
(http://pandas.pydata.org/) or numpy (http://numpy.scipy.org) for any heavy
lifting.

Requirements
------------
* hspfbintoolbox - Utility to extract time-series from HSFP binary output
  files; collected and installed by 'pip' or 'easy_install' command.

Installation
------------
Should be as easy as running ``pip install hspf_utils`` or
``conda install -c conda-forge hspf_utils`` at any command line.

Usage - Command Line
--------------------
Just run 'hspf_utils --help' to get a list of subcommands::

  usage: hspf_utils [-h] {about,detailed,summary,mapping,parameters} ...

  positional arguments:
    {about,detailed,summary,mapping,parameters}
      about               Display version number and system information.
      detailed            Develops a detailed water balance.
      summary             Develops a summary water balance.
      mapping             Develops a csv file appropriate for joining to a GIS
                          layer.
      parameters          Develops a table of parameter values.

  optional arguments:
    -h, --help            show this help message and exit

For the subcommands that output data it is printed to the screen and you can
then redirect to a file.

Usage - API
-----------
You can use all of the command line subcommands as functions.  The function
signature is identical to the command line subcommands.  The return is always
a PANDAS DataFrame.  Input can be a CSV or TAB separated file, or a PANDAS
DataFrame and is supplied to the function via the 'input_ts' keyword.

Simply import hspf_utils::

    import hspf_utils

    # Then you could call the functions

    ntsd = hspf_utils.summary("test.hbn", uci="test.uci")
